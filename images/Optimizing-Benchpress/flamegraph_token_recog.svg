<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1157.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1157.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (79 samples, 0.18%)</title><rect x="0.0726%" y="549" width="0.1791%" height="15" fill="rgb(227,0,7)"/><text x="0.3226%" y="559.50"></text></g><g><title>nom::sequence::pair::{{closure}} (52 samples, 0.12%)</title><rect x="0.1338%" y="533" width="0.1179%" height="15" fill="rgb(217,0,24)"/><text x="0.3838%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (52 samples, 0.12%)</title><rect x="0.1338%" y="517" width="0.1179%" height="15" fill="rgb(221,193,54)"/><text x="0.3838%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (89 samples, 0.20%)</title><rect x="0.0703%" y="581" width="0.2018%" height="15" fill="rgb(248,212,6)"/><text x="0.3203%" y="591.50"></text></g><g><title>nom::combinator::map::{{closure}} (89 samples, 0.20%)</title><rect x="0.0703%" y="565" width="0.2018%" height="15" fill="rgb(208,68,35)"/><text x="0.3203%" y="575.50"></text></g><g><title>compiler::parse::expression::path (91 samples, 0.21%)</title><rect x="0.0680%" y="629" width="0.2063%" height="15" fill="rgb(232,128,0)"/><text x="0.3180%" y="639.50"></text></g><g><title>nom::branch::alt::{{closure}} (90 samples, 0.20%)</title><rect x="0.0703%" y="613" width="0.2041%" height="15" fill="rgb(207,160,47)"/><text x="0.3203%" y="623.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (90 samples, 0.20%)</title><rect x="0.0703%" y="597" width="0.2041%" height="15" fill="rgb(228,23,34)"/><text x="0.3203%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (124 samples, 0.28%)</title><rect x="0.0091%" y="661" width="0.2812%" height="15" fill="rgb(218,30,26)"/><text x="0.2591%" y="671.50"></text></g><g><title>core::ops::function::FnMut::call_mut (124 samples, 0.28%)</title><rect x="0.0091%" y="645" width="0.2812%" height="15" fill="rgb(220,122,19)"/><text x="0.2591%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="0.0068%" y="1077" width="0.2857%" height="15" fill="rgb(250,228,42)"/><text x="0.2568%" y="1087.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (126 samples, 0.29%)</title><rect x="0.0068%" y="1061" width="0.2857%" height="15" fill="rgb(240,193,28)"/><text x="0.2568%" y="1071.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="0.0068%" y="1045" width="0.2857%" height="15" fill="rgb(216,20,37)"/><text x="0.2568%" y="1055.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (126 samples, 0.29%)</title><rect x="0.0068%" y="1029" width="0.2857%" height="15" fill="rgb(206,188,39)"/><text x="0.2568%" y="1039.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="0.0068%" y="1013" width="0.2857%" height="15" fill="rgb(217,207,13)"/><text x="0.2568%" y="1023.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (126 samples, 0.29%)</title><rect x="0.0068%" y="997" width="0.2857%" height="15" fill="rgb(231,73,38)"/><text x="0.2568%" y="1007.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="0.0068%" y="981" width="0.2857%" height="15" fill="rgb(225,20,46)"/><text x="0.2568%" y="991.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (126 samples, 0.29%)</title><rect x="0.0068%" y="965" width="0.2857%" height="15" fill="rgb(210,31,41)"/><text x="0.2568%" y="975.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="0.0068%" y="949" width="0.2857%" height="15" fill="rgb(221,200,47)"/><text x="0.2568%" y="959.50"></text></g><g><title>core::ops::function::FnMut::call_mut (126 samples, 0.29%)</title><rect x="0.0068%" y="933" width="0.2857%" height="15" fill="rgb(226,26,5)"/><text x="0.2568%" y="943.50"></text></g><g><title>compiler::parse::expression::expression (126 samples, 0.29%)</title><rect x="0.0068%" y="917" width="0.2857%" height="15" fill="rgb(249,33,26)"/><text x="0.2568%" y="927.50"></text></g><g><title>nom::branch::alt::{{closure}} (126 samples, 0.29%)</title><rect x="0.0068%" y="901" width="0.2857%" height="15" fill="rgb(235,183,28)"/><text x="0.2568%" y="911.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (126 samples, 0.29%)</title><rect x="0.0068%" y="885" width="0.2857%" height="15" fill="rgb(221,5,38)"/><text x="0.2568%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="0.0068%" y="869" width="0.2857%" height="15" fill="rgb(247,18,42)"/><text x="0.2568%" y="879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (126 samples, 0.29%)</title><rect x="0.0068%" y="853" width="0.2857%" height="15" fill="rgb(241,131,45)"/><text x="0.2568%" y="863.50"></text></g><g><title>compiler::parse::expression::negative (126 samples, 0.29%)</title><rect x="0.0068%" y="837" width="0.2857%" height="15" fill="rgb(249,31,29)"/><text x="0.2568%" y="847.50"></text></g><g><title>nom::combinator::map::{{closure}} (126 samples, 0.29%)</title><rect x="0.0068%" y="821" width="0.2857%" height="15" fill="rgb(225,111,53)"/><text x="0.2568%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="0.0068%" y="805" width="0.2857%" height="15" fill="rgb(238,160,17)"/><text x="0.2568%" y="815.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (126 samples, 0.29%)</title><rect x="0.0068%" y="789" width="0.2857%" height="15" fill="rgb(214,148,48)"/><text x="0.2568%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="0.0068%" y="773" width="0.2857%" height="15" fill="rgb(232,36,49)"/><text x="0.2568%" y="783.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (126 samples, 0.29%)</title><rect x="0.0068%" y="757" width="0.2857%" height="15" fill="rgb(209,103,24)"/><text x="0.2568%" y="767.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="0.0068%" y="741" width="0.2857%" height="15" fill="rgb(229,88,8)"/><text x="0.2568%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (126 samples, 0.29%)</title><rect x="0.0068%" y="725" width="0.2857%" height="15" fill="rgb(213,181,19)"/><text x="0.2568%" y="735.50"></text></g><g><title>compiler::parse::expression::expression (126 samples, 0.29%)</title><rect x="0.0068%" y="709" width="0.2857%" height="15" fill="rgb(254,191,54)"/><text x="0.2568%" y="719.50"></text></g><g><title>nom::branch::alt::{{closure}} (126 samples, 0.29%)</title><rect x="0.0068%" y="693" width="0.2857%" height="15" fill="rgb(241,83,37)"/><text x="0.2568%" y="703.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (126 samples, 0.29%)</title><rect x="0.0068%" y="677" width="0.2857%" height="15" fill="rgb(233,36,39)"/><text x="0.2568%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (56 samples, 0.13%)</title><rect x="0.3968%" y="677" width="0.1270%" height="15" fill="rgb(226,3,54)"/><text x="0.6468%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (47 samples, 0.11%)</title><rect x="0.4172%" y="661" width="0.1066%" height="15" fill="rgb(245,192,40)"/><text x="0.6672%" y="671.50"></text></g><g><title>alloc::string::String::push_str (47 samples, 0.11%)</title><rect x="0.4172%" y="645" width="0.1066%" height="15" fill="rgb(238,167,29)"/><text x="0.6672%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (47 samples, 0.11%)</title><rect x="0.4172%" y="629" width="0.1066%" height="15" fill="rgb(232,182,51)"/><text x="0.6672%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (47 samples, 0.11%)</title><rect x="0.4172%" y="613" width="0.1066%" height="15" fill="rgb(231,60,39)"/><text x="0.6672%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (47 samples, 0.11%)</title><rect x="0.4172%" y="597" width="0.1066%" height="15" fill="rgb(208,69,12)"/><text x="0.6672%" y="607.50"></text></g><g><title>alloc::fmt::format (66 samples, 0.15%)</title><rect x="0.3877%" y="725" width="0.1497%" height="15" fill="rgb(235,93,37)"/><text x="0.6377%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (66 samples, 0.15%)</title><rect x="0.3877%" y="709" width="0.1497%" height="15" fill="rgb(213,116,39)"/><text x="0.6377%" y="719.50"></text></g><g><title>core::fmt::write (66 samples, 0.15%)</title><rect x="0.3877%" y="693" width="0.1497%" height="15" fill="rgb(222,207,29)"/><text x="0.6377%" y="703.50"></text></g><g><title>compiler::generate::generator::generate (126 samples, 0.29%)</title><rect x="0.2948%" y="981" width="0.2857%" height="15" fill="rgb(206,96,30)"/><text x="0.5448%" y="991.50"></text></g><g><title>compiler::generate::generator::gen_body (126 samples, 0.29%)</title><rect x="0.2948%" y="965" width="0.2857%" height="15" fill="rgb(218,138,4)"/><text x="0.5448%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (126 samples, 0.29%)</title><rect x="0.2948%" y="949" width="0.2857%" height="15" fill="rgb(250,191,14)"/><text x="0.5448%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (126 samples, 0.29%)</title><rect x="0.2948%" y="933" width="0.2857%" height="15" fill="rgb(239,60,40)"/><text x="0.5448%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (126 samples, 0.29%)</title><rect x="0.2948%" y="917" width="0.2857%" height="15" fill="rgb(206,27,48)"/><text x="0.5448%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (126 samples, 0.29%)</title><rect x="0.2948%" y="901" width="0.2857%" height="15" fill="rgb(225,35,8)"/><text x="0.5448%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (126 samples, 0.29%)</title><rect x="0.2948%" y="885" width="0.2857%" height="15" fill="rgb(250,213,24)"/><text x="0.5448%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (126 samples, 0.29%)</title><rect x="0.2948%" y="869" width="0.2857%" height="15" fill="rgb(247,123,22)"/><text x="0.5448%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (126 samples, 0.29%)</title><rect x="0.2948%" y="853" width="0.2857%" height="15" fill="rgb(231,138,38)"/><text x="0.5448%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (126 samples, 0.29%)</title><rect x="0.2948%" y="837" width="0.2857%" height="15" fill="rgb(231,145,46)"/><text x="0.5448%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (126 samples, 0.29%)</title><rect x="0.2948%" y="821" width="0.2857%" height="15" fill="rgb(251,118,11)"/><text x="0.5448%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (126 samples, 0.29%)</title><rect x="0.2948%" y="805" width="0.2857%" height="15" fill="rgb(217,147,25)"/><text x="0.5448%" y="815.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (126 samples, 0.29%)</title><rect x="0.2948%" y="789" width="0.2857%" height="15" fill="rgb(247,81,37)"/><text x="0.5448%" y="799.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (126 samples, 0.29%)</title><rect x="0.2948%" y="773" width="0.2857%" height="15" fill="rgb(209,12,38)"/><text x="0.5448%" y="783.50"></text></g><g><title>compiler::generate::templates::expression (85 samples, 0.19%)</title><rect x="0.3877%" y="757" width="0.1927%" height="15" fill="rgb(227,1,9)"/><text x="0.6377%" y="767.50"></text></g><g><title>compiler::generate::templates::guard (85 samples, 0.19%)</title><rect x="0.3877%" y="741" width="0.1927%" height="15" fill="rgb(248,47,43)"/><text x="0.6377%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (51 samples, 0.12%)</title><rect x="1.3832%" y="581" width="0.1156%" height="15" fill="rgb(221,10,30)"/><text x="1.6332%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (51 samples, 0.12%)</title><rect x="1.3832%" y="565" width="0.1156%" height="15" fill="rgb(210,229,1)"/><text x="1.6332%" y="575.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (51 samples, 0.12%)</title><rect x="1.3832%" y="549" width="0.1156%" height="15" fill="rgb(222,148,37)"/><text x="1.6332%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (51 samples, 0.12%)</title><rect x="1.3832%" y="533" width="0.1156%" height="15" fill="rgb(234,67,33)"/><text x="1.6332%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (51 samples, 0.12%)</title><rect x="1.3832%" y="517" width="0.1156%" height="15" fill="rgb(247,98,35)"/><text x="1.6332%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (51 samples, 0.12%)</title><rect x="1.3832%" y="501" width="0.1156%" height="15" fill="rgb(247,138,52)"/><text x="1.6332%" y="511.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (102 samples, 0.23%)</title><rect x="1.3673%" y="597" width="0.2313%" height="15" fill="rgb(213,79,30)"/><text x="1.6173%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1,410 samples, 3.20%)</title><rect x="1.6054%" y="597" width="3.1971%" height="15" fill="rgb(246,177,23)"/><text x="1.8554%" y="607.50">all..</text></g><g><title>core::ptr::write (1,246 samples, 2.83%)</title><rect x="1.9772%" y="581" width="2.8253%" height="15" fill="rgb(230,62,27)"/><text x="2.2272%" y="591.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (50 samples, 0.11%)</title><rect x="5.1834%" y="565" width="0.1134%" height="15" fill="rgb(216,154,8)"/><text x="5.4334%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (53 samples, 0.12%)</title><rect x="5.1834%" y="581" width="0.1202%" height="15" fill="rgb(244,35,45)"/><text x="5.4334%" y="591.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (228 samples, 0.52%)</title><rect x="4.8025%" y="597" width="0.5170%" height="15" fill="rgb(251,115,12)"/><text x="5.0525%" y="607.50"></text></g><g><title>regex::input::InputAt::next_pos (47 samples, 0.11%)</title><rect x="5.3195%" y="597" width="0.1066%" height="15" fill="rgb(240,54,50)"/><text x="5.5695%" y="607.50"></text></g><g><title>__libc_start_main (2,435 samples, 5.52%)</title><rect x="0.2948%" y="1077" width="5.5213%" height="15" fill="rgb(233,84,52)"/><text x="0.5448%" y="1087.50">__libc_..</text></g><g><title>main (2,435 samples, 5.52%)</title><rect x="0.2948%" y="1061" width="5.5213%" height="15" fill="rgb(207,117,47)"/><text x="0.5448%" y="1071.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,435 samples, 5.52%)</title><rect x="0.2948%" y="1045" width="5.5213%" height="15" fill="rgb(249,43,39)"/><text x="0.5448%" y="1055.50">std::sy..</text></g><g><title>core::ops::function::FnOnce::call_once (2,435 samples, 5.52%)</title><rect x="0.2948%" y="1029" width="5.5213%" height="15" fill="rgb(209,38,44)"/><text x="0.5448%" y="1039.50">core::o..</text></g><g><title>bench::main (2,435 samples, 5.52%)</title><rect x="0.2948%" y="1013" width="5.5213%" height="15" fill="rgb(236,212,23)"/><text x="0.5448%" y="1023.50">bench::..</text></g><g><title>compiler::compile (2,435 samples, 5.52%)</title><rect x="0.2948%" y="997" width="5.5213%" height="15" fill="rgb(242,79,21)"/><text x="0.5448%" y="1007.50">compile..</text></g><g><title>compiler::pre_fixer::pre_fix (2,309 samples, 5.24%)</title><rect x="0.5805%" y="981" width="5.2356%" height="15" fill="rgb(211,96,35)"/><text x="0.8305%" y="991.50">compil..</text></g><g><title>compiler::pre_fixer::fix_iter (2,309 samples, 5.24%)</title><rect x="0.5805%" y="965" width="5.2356%" height="15" fill="rgb(253,215,40)"/><text x="0.8305%" y="975.50">compil..</text></g><g><title>regex::re_unicode::Regex::replace (2,309 samples, 5.24%)</title><rect x="0.5805%" y="949" width="5.2356%" height="15" fill="rgb(211,81,21)"/><text x="0.8305%" y="959.50">regex:..</text></g><g><title>regex::re_unicode::Regex::replacen (2,309 samples, 5.24%)</title><rect x="0.5805%" y="933" width="5.2356%" height="15" fill="rgb(208,190,38)"/><text x="0.8305%" y="943.50">regex:..</text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (2,309 samples, 5.24%)</title><rect x="0.5805%" y="917" width="5.2356%" height="15" fill="rgb(235,213,38)"/><text x="0.8305%" y="927.50">&lt;F as ..</text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (2,309 samples, 5.24%)</title><rect x="0.5805%" y="901" width="5.2356%" height="15" fill="rgb(237,122,38)"/><text x="0.8305%" y="911.50">compil..</text></g><g><title>compiler::pre_fixer::fix_iter (2,309 samples, 5.24%)</title><rect x="0.5805%" y="885" width="5.2356%" height="15" fill="rgb(244,218,35)"/><text x="0.8305%" y="895.50">compil..</text></g><g><title>regex::re_unicode::Regex::replace (2,309 samples, 5.24%)</title><rect x="0.5805%" y="869" width="5.2356%" height="15" fill="rgb(240,68,47)"/><text x="0.8305%" y="879.50">regex:..</text></g><g><title>regex::re_unicode::Regex::replacen (2,309 samples, 5.24%)</title><rect x="0.5805%" y="853" width="5.2356%" height="15" fill="rgb(210,16,53)"/><text x="0.8305%" y="863.50">regex:..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2,299 samples, 5.21%)</title><rect x="0.6031%" y="837" width="5.2129%" height="15" fill="rgb(235,124,12)"/><text x="0.8531%" y="847.50">core::..</text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2,299 samples, 5.21%)</title><rect x="0.6031%" y="821" width="5.2129%" height="15" fill="rgb(224,169,11)"/><text x="0.8531%" y="831.50">core::..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2,299 samples, 5.21%)</title><rect x="0.6031%" y="805" width="5.2129%" height="15" fill="rgb(250,166,2)"/><text x="0.8531%" y="815.50">core::..</text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,299 samples, 5.21%)</title><rect x="0.6031%" y="789" width="5.2129%" height="15" fill="rgb(242,216,29)"/><text x="0.8531%" y="799.50">&lt;core:..</text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (2,299 samples, 5.21%)</title><rect x="0.6031%" y="773" width="5.2129%" height="15" fill="rgb(230,116,27)"/><text x="0.8531%" y="783.50">&lt;regex..</text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,299 samples, 5.21%)</title><rect x="0.6031%" y="757" width="5.2129%" height="15" fill="rgb(228,99,48)"/><text x="0.8531%" y="767.50">&lt;regex..</text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (2,299 samples, 5.21%)</title><rect x="0.6031%" y="741" width="5.2129%" height="15" fill="rgb(253,11,6)"/><text x="0.8531%" y="751.50">&lt;regex..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2,299 samples, 5.21%)</title><rect x="0.6031%" y="725" width="5.2129%" height="15" fill="rgb(247,143,39)"/><text x="0.8531%" y="735.50">&lt;regex..</text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (2,299 samples, 5.21%)</title><rect x="0.6031%" y="709" width="5.2129%" height="15" fill="rgb(236,97,10)"/><text x="0.8531%" y="719.50">regex:..</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (2,299 samples, 5.21%)</title><rect x="0.6031%" y="693" width="5.2129%" height="15" fill="rgb(233,208,19)"/><text x="0.8531%" y="703.50">regex:..</text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (2,299 samples, 5.21%)</title><rect x="0.6031%" y="677" width="5.2129%" height="15" fill="rgb(216,164,2)"/><text x="0.8531%" y="687.50">regex:..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (2,299 samples, 5.21%)</title><rect x="0.6031%" y="661" width="5.2129%" height="15" fill="rgb(220,129,5)"/><text x="0.8531%" y="671.50">regex:..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (2,299 samples, 5.21%)</title><rect x="0.6031%" y="645" width="5.2129%" height="15" fill="rgb(242,17,10)"/><text x="0.8531%" y="655.50">regex:..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (2,298 samples, 5.21%)</title><rect x="0.6054%" y="629" width="5.2106%" height="15" fill="rgb(242,107,0)"/><text x="0.8554%" y="639.50">regex:..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (2,298 samples, 5.21%)</title><rect x="0.6054%" y="613" width="5.2106%" height="15" fill="rgb(251,28,31)"/><text x="0.8554%" y="623.50">regex:..</text></g><g><title>regex::prog::InstRanges::matches (172 samples, 0.39%)</title><rect x="5.4261%" y="597" width="0.3900%" height="15" fill="rgb(233,223,10)"/><text x="5.6761%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::le (84 samples, 0.19%)</title><rect x="5.6256%" y="581" width="0.1905%" height="15" fill="rgb(215,21,27)"/><text x="5.8756%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (48 samples, 0.11%)</title><rect x="5.9090%" y="485" width="0.1088%" height="15" fill="rgb(232,23,21)"/><text x="6.1590%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (47 samples, 0.11%)</title><rect x="5.9113%" y="469" width="0.1066%" height="15" fill="rgb(244,5,23)"/><text x="6.1613%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (47 samples, 0.11%)</title><rect x="5.9113%" y="453" width="0.1066%" height="15" fill="rgb(226,81,46)"/><text x="6.1613%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (45 samples, 0.10%)</title><rect x="5.9158%" y="437" width="0.1020%" height="15" fill="rgb(247,70,30)"/><text x="6.1658%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (53 samples, 0.12%)</title><rect x="5.9090%" y="581" width="0.1202%" height="15" fill="rgb(212,68,19)"/><text x="6.1590%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (53 samples, 0.12%)</title><rect x="5.9090%" y="565" width="0.1202%" height="15" fill="rgb(240,187,13)"/><text x="6.1590%" y="575.50"></text></g><g><title>alloc::string::String::push_str (53 samples, 0.12%)</title><rect x="5.9090%" y="549" width="0.1202%" height="15" fill="rgb(223,113,26)"/><text x="6.1590%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (53 samples, 0.12%)</title><rect x="5.9090%" y="533" width="0.1202%" height="15" fill="rgb(206,192,2)"/><text x="6.1590%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (53 samples, 0.12%)</title><rect x="5.9090%" y="517" width="0.1202%" height="15" fill="rgb(241,108,4)"/><text x="6.1590%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (53 samples, 0.12%)</title><rect x="5.9090%" y="501" width="0.1202%" height="15" fill="rgb(247,173,49)"/><text x="6.1590%" y="511.50"></text></g><g><title>alloc::fmt::format (60 samples, 0.14%)</title><rect x="5.8977%" y="629" width="0.1360%" height="15" fill="rgb(224,114,35)"/><text x="6.1477%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (57 samples, 0.13%)</title><rect x="5.9045%" y="613" width="0.1292%" height="15" fill="rgb(245,159,27)"/><text x="6.1545%" y="623.50"></text></g><g><title>core::fmt::write (57 samples, 0.13%)</title><rect x="5.9045%" y="597" width="0.1292%" height="15" fill="rgb(245,172,44)"/><text x="6.1545%" y="607.50"></text></g><g><title>compiler::generate::templates::indent (61 samples, 0.14%)</title><rect x="6.4442%" y="197" width="0.1383%" height="15" fill="rgb(236,23,11)"/><text x="6.6942%" y="207.50"></text></g><g><title>compiler::generate::templates::if_else (80 samples, 0.18%)</title><rect x="6.4147%" y="213" width="0.1814%" height="15" fill="rgb(205,117,38)"/><text x="6.6647%" y="223.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (125 samples, 0.28%)</title><rect x="6.3625%" y="229" width="0.2834%" height="15" fill="rgb(237,72,25)"/><text x="6.6125%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (133 samples, 0.30%)</title><rect x="6.3467%" y="309" width="0.3016%" height="15" fill="rgb(244,70,9)"/><text x="6.5967%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (133 samples, 0.30%)</title><rect x="6.3467%" y="293" width="0.3016%" height="15" fill="rgb(217,125,39)"/><text x="6.5967%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (133 samples, 0.30%)</title><rect x="6.3467%" y="277" width="0.3016%" height="15" fill="rgb(235,36,10)"/><text x="6.5967%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (133 samples, 0.30%)</title><rect x="6.3467%" y="261" width="0.3016%" height="15" fill="rgb(251,123,47)"/><text x="6.5967%" y="271.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (131 samples, 0.30%)</title><rect x="6.3512%" y="245" width="0.2970%" height="15" fill="rgb(221,13,13)"/><text x="6.6012%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (145 samples, 0.33%)</title><rect x="6.3444%" y="341" width="0.3288%" height="15" fill="rgb(238,131,9)"/><text x="6.5944%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (145 samples, 0.33%)</title><rect x="6.3444%" y="325" width="0.3288%" height="15" fill="rgb(211,50,8)"/><text x="6.5944%" y="335.50"></text></g><g><title>compiler::generate::templates::indent (60 samples, 0.14%)</title><rect x="6.7208%" y="229" width="0.1360%" height="15" fill="rgb(245,182,24)"/><text x="6.9708%" y="239.50"></text></g><g><title>compiler::generate::templates::iter (71 samples, 0.16%)</title><rect x="6.7004%" y="245" width="0.1610%" height="15" fill="rgb(242,14,37)"/><text x="6.9504%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (126 samples, 0.29%)</title><rect x="6.6732%" y="341" width="0.2857%" height="15" fill="rgb(246,228,12)"/><text x="6.9232%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (126 samples, 0.29%)</title><rect x="6.6732%" y="325" width="0.2857%" height="15" fill="rgb(213,55,15)"/><text x="6.9232%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (126 samples, 0.29%)</title><rect x="6.6732%" y="309" width="0.2857%" height="15" fill="rgb(209,9,3)"/><text x="6.9232%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (126 samples, 0.29%)</title><rect x="6.6732%" y="293" width="0.2857%" height="15" fill="rgb(230,59,30)"/><text x="6.9232%" y="303.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (121 samples, 0.27%)</title><rect x="6.6845%" y="277" width="0.2744%" height="15" fill="rgb(209,121,21)"/><text x="6.9345%" y="287.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (115 samples, 0.26%)</title><rect x="6.6981%" y="261" width="0.2608%" height="15" fill="rgb(220,109,13)"/><text x="6.9481%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (273 samples, 0.62%)</title><rect x="6.3421%" y="405" width="0.6190%" height="15" fill="rgb(232,18,1)"/><text x="6.5921%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (273 samples, 0.62%)</title><rect x="6.3421%" y="389" width="0.6190%" height="15" fill="rgb(215,41,42)"/><text x="6.5921%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (273 samples, 0.62%)</title><rect x="6.3421%" y="373" width="0.6190%" height="15" fill="rgb(224,123,36)"/><text x="6.5921%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (272 samples, 0.62%)</title><rect x="6.3444%" y="357" width="0.6168%" height="15" fill="rgb(240,125,3)"/><text x="6.5944%" y="367.50"></text></g><g><title>compiler::generate::generator::gen_body (312 samples, 0.71%)</title><rect x="6.2741%" y="421" width="0.7075%" height="15" fill="rgb(205,98,50)"/><text x="6.5241%" y="431.50"></text></g><g><title>_int_realloc (62 samples, 0.14%)</title><rect x="7.2967%" y="69" width="0.1406%" height="15" fill="rgb(205,185,37)"/><text x="7.5467%" y="79.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (82 samples, 0.19%)</title><rect x="7.2582%" y="165" width="0.1859%" height="15" fill="rgb(238,207,15)"/><text x="7.5082%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (82 samples, 0.19%)</title><rect x="7.2582%" y="149" width="0.1859%" height="15" fill="rgb(213,199,42)"/><text x="7.5082%" y="159.50"></text></g><g><title>alloc::alloc::realloc (82 samples, 0.19%)</title><rect x="7.2582%" y="133" width="0.1859%" height="15" fill="rgb(235,201,11)"/><text x="7.5082%" y="143.50"></text></g><g><title>__rdl_realloc (82 samples, 0.19%)</title><rect x="7.2582%" y="117" width="0.1859%" height="15" fill="rgb(207,46,11)"/><text x="7.5082%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (82 samples, 0.19%)</title><rect x="7.2582%" y="101" width="0.1859%" height="15" fill="rgb(241,35,35)"/><text x="7.5082%" y="111.50"></text></g><g><title>__GI___libc_realloc (80 samples, 0.18%)</title><rect x="7.2627%" y="85" width="0.1814%" height="15" fill="rgb(243,32,47)"/><text x="7.5127%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (98 samples, 0.22%)</title><rect x="7.2242%" y="181" width="0.2222%" height="15" fill="rgb(247,202,23)"/><text x="7.4742%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (108 samples, 0.24%)</title><rect x="7.2060%" y="245" width="0.2449%" height="15" fill="rgb(219,102,11)"/><text x="7.4560%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (104 samples, 0.24%)</title><rect x="7.2151%" y="229" width="0.2358%" height="15" fill="rgb(243,110,44)"/><text x="7.4651%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (104 samples, 0.24%)</title><rect x="7.2151%" y="213" width="0.2358%" height="15" fill="rgb(222,74,54)"/><text x="7.4651%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (102 samples, 0.23%)</title><rect x="7.2196%" y="197" width="0.2313%" height="15" fill="rgb(216,99,12)"/><text x="7.4696%" y="207.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (133 samples, 0.30%)</title><rect x="7.1902%" y="341" width="0.3016%" height="15" fill="rgb(226,22,26)"/><text x="7.4402%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (127 samples, 0.29%)</title><rect x="7.2038%" y="325" width="0.2880%" height="15" fill="rgb(217,163,10)"/><text x="7.4538%" y="335.50"></text></g><g><title>alloc::string::String::push_str (127 samples, 0.29%)</title><rect x="7.2038%" y="309" width="0.2880%" height="15" fill="rgb(213,25,53)"/><text x="7.4538%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (127 samples, 0.29%)</title><rect x="7.2038%" y="293" width="0.2880%" height="15" fill="rgb(252,105,26)"/><text x="7.4538%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (127 samples, 0.29%)</title><rect x="7.2038%" y="277" width="0.2880%" height="15" fill="rgb(220,39,43)"/><text x="7.4538%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (127 samples, 0.29%)</title><rect x="7.2038%" y="261" width="0.2880%" height="15" fill="rgb(229,68,48)"/><text x="7.4538%" y="271.50"></text></g><g><title>alloc::fmt::format (184 samples, 0.42%)</title><rect x="7.0995%" y="389" width="0.4172%" height="15" fill="rgb(252,8,32)"/><text x="7.3495%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (176 samples, 0.40%)</title><rect x="7.1176%" y="373" width="0.3991%" height="15" fill="rgb(223,20,43)"/><text x="7.3676%" y="383.50"></text></g><g><title>core::fmt::write (168 samples, 0.38%)</title><rect x="7.1357%" y="357" width="0.3809%" height="15" fill="rgb(229,81,49)"/><text x="7.3857%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (45 samples, 0.10%)</title><rect x="7.5235%" y="325" width="0.1020%" height="15" fill="rgb(236,28,36)"/><text x="7.7735%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (45 samples, 0.10%)</title><rect x="7.5235%" y="309" width="0.1020%" height="15" fill="rgb(249,185,26)"/><text x="7.7735%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (45 samples, 0.10%)</title><rect x="7.5235%" y="293" width="0.1020%" height="15" fill="rgb(249,174,33)"/><text x="7.7735%" y="303.50"></text></g><g><title>alloc::string::String::push_str (53 samples, 0.12%)</title><rect x="7.5167%" y="389" width="0.1202%" height="15" fill="rgb(233,201,37)"/><text x="7.7667%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (53 samples, 0.12%)</title><rect x="7.5167%" y="373" width="0.1202%" height="15" fill="rgb(221,78,26)"/><text x="7.7667%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (53 samples, 0.12%)</title><rect x="7.5167%" y="357" width="0.1202%" height="15" fill="rgb(250,127,30)"/><text x="7.7667%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (53 samples, 0.12%)</title><rect x="7.5167%" y="341" width="0.1202%" height="15" fill="rgb(230,49,44)"/><text x="7.7667%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (133 samples, 0.30%)</title><rect x="7.6527%" y="341" width="0.3016%" height="15" fill="rgb(229,67,23)"/><text x="7.9027%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (133 samples, 0.30%)</title><rect x="7.6527%" y="325" width="0.3016%" height="15" fill="rgb(249,83,47)"/><text x="7.9027%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (133 samples, 0.30%)</title><rect x="7.6527%" y="309" width="0.3016%" height="15" fill="rgb(215,43,3)"/><text x="7.9027%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (133 samples, 0.30%)</title><rect x="7.6527%" y="293" width="0.3016%" height="15" fill="rgb(238,154,13)"/><text x="7.9027%" y="303.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (129 samples, 0.29%)</title><rect x="7.6618%" y="277" width="0.2925%" height="15" fill="rgb(219,56,2)"/><text x="7.9118%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (93 samples, 0.21%)</title><rect x="7.7434%" y="261" width="0.2109%" height="15" fill="rgb(233,0,4)"/><text x="7.9934%" y="271.50"></text></g><g><title>compiler::generate::templates::escape_path (151 samples, 0.34%)</title><rect x="7.6368%" y="389" width="0.3424%" height="15" fill="rgb(235,30,7)"/><text x="7.8868%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (151 samples, 0.34%)</title><rect x="7.6368%" y="373" width="0.3424%" height="15" fill="rgb(250,79,13)"/><text x="7.8868%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (151 samples, 0.34%)</title><rect x="7.6368%" y="357" width="0.3424%" height="15" fill="rgb(211,146,34)"/><text x="7.8868%" y="367.50"></text></g><g><title>compiler::generate::templates::guard (428 samples, 0.97%)</title><rect x="7.0790%" y="405" width="0.9705%" height="15" fill="rgb(228,22,38)"/><text x="7.3290%" y="415.50"></text></g><g><title>compiler::generate::templates::expression (453 samples, 1.03%)</title><rect x="7.0360%" y="421" width="1.0272%" height="15" fill="rgb(235,168,5)"/><text x="7.2860%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (51 samples, 0.12%)</title><rect x="8.1153%" y="261" width="0.1156%" height="15" fill="rgb(221,155,16)"/><text x="8.3653%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.11%)</title><rect x="8.1175%" y="245" width="0.1134%" height="15" fill="rgb(215,215,53)"/><text x="8.3675%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (50 samples, 0.11%)</title><rect x="8.1175%" y="229" width="0.1134%" height="15" fill="rgb(223,4,10)"/><text x="8.3675%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.11%)</title><rect x="8.1175%" y="213" width="0.1134%" height="15" fill="rgb(234,103,6)"/><text x="8.3675%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (49 samples, 0.11%)</title><rect x="8.1198%" y="197" width="0.1111%" height="15" fill="rgb(227,97,0)"/><text x="8.3698%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (49 samples, 0.11%)</title><rect x="8.1198%" y="181" width="0.1111%" height="15" fill="rgb(234,150,53)"/><text x="8.3698%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (49 samples, 0.11%)</title><rect x="8.1198%" y="165" width="0.1111%" height="15" fill="rgb(228,201,54)"/><text x="8.3698%" y="175.50"></text></g><g><title>alloc::alloc::realloc (49 samples, 0.11%)</title><rect x="8.1198%" y="149" width="0.1111%" height="15" fill="rgb(222,22,37)"/><text x="8.3698%" y="159.50"></text></g><g><title>__rdl_realloc (49 samples, 0.11%)</title><rect x="8.1198%" y="133" width="0.1111%" height="15" fill="rgb(237,53,32)"/><text x="8.3698%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (49 samples, 0.11%)</title><rect x="8.1198%" y="117" width="0.1111%" height="15" fill="rgb(233,25,53)"/><text x="8.3698%" y="127.50"></text></g><g><title>__GI___libc_realloc (49 samples, 0.11%)</title><rect x="8.1198%" y="101" width="0.1111%" height="15" fill="rgb(210,40,34)"/><text x="8.3698%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (63 samples, 0.14%)</title><rect x="8.1130%" y="357" width="0.1429%" height="15" fill="rgb(241,220,44)"/><text x="8.3630%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (63 samples, 0.14%)</title><rect x="8.1130%" y="341" width="0.1429%" height="15" fill="rgb(235,28,35)"/><text x="8.3630%" y="351.50"></text></g><g><title>alloc::string::String::push_str (63 samples, 0.14%)</title><rect x="8.1130%" y="325" width="0.1429%" height="15" fill="rgb(210,56,17)"/><text x="8.3630%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (63 samples, 0.14%)</title><rect x="8.1130%" y="309" width="0.1429%" height="15" fill="rgb(224,130,29)"/><text x="8.3630%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (63 samples, 0.14%)</title><rect x="8.1130%" y="293" width="0.1429%" height="15" fill="rgb(235,212,8)"/><text x="8.3630%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (63 samples, 0.14%)</title><rect x="8.1130%" y="277" width="0.1429%" height="15" fill="rgb(223,33,50)"/><text x="8.3630%" y="287.50"></text></g><g><title>alloc::fmt::format (71 samples, 0.16%)</title><rect x="8.1017%" y="405" width="0.1610%" height="15" fill="rgb(219,149,13)"/><text x="8.3517%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (70 samples, 0.16%)</title><rect x="8.1039%" y="389" width="0.1587%" height="15" fill="rgb(250,156,29)"/><text x="8.3539%" y="399.50"></text></g><g><title>core::fmt::write (70 samples, 0.16%)</title><rect x="8.1039%" y="373" width="0.1587%" height="15" fill="rgb(216,193,19)"/><text x="8.3539%" y="383.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.16%)</title><rect x="8.3987%" y="261" width="0.1633%" height="15" fill="rgb(216,135,14)"/><text x="8.6487%" y="271.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (72 samples, 0.16%)</title><rect x="8.3987%" y="245" width="0.1633%" height="15" fill="rgb(241,47,5)"/><text x="8.6487%" y="255.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (70 samples, 0.16%)</title><rect x="8.4032%" y="229" width="0.1587%" height="15" fill="rgb(233,42,35)"/><text x="8.6532%" y="239.50"></text></g><g><title>core::slice::memchr::memchr (51 samples, 0.12%)</title><rect x="8.4463%" y="213" width="0.1156%" height="15" fill="rgb(231,13,6)"/><text x="8.6963%" y="223.50"></text></g><g><title>core::slice::memchr::memchr_general_case (48 samples, 0.11%)</title><rect x="8.4531%" y="197" width="0.1088%" height="15" fill="rgb(207,181,40)"/><text x="8.7031%" y="207.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.17%)</title><rect x="8.3987%" y="293" width="0.1655%" height="15" fill="rgb(254,173,49)"/><text x="8.6487%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.17%)</title><rect x="8.3987%" y="277" width="0.1655%" height="15" fill="rgb(221,1,38)"/><text x="8.6487%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (97 samples, 0.22%)</title><rect x="8.3942%" y="325" width="0.2199%" height="15" fill="rgb(206,124,46)"/><text x="8.6442%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (96 samples, 0.22%)</title><rect x="8.3964%" y="309" width="0.2177%" height="15" fill="rgb(249,21,11)"/><text x="8.6464%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (113 samples, 0.26%)</title><rect x="8.3874%" y="389" width="0.2562%" height="15" fill="rgb(222,201,40)"/><text x="8.6374%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (113 samples, 0.26%)</title><rect x="8.3874%" y="373" width="0.2562%" height="15" fill="rgb(235,61,29)"/><text x="8.6374%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (113 samples, 0.26%)</title><rect x="8.3874%" y="357" width="0.2562%" height="15" fill="rgb(219,207,3)"/><text x="8.6374%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (113 samples, 0.26%)</title><rect x="8.3874%" y="341" width="0.2562%" height="15" fill="rgb(222,56,46)"/><text x="8.6374%" y="351.50"></text></g><g><title>compiler::generate::templates::indent (175 samples, 0.40%)</title><rect x="8.2627%" y="405" width="0.3968%" height="15" fill="rgb(239,76,54)"/><text x="8.5127%" y="415.50"></text></g><g><title>compiler::generate::templates::if_else (272 samples, 0.62%)</title><rect x="8.0631%" y="421" width="0.6168%" height="15" fill="rgb(231,124,27)"/><text x="8.3131%" y="431.50"></text></g><g><title>json::stringify (143 samples, 0.32%)</title><rect x="8.7683%" y="421" width="0.3242%" height="15" fill="rgb(249,195,6)"/><text x="9.0183%" y="431.50"></text></g><g><title>json::value::JsonValue::dump (137 samples, 0.31%)</title><rect x="8.7819%" y="405" width="0.3106%" height="15" fill="rgb(237,174,47)"/><text x="9.0319%" y="415.50"></text></g><g><title>json::codegen::Generator::write_json (103 samples, 0.23%)</title><rect x="8.8590%" y="389" width="0.2335%" height="15" fill="rgb(206,201,31)"/><text x="9.1090%" y="399.50"></text></g><g><title>json::codegen::Generator::write_string_complex (94 samples, 0.21%)</title><rect x="8.8794%" y="373" width="0.2131%" height="15" fill="rgb(231,57,52)"/><text x="9.1294%" y="383.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (1,286 samples, 2.92%)</title><rect x="6.1811%" y="437" width="2.9160%" height="15" fill="rgb(248,177,22)"/><text x="6.4311%" y="447.50">co..</text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,313 samples, 2.98%)</title><rect x="6.1244%" y="517" width="2.9772%" height="15" fill="rgb(215,211,37)"/><text x="6.3744%" y="527.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find (1,313 samples, 2.98%)</title><rect x="6.1244%" y="501" width="2.9772%" height="15" fill="rgb(241,128,51)"/><text x="6.3744%" y="511.50">cor..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,313 samples, 2.98%)</title><rect x="6.1244%" y="485" width="2.9772%" height="15" fill="rgb(227,165,31)"/><text x="6.3744%" y="495.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,313 samples, 2.98%)</title><rect x="6.1244%" y="469" width="2.9772%" height="15" fill="rgb(228,167,24)"/><text x="6.3744%" y="479.50">cor..</text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (1,301 samples, 2.95%)</title><rect x="6.1516%" y="453" width="2.9500%" height="15" fill="rgb(228,143,12)"/><text x="6.4016%" y="463.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,348 samples, 3.06%)</title><rect x="6.1176%" y="549" width="3.0566%" height="15" fill="rgb(249,149,8)"/><text x="6.3676%" y="559.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (1,347 samples, 3.05%)</title><rect x="6.1199%" y="533" width="3.0543%" height="15" fill="rgb(243,35,44)"/><text x="6.3699%" y="543.50">all..</text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.20%)</title><rect x="9.1742%" y="549" width="0.1973%" height="15" fill="rgb(246,89,9)"/><text x="9.4242%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (87 samples, 0.20%)</title><rect x="9.1742%" y="533" width="0.1973%" height="15" fill="rgb(233,213,13)"/><text x="9.4242%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 0.20%)</title><rect x="9.1742%" y="517" width="0.1973%" height="15" fill="rgb(233,141,41)"/><text x="9.4242%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (87 samples, 0.20%)</title><rect x="9.1742%" y="501" width="0.1973%" height="15" fill="rgb(239,167,4)"/><text x="9.4242%" y="511.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (80 samples, 0.18%)</title><rect x="9.1901%" y="485" width="0.1814%" height="15" fill="rgb(209,217,16)"/><text x="9.4401%" y="495.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (78 samples, 0.18%)</title><rect x="9.1946%" y="469" width="0.1769%" height="15" fill="rgb(219,88,35)"/><text x="9.4446%" y="479.50"></text></g><g><title>json::stringify (51 samples, 0.12%)</title><rect x="9.2558%" y="453" width="0.1156%" height="15" fill="rgb(220,193,23)"/><text x="9.5058%" y="463.50"></text></g><g><title>json::value::JsonValue::dump (48 samples, 0.11%)</title><rect x="9.2626%" y="437" width="0.1088%" height="15" fill="rgb(230,90,52)"/><text x="9.5126%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,439 samples, 3.26%)</title><rect x="6.1131%" y="613" width="3.2629%" height="15" fill="rgb(252,106,19)"/><text x="6.3631%" y="623.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,439 samples, 3.26%)</title><rect x="6.1131%" y="597" width="3.2629%" height="15" fill="rgb(206,74,20)"/><text x="6.3631%" y="607.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,439 samples, 3.26%)</title><rect x="6.1131%" y="581" width="3.2629%" height="15" fill="rgb(230,138,44)"/><text x="6.3631%" y="591.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,438 samples, 3.26%)</title><rect x="6.1154%" y="565" width="3.2606%" height="15" fill="rgb(235,182,43)"/><text x="6.3654%" y="575.50">&lt;al..</text></g><g><title>compiler::generate::generator::gen_body (1,489 samples, 3.38%)</title><rect x="6.0360%" y="629" width="3.3763%" height="15" fill="rgb(242,16,51)"/><text x="6.2860%" y="639.50">com..</text></g><g><title>compiler::generate::templates::indent (58 samples, 0.13%)</title><rect x="9.4758%" y="613" width="0.1315%" height="15" fill="rgb(248,9,4)"/><text x="9.7258%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (46 samples, 0.10%)</title><rect x="9.5030%" y="597" width="0.1043%" height="15" fill="rgb(210,31,22)"/><text x="9.7530%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (46 samples, 0.10%)</title><rect x="9.5030%" y="581" width="0.1043%" height="15" fill="rgb(239,54,39)"/><text x="9.7530%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46 samples, 0.10%)</title><rect x="9.5030%" y="565" width="0.1043%" height="15" fill="rgb(230,99,41)"/><text x="9.7530%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (46 samples, 0.10%)</title><rect x="9.5030%" y="549" width="0.1043%" height="15" fill="rgb(253,106,12)"/><text x="9.7530%" y="559.50"></text></g><g><title>compiler::generate::templates::block (91 samples, 0.21%)</title><rect x="9.4123%" y="629" width="0.2063%" height="15" fill="rgb(213,46,41)"/><text x="9.6623%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (98 samples, 0.22%)</title><rect x="9.9066%" y="389" width="0.2222%" height="15" fill="rgb(215,133,35)"/><text x="10.1566%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (86 samples, 0.20%)</title><rect x="9.9338%" y="373" width="0.1950%" height="15" fill="rgb(213,28,5)"/><text x="10.1838%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (86 samples, 0.20%)</title><rect x="9.9338%" y="357" width="0.1950%" height="15" fill="rgb(215,77,49)"/><text x="10.1838%" y="367.50"></text></g><g><title>alloc::alloc::realloc (86 samples, 0.20%)</title><rect x="9.9338%" y="341" width="0.1950%" height="15" fill="rgb(248,100,22)"/><text x="10.1838%" y="351.50"></text></g><g><title>__rdl_realloc (86 samples, 0.20%)</title><rect x="9.9338%" y="325" width="0.1950%" height="15" fill="rgb(208,67,9)"/><text x="10.1838%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (86 samples, 0.20%)</title><rect x="9.9338%" y="309" width="0.1950%" height="15" fill="rgb(219,133,21)"/><text x="10.1838%" y="319.50"></text></g><g><title>__GI___libc_realloc (86 samples, 0.20%)</title><rect x="9.9338%" y="293" width="0.1950%" height="15" fill="rgb(246,46,29)"/><text x="10.1838%" y="303.50"></text></g><g><title>_int_realloc (77 samples, 0.17%)</title><rect x="9.9542%" y="277" width="0.1746%" height="15" fill="rgb(246,185,52)"/><text x="10.2042%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (109 samples, 0.25%)</title><rect x="9.8952%" y="405" width="0.2472%" height="15" fill="rgb(252,136,11)"/><text x="10.1452%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (122 samples, 0.28%)</title><rect x="9.8680%" y="453" width="0.2766%" height="15" fill="rgb(219,138,53)"/><text x="10.1180%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (114 samples, 0.26%)</title><rect x="9.8862%" y="437" width="0.2585%" height="15" fill="rgb(211,51,23)"/><text x="10.1362%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (114 samples, 0.26%)</title><rect x="9.8862%" y="421" width="0.2585%" height="15" fill="rgb(247,221,28)"/><text x="10.1362%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (165 samples, 0.37%)</title><rect x="9.8113%" y="549" width="0.3741%" height="15" fill="rgb(251,222,45)"/><text x="10.0613%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (144 samples, 0.33%)</title><rect x="9.8590%" y="533" width="0.3265%" height="15" fill="rgb(217,162,53)"/><text x="10.1090%" y="543.50"></text></g><g><title>alloc::string::String::push_str (144 samples, 0.33%)</title><rect x="9.8590%" y="517" width="0.3265%" height="15" fill="rgb(229,93,14)"/><text x="10.1090%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (144 samples, 0.33%)</title><rect x="9.8590%" y="501" width="0.3265%" height="15" fill="rgb(209,67,49)"/><text x="10.1090%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (144 samples, 0.33%)</title><rect x="9.8590%" y="485" width="0.3265%" height="15" fill="rgb(213,87,29)"/><text x="10.1090%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (144 samples, 0.33%)</title><rect x="9.8590%" y="469" width="0.3265%" height="15" fill="rgb(205,151,52)"/><text x="10.1090%" y="479.50"></text></g><g><title>alloc::fmt::format (226 samples, 0.51%)</title><rect x="9.7161%" y="597" width="0.5124%" height="15" fill="rgb(253,215,39)"/><text x="9.9661%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (216 samples, 0.49%)</title><rect x="9.7388%" y="581" width="0.4898%" height="15" fill="rgb(221,220,41)"/><text x="9.9888%" y="591.50"></text></g><g><title>core::fmt::write (209 samples, 0.47%)</title><rect x="9.7547%" y="565" width="0.4739%" height="15" fill="rgb(218,133,21)"/><text x="10.0047%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (93 samples, 0.21%)</title><rect x="10.2422%" y="453" width="0.2109%" height="15" fill="rgb(221,193,43)"/><text x="10.4922%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (93 samples, 0.21%)</title><rect x="10.2422%" y="437" width="0.2109%" height="15" fill="rgb(240,128,52)"/><text x="10.4922%" y="447.50"></text></g><g><title>alloc::alloc::realloc (93 samples, 0.21%)</title><rect x="10.2422%" y="421" width="0.2109%" height="15" fill="rgb(253,114,12)"/><text x="10.4922%" y="431.50"></text></g><g><title>__rdl_realloc (93 samples, 0.21%)</title><rect x="10.2422%" y="405" width="0.2109%" height="15" fill="rgb(215,223,47)"/><text x="10.4922%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (93 samples, 0.21%)</title><rect x="10.2422%" y="389" width="0.2109%" height="15" fill="rgb(248,225,23)"/><text x="10.4922%" y="399.50"></text></g><g><title>__GI___libc_realloc (92 samples, 0.21%)</title><rect x="10.2444%" y="373" width="0.2086%" height="15" fill="rgb(250,108,0)"/><text x="10.4944%" y="383.50"></text></g><g><title>_int_realloc (68 samples, 0.15%)</title><rect x="10.2989%" y="357" width="0.1542%" height="15" fill="rgb(228,208,7)"/><text x="10.5489%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (94 samples, 0.21%)</title><rect x="10.2422%" y="469" width="0.2131%" height="15" fill="rgb(244,45,10)"/><text x="10.4922%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (100 samples, 0.23%)</title><rect x="10.2331%" y="533" width="0.2267%" height="15" fill="rgb(207,125,25)"/><text x="10.4831%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (100 samples, 0.23%)</title><rect x="10.2331%" y="517" width="0.2267%" height="15" fill="rgb(210,195,18)"/><text x="10.4831%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (100 samples, 0.23%)</title><rect x="10.2331%" y="501" width="0.2267%" height="15" fill="rgb(249,80,12)"/><text x="10.4831%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (99 samples, 0.22%)</title><rect x="10.2354%" y="485" width="0.2245%" height="15" fill="rgb(221,65,9)"/><text x="10.4854%" y="495.50"></text></g><g><title>alloc::string::String::push_str (105 samples, 0.24%)</title><rect x="10.2286%" y="597" width="0.2381%" height="15" fill="rgb(235,49,36)"/><text x="10.4786%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (105 samples, 0.24%)</title><rect x="10.2286%" y="581" width="0.2381%" height="15" fill="rgb(225,32,20)"/><text x="10.4786%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (105 samples, 0.24%)</title><rect x="10.2286%" y="565" width="0.2381%" height="15" fill="rgb(215,141,46)"/><text x="10.4786%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (105 samples, 0.24%)</title><rect x="10.2286%" y="549" width="0.2381%" height="15" fill="rgb(250,160,47)"/><text x="10.4786%" y="559.50"></text></g><g><title>compiler::generate::templates::escape_path::{{closure}} (46 samples, 0.10%)</title><rect x="10.4780%" y="469" width="0.1043%" height="15" fill="rgb(216,222,40)"/><text x="10.7280%" y="479.50"></text></g><g><title>&lt;char as alloc::string::ToString&gt;::to_string (45 samples, 0.10%)</title><rect x="10.4803%" y="453" width="0.1020%" height="15" fill="rgb(234,217,39)"/><text x="10.7303%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (67 samples, 0.15%)</title><rect x="10.7206%" y="453" width="0.1519%" height="15" fill="rgb(207,178,40)"/><text x="10.9706%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (177 samples, 0.40%)</title><rect x="10.4734%" y="549" width="0.4013%" height="15" fill="rgb(221,136,13)"/><text x="10.7234%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (177 samples, 0.40%)</title><rect x="10.4734%" y="533" width="0.4013%" height="15" fill="rgb(249,199,10)"/><text x="10.7234%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (177 samples, 0.40%)</title><rect x="10.4734%" y="517" width="0.4013%" height="15" fill="rgb(249,222,13)"/><text x="10.7234%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (177 samples, 0.40%)</title><rect x="10.4734%" y="501" width="0.4013%" height="15" fill="rgb(244,185,38)"/><text x="10.7234%" y="511.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (175 samples, 0.40%)</title><rect x="10.4780%" y="485" width="0.3968%" height="15" fill="rgb(236,202,9)"/><text x="10.7280%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (129 samples, 0.29%)</title><rect x="10.5823%" y="469" width="0.2925%" height="15" fill="rgb(250,229,37)"/><text x="10.8323%" y="479.50"></text></g><g><title>compiler::generate::templates::escape_path (196 samples, 0.44%)</title><rect x="10.4666%" y="597" width="0.4444%" height="15" fill="rgb(206,174,23)"/><text x="10.7166%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (196 samples, 0.44%)</title><rect x="10.4666%" y="581" width="0.4444%" height="15" fill="rgb(211,33,43)"/><text x="10.7166%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (196 samples, 0.44%)</title><rect x="10.4666%" y="565" width="0.4444%" height="15" fill="rgb(245,58,50)"/><text x="10.7166%" y="575.50"></text></g><g><title>compiler::generate::templates::guard (591 samples, 1.34%)</title><rect x="9.6934%" y="613" width="1.3401%" height="15" fill="rgb(244,68,36)"/><text x="9.9434%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (48 samples, 0.11%)</title><rect x="10.9247%" y="597" width="0.1088%" height="15" fill="rgb(232,229,15)"/><text x="11.1747%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (48 samples, 0.11%)</title><rect x="10.9247%" y="581" width="0.1088%" height="15" fill="rgb(254,30,23)"/><text x="11.1747%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (46 samples, 0.10%)</title><rect x="10.9292%" y="565" width="0.1043%" height="15" fill="rgb(235,160,14)"/><text x="11.1792%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.10%)</title><rect x="10.9292%" y="549" width="0.1043%" height="15" fill="rgb(212,155,44)"/><text x="11.1792%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (46 samples, 0.10%)</title><rect x="10.9292%" y="533" width="0.1043%" height="15" fill="rgb(226,2,50)"/><text x="11.1792%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (46 samples, 0.10%)</title><rect x="10.9292%" y="517" width="0.1043%" height="15" fill="rgb(234,177,6)"/><text x="11.1792%" y="527.50"></text></g><g><title>__rdl_dealloc (46 samples, 0.10%)</title><rect x="10.9292%" y="501" width="0.1043%" height="15" fill="rgb(217,24,9)"/><text x="11.1792%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (46 samples, 0.10%)</title><rect x="10.9292%" y="485" width="0.1043%" height="15" fill="rgb(220,13,46)"/><text x="11.1792%" y="495.50"></text></g><g><title>compiler::generate::templates::expression (628 samples, 1.42%)</title><rect x="9.6481%" y="629" width="1.4240%" height="15" fill="rgb(239,221,27)"/><text x="9.8981%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (48 samples, 0.11%)</title><rect x="11.1197%" y="469" width="0.1088%" height="15" fill="rgb(222,198,25)"/><text x="11.3697%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 0.11%)</title><rect x="11.1197%" y="453" width="0.1088%" height="15" fill="rgb(211,99,13)"/><text x="11.3697%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (48 samples, 0.11%)</title><rect x="11.1197%" y="437" width="0.1088%" height="15" fill="rgb(232,111,31)"/><text x="11.3697%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (48 samples, 0.11%)</title><rect x="11.1197%" y="421" width="0.1088%" height="15" fill="rgb(245,82,37)"/><text x="11.3697%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (47 samples, 0.11%)</title><rect x="11.1219%" y="405" width="0.1066%" height="15" fill="rgb(227,149,46)"/><text x="11.3719%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (47 samples, 0.11%)</title><rect x="11.1219%" y="389" width="0.1066%" height="15" fill="rgb(218,36,50)"/><text x="11.3719%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (47 samples, 0.11%)</title><rect x="11.1219%" y="373" width="0.1066%" height="15" fill="rgb(226,80,48)"/><text x="11.3719%" y="383.50"></text></g><g><title>alloc::alloc::realloc (47 samples, 0.11%)</title><rect x="11.1219%" y="357" width="0.1066%" height="15" fill="rgb(238,224,15)"/><text x="11.3719%" y="367.50"></text></g><g><title>__rdl_realloc (47 samples, 0.11%)</title><rect x="11.1219%" y="341" width="0.1066%" height="15" fill="rgb(241,136,10)"/><text x="11.3719%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (47 samples, 0.11%)</title><rect x="11.1219%" y="325" width="0.1066%" height="15" fill="rgb(208,32,45)"/><text x="11.3719%" y="335.50"></text></g><g><title>__GI___libc_realloc (47 samples, 0.11%)</title><rect x="11.1219%" y="309" width="0.1066%" height="15" fill="rgb(207,135,9)"/><text x="11.3719%" y="319.50"></text></g><g><title>_int_realloc (45 samples, 0.10%)</title><rect x="11.1265%" y="293" width="0.1020%" height="15" fill="rgb(206,86,44)"/><text x="11.3765%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (58 samples, 0.13%)</title><rect x="11.1151%" y="565" width="0.1315%" height="15" fill="rgb(245,177,15)"/><text x="11.3651%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (57 samples, 0.13%)</title><rect x="11.1174%" y="549" width="0.1292%" height="15" fill="rgb(206,64,50)"/><text x="11.3674%" y="559.50"></text></g><g><title>alloc::string::String::push_str (57 samples, 0.13%)</title><rect x="11.1174%" y="533" width="0.1292%" height="15" fill="rgb(234,36,40)"/><text x="11.3674%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (57 samples, 0.13%)</title><rect x="11.1174%" y="517" width="0.1292%" height="15" fill="rgb(213,64,8)"/><text x="11.3674%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (57 samples, 0.13%)</title><rect x="11.1174%" y="501" width="0.1292%" height="15" fill="rgb(210,75,36)"/><text x="11.3674%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (57 samples, 0.13%)</title><rect x="11.1174%" y="485" width="0.1292%" height="15" fill="rgb(229,88,21)"/><text x="11.3674%" y="495.50"></text></g><g><title>alloc::fmt::format (69 samples, 0.16%)</title><rect x="11.0970%" y="613" width="0.1565%" height="15" fill="rgb(252,204,47)"/><text x="11.3470%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (64 samples, 0.15%)</title><rect x="11.1083%" y="597" width="0.1451%" height="15" fill="rgb(208,77,27)"/><text x="11.3583%" y="607.50"></text></g><g><title>core::fmt::write (64 samples, 0.15%)</title><rect x="11.1083%" y="581" width="0.1451%" height="15" fill="rgb(221,76,26)"/><text x="11.3583%" y="591.50"></text></g><g><title>alloc::str::join_generic_copy (45 samples, 0.10%)</title><rect x="11.3056%" y="565" width="0.1020%" height="15" fill="rgb(225,139,18)"/><text x="11.5556%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (47 samples, 0.11%)</title><rect x="11.3056%" y="597" width="0.1066%" height="15" fill="rgb(230,137,11)"/><text x="11.5556%" y="607.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (47 samples, 0.11%)</title><rect x="11.3056%" y="581" width="0.1066%" height="15" fill="rgb(212,28,1)"/><text x="11.5556%" y="591.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (95 samples, 0.22%)</title><rect x="11.4598%" y="437" width="0.2154%" height="15" fill="rgb(248,164,17)"/><text x="11.7098%" y="447.50"></text></g><g><title>core::slice::memchr::memchr (57 samples, 0.13%)</title><rect x="11.5460%" y="421" width="0.1292%" height="15" fill="rgb(222,171,42)"/><text x="11.7960%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_general_case (55 samples, 0.12%)</title><rect x="11.5505%" y="405" width="0.1247%" height="15" fill="rgb(243,84,45)"/><text x="11.8005%" y="415.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.24%)</title><rect x="11.4417%" y="469" width="0.2358%" height="15" fill="rgb(252,49,23)"/><text x="11.6917%" y="479.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (104 samples, 0.24%)</title><rect x="11.4417%" y="453" width="0.2358%" height="15" fill="rgb(215,19,7)"/><text x="11.6917%" y="463.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.24%)</title><rect x="11.4417%" y="501" width="0.2381%" height="15" fill="rgb(238,81,41)"/><text x="11.6917%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.24%)</title><rect x="11.4417%" y="485" width="0.2381%" height="15" fill="rgb(210,199,37)"/><text x="11.6917%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (133 samples, 0.30%)</title><rect x="11.4371%" y="533" width="0.3016%" height="15" fill="rgb(244,192,49)"/><text x="11.6871%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (131 samples, 0.30%)</title><rect x="11.4417%" y="517" width="0.2970%" height="15" fill="rgb(226,211,11)"/><text x="11.6917%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (154 samples, 0.35%)</title><rect x="11.4303%" y="597" width="0.3492%" height="15" fill="rgb(236,162,54)"/><text x="11.6803%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (154 samples, 0.35%)</title><rect x="11.4303%" y="581" width="0.3492%" height="15" fill="rgb(220,229,9)"/><text x="11.6803%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (154 samples, 0.35%)</title><rect x="11.4303%" y="565" width="0.3492%" height="15" fill="rgb(250,87,22)"/><text x="11.6803%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (154 samples, 0.35%)</title><rect x="11.4303%" y="549" width="0.3492%" height="15" fill="rgb(239,43,17)"/><text x="11.6803%" y="559.50"></text></g><g><title>compiler::generate::templates::indent (243 samples, 0.55%)</title><rect x="11.2535%" y="613" width="0.5510%" height="15" fill="rgb(231,177,25)"/><text x="11.5035%" y="623.50"></text></g><g><title>compiler::generate::templates::if_else (333 samples, 0.76%)</title><rect x="11.0721%" y="629" width="0.7551%" height="15" fill="rgb(219,179,1)"/><text x="11.3221%" y="639.50"></text></g><g><title>compiler::generate::templates::indent (51 samples, 0.12%)</title><rect x="11.8498%" y="613" width="0.1156%" height="15" fill="rgb(238,219,53)"/><text x="12.0998%" y="623.50"></text></g><g><title>compiler::generate::templates::iter (63 samples, 0.14%)</title><rect x="11.8271%" y="629" width="0.1429%" height="15" fill="rgb(232,167,36)"/><text x="12.0771%" y="639.50"></text></g><g><title>json::stringify (115 samples, 0.26%)</title><rect x="12.0176%" y="629" width="0.2608%" height="15" fill="rgb(244,19,51)"/><text x="12.2676%" y="639.50"></text></g><g><title>json::value::JsonValue::dump (109 samples, 0.25%)</title><rect x="12.0312%" y="613" width="0.2472%" height="15" fill="rgb(224,6,22)"/><text x="12.2812%" y="623.50"></text></g><g><title>json::codegen::Generator::write_json (74 samples, 0.17%)</title><rect x="12.1106%" y="597" width="0.1678%" height="15" fill="rgb(224,145,5)"/><text x="12.3606%" y="607.50"></text></g><g><title>json::codegen::Generator::write_string_complex (68 samples, 0.15%)</title><rect x="12.1242%" y="581" width="0.1542%" height="15" fill="rgb(234,130,49)"/><text x="12.3742%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,841 samples, 6.44%)</title><rect x="5.8410%" y="757" width="6.4419%" height="15" fill="rgb(254,6,2)"/><text x="6.0910%" y="767.50">&lt;alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (2,841 samples, 6.44%)</title><rect x="5.8410%" y="741" width="6.4419%" height="15" fill="rgb(208,96,46)"/><text x="6.0910%" y="751.50">alloc::v..</text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,841 samples, 6.44%)</title><rect x="5.8410%" y="725" width="6.4419%" height="15" fill="rgb(239,3,39)"/><text x="6.0910%" y="735.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find (2,841 samples, 6.44%)</title><rect x="5.8410%" y="709" width="6.4419%" height="15" fill="rgb(233,210,1)"/><text x="6.0910%" y="719.50">core::it..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,841 samples, 6.44%)</title><rect x="5.8410%" y="693" width="6.4419%" height="15" fill="rgb(244,137,37)"/><text x="6.0910%" y="703.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,841 samples, 6.44%)</title><rect x="5.8410%" y="677" width="6.4419%" height="15" fill="rgb(240,136,2)"/><text x="6.0910%" y="687.50">core::it..</text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (2,841 samples, 6.44%)</title><rect x="5.8410%" y="661" width="6.4419%" height="15" fill="rgb(239,18,37)"/><text x="6.0910%" y="671.50">core::it..</text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (2,841 samples, 6.44%)</title><rect x="5.8410%" y="645" width="6.4419%" height="15" fill="rgb(218,185,22)"/><text x="6.0910%" y="655.50">compiler..</text></g><g><title>compiler::generate::generator::generate (2,880 samples, 6.53%)</title><rect x="5.8410%" y="1061" width="6.5303%" height="15" fill="rgb(225,218,4)"/><text x="6.0910%" y="1071.50">compiler:..</text></g><g><title>compiler::generate::generator::gen_body (2,880 samples, 6.53%)</title><rect x="5.8410%" y="1045" width="6.5303%" height="15" fill="rgb(230,182,32)"/><text x="6.0910%" y="1055.50">compiler:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,880 samples, 6.53%)</title><rect x="5.8410%" y="1029" width="6.5303%" height="15" fill="rgb(242,56,43)"/><text x="6.0910%" y="1039.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,880 samples, 6.53%)</title><rect x="5.8410%" y="1013" width="6.5303%" height="15" fill="rgb(233,99,24)"/><text x="6.0910%" y="1023.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,880 samples, 6.53%)</title><rect x="5.8410%" y="997" width="6.5303%" height="15" fill="rgb(234,209,42)"/><text x="6.0910%" y="1007.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,880 samples, 6.53%)</title><rect x="5.8410%" y="981" width="6.5303%" height="15" fill="rgb(227,7,12)"/><text x="6.0910%" y="991.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,880 samples, 6.53%)</title><rect x="5.8410%" y="965" width="6.5303%" height="15" fill="rgb(245,203,43)"/><text x="6.0910%" y="975.50">&lt;alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (2,880 samples, 6.53%)</title><rect x="5.8410%" y="949" width="6.5303%" height="15" fill="rgb(238,205,33)"/><text x="6.0910%" y="959.50">alloc::ve..</text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,880 samples, 6.53%)</title><rect x="5.8410%" y="933" width="6.5303%" height="15" fill="rgb(231,56,7)"/><text x="6.0910%" y="943.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::find (2,880 samples, 6.53%)</title><rect x="5.8410%" y="917" width="6.5303%" height="15" fill="rgb(244,186,29)"/><text x="6.0910%" y="927.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,880 samples, 6.53%)</title><rect x="5.8410%" y="901" width="6.5303%" height="15" fill="rgb(234,111,31)"/><text x="6.0910%" y="911.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,880 samples, 6.53%)</title><rect x="5.8410%" y="885" width="6.5303%" height="15" fill="rgb(241,149,10)"/><text x="6.0910%" y="895.50">core::ite..</text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (2,880 samples, 6.53%)</title><rect x="5.8410%" y="869" width="6.5303%" height="15" fill="rgb(249,206,44)"/><text x="6.0910%" y="879.50">core::ite..</text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (2,880 samples, 6.53%)</title><rect x="5.8410%" y="853" width="6.5303%" height="15" fill="rgb(251,153,30)"/><text x="6.0910%" y="863.50">compiler:..</text></g><g><title>compiler::generate::generator::gen_body (2,880 samples, 6.53%)</title><rect x="5.8410%" y="837" width="6.5303%" height="15" fill="rgb(239,152,38)"/><text x="6.0910%" y="847.50">compiler:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,880 samples, 6.53%)</title><rect x="5.8410%" y="821" width="6.5303%" height="15" fill="rgb(249,139,47)"/><text x="6.0910%" y="831.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,880 samples, 6.53%)</title><rect x="5.8410%" y="805" width="6.5303%" height="15" fill="rgb(244,64,35)"/><text x="6.0910%" y="815.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,880 samples, 6.53%)</title><rect x="5.8410%" y="789" width="6.5303%" height="15" fill="rgb(216,46,15)"/><text x="6.0910%" y="799.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,880 samples, 6.53%)</title><rect x="5.8410%" y="773" width="6.5303%" height="15" fill="rgb(250,74,19)"/><text x="6.0910%" y="783.50">&lt;alloc::v..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (69 samples, 0.16%)</title><rect x="12.4393%" y="565" width="0.1565%" height="15" fill="rgb(249,42,33)"/><text x="12.6893%" y="575.50"></text></g><g><title>nom::multi::many1_count::{{closure}} (69 samples, 0.16%)</title><rect x="12.4393%" y="549" width="0.1565%" height="15" fill="rgb(242,149,17)"/><text x="12.6893%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (66 samples, 0.15%)</title><rect x="12.4461%" y="533" width="0.1497%" height="15" fill="rgb(244,29,21)"/><text x="12.6961%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (79 samples, 0.18%)</title><rect x="12.4257%" y="613" width="0.1791%" height="15" fill="rgb(220,130,37)"/><text x="12.6757%" y="623.50"></text></g><g><title>compiler::parse::expression::identifier (79 samples, 0.18%)</title><rect x="12.4257%" y="597" width="0.1791%" height="15" fill="rgb(211,67,2)"/><text x="12.6757%" y="607.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (79 samples, 0.18%)</title><rect x="12.4257%" y="581" width="0.1791%" height="15" fill="rgb(235,68,52)"/><text x="12.6757%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (89 samples, 0.20%)</title><rect x="12.4099%" y="629" width="0.2018%" height="15" fill="rgb(246,142,3)"/><text x="12.6599%" y="639.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (114 samples, 0.26%)</title><rect x="12.3917%" y="661" width="0.2585%" height="15" fill="rgb(241,25,7)"/><text x="12.6417%" y="671.50"></text></g><g><title>nom::sequence::pair::{{closure}} (114 samples, 0.26%)</title><rect x="12.3917%" y="645" width="0.2585%" height="15" fill="rgb(242,119,39)"/><text x="12.6417%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (125 samples, 0.28%)</title><rect x="12.3804%" y="693" width="0.2834%" height="15" fill="rgb(241,98,45)"/><text x="12.6304%" y="703.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (125 samples, 0.28%)</title><rect x="12.3804%" y="677" width="0.2834%" height="15" fill="rgb(254,28,30)"/><text x="12.6304%" y="687.50"></text></g><g><title>compiler::parse::expression::helper (136 samples, 0.31%)</title><rect x="12.3804%" y="725" width="0.3084%" height="15" fill="rgb(241,142,54)"/><text x="12.6304%" y="735.50"></text></g><g><title>nom::combinator::map::{{closure}} (136 samples, 0.31%)</title><rect x="12.3804%" y="709" width="0.3084%" height="15" fill="rgb(222,85,15)"/><text x="12.6304%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (52 samples, 0.12%)</title><rect x="12.6888%" y="693" width="0.1179%" height="15" fill="rgb(210,85,47)"/><text x="12.9388%" y="703.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (52 samples, 0.12%)</title><rect x="12.6888%" y="677" width="0.1179%" height="15" fill="rgb(224,206,25)"/><text x="12.9388%" y="687.50"></text></g><g><title>compiler::parse::expression::legacy_helper (57 samples, 0.13%)</title><rect x="12.6888%" y="725" width="0.1292%" height="15" fill="rgb(243,201,19)"/><text x="12.9388%" y="735.50"></text></g><g><title>nom::combinator::map::{{closure}} (57 samples, 0.13%)</title><rect x="12.6888%" y="709" width="0.1292%" height="15" fill="rgb(236,59,4)"/><text x="12.9388%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (46 samples, 0.10%)</title><rect x="12.8407%" y="629" width="0.1043%" height="15" fill="rgb(254,179,45)"/><text x="13.0907%" y="639.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (45 samples, 0.10%)</title><rect x="12.8430%" y="613" width="0.1020%" height="15" fill="rgb(226,14,10)"/><text x="13.0930%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (60 samples, 0.14%)</title><rect x="12.8339%" y="661" width="0.1360%" height="15" fill="rgb(244,27,41)"/><text x="13.0839%" y="671.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (60 samples, 0.14%)</title><rect x="12.8339%" y="645" width="0.1360%" height="15" fill="rgb(235,35,32)"/><text x="13.0839%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (73 samples, 0.17%)</title><rect x="12.8180%" y="693" width="0.1655%" height="15" fill="rgb(218,68,31)"/><text x="13.0680%" y="703.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (73 samples, 0.17%)</title><rect x="12.8180%" y="677" width="0.1655%" height="15" fill="rgb(207,120,37)"/><text x="13.0680%" y="687.50"></text></g><g><title>compiler::parse::expression::negative (81 samples, 0.18%)</title><rect x="12.8180%" y="725" width="0.1837%" height="15" fill="rgb(227,98,0)"/><text x="13.0680%" y="735.50"></text></g><g><title>nom::combinator::map::{{closure}} (81 samples, 0.18%)</title><rect x="12.8180%" y="709" width="0.1837%" height="15" fill="rgb(207,7,3)"/><text x="13.0680%" y="719.50"></text></g><g><title>nom::branch::alt::{{closure}} (81 samples, 0.18%)</title><rect x="13.0107%" y="629" width="0.1837%" height="15" fill="rgb(206,98,19)"/><text x="13.2607%" y="639.50"></text></g><g><title>&lt;(A,B,C,D,E,F) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (81 samples, 0.18%)</title><rect x="13.0107%" y="613" width="0.1837%" height="15" fill="rgb(217,5,26)"/><text x="13.2607%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (81 samples, 0.18%)</title><rect x="13.0107%" y="597" width="0.1837%" height="15" fill="rgb(235,190,38)"/><text x="13.2607%" y="607.50"></text></g><g><title>nom::bytes::complete::tag::{{closure}} (80 samples, 0.18%)</title><rect x="13.0130%" y="581" width="0.1814%" height="15" fill="rgb(247,86,24)"/><text x="13.2630%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (60 samples, 0.14%)</title><rect x="13.2012%" y="549" width="0.1360%" height="15" fill="rgb(205,101,16)"/><text x="13.4512%" y="559.50"></text></g><g><title>nom::branch::alt::{{closure}} (45 samples, 0.10%)</title><rect x="13.2352%" y="533" width="0.1020%" height="15" fill="rgb(246,168,33)"/><text x="13.4852%" y="543.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (45 samples, 0.10%)</title><rect x="13.2352%" y="517" width="0.1020%" height="15" fill="rgb(231,114,1)"/><text x="13.4852%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 0.15%)</title><rect x="13.1967%" y="581" width="0.1519%" height="15" fill="rgb(207,184,53)"/><text x="13.4467%" y="591.50"></text></g><g><title>nom::combinator::map::{{closure}} (67 samples, 0.15%)</title><rect x="13.1967%" y="565" width="0.1519%" height="15" fill="rgb(224,95,51)"/><text x="13.4467%" y="575.50"></text></g><g><title>nom::multi::many0::{{closure}} (71 samples, 0.16%)</title><rect x="13.1967%" y="597" width="0.1610%" height="15" fill="rgb(212,188,45)"/><text x="13.4467%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (69 samples, 0.16%)</title><rect x="13.7137%" y="389" width="0.1565%" height="15" fill="rgb(223,154,38)"/><text x="13.9637%" y="399.50"></text></g><g><title>nom::character::complete::alphanumeric1 (69 samples, 0.16%)</title><rect x="13.7137%" y="373" width="0.1565%" height="15" fill="rgb(251,22,52)"/><text x="13.9637%" y="383.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (69 samples, 0.16%)</title><rect x="13.7137%" y="357" width="0.1565%" height="15" fill="rgb(229,209,22)"/><text x="13.9637%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (163 samples, 0.37%)</title><rect x="13.5300%" y="485" width="0.3696%" height="15" fill="rgb(234,138,34)"/><text x="13.7800%" y="495.50"></text></g><g><title>nom::multi::many1_count::{{closure}} (163 samples, 0.37%)</title><rect x="13.5300%" y="469" width="0.3696%" height="15" fill="rgb(212,95,11)"/><text x="13.7800%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (158 samples, 0.36%)</title><rect x="13.5413%" y="453" width="0.3583%" height="15" fill="rgb(240,179,47)"/><text x="13.7913%" y="463.50"></text></g><g><title>nom::branch::alt::{{closure}} (109 samples, 0.25%)</title><rect x="13.6524%" y="437" width="0.2472%" height="15" fill="rgb(240,163,11)"/><text x="13.9024%" y="447.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (96 samples, 0.22%)</title><rect x="13.6819%" y="421" width="0.2177%" height="15" fill="rgb(236,37,12)"/><text x="13.9319%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (83 samples, 0.19%)</title><rect x="13.7114%" y="405" width="0.1882%" height="15" fill="rgb(232,164,16)"/><text x="13.9614%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (222 samples, 0.50%)</title><rect x="13.4008%" y="549" width="0.5034%" height="15" fill="rgb(244,205,15)"/><text x="13.6508%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (195 samples, 0.44%)</title><rect x="13.4620%" y="533" width="0.4422%" height="15" fill="rgb(223,117,47)"/><text x="13.7120%" y="543.50"></text></g><g><title>compiler::parse::expression::identifier (195 samples, 0.44%)</title><rect x="13.4620%" y="517" width="0.4422%" height="15" fill="rgb(244,107,35)"/><text x="13.7120%" y="527.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (188 samples, 0.43%)</title><rect x="13.4778%" y="501" width="0.4263%" height="15" fill="rgb(205,140,8)"/><text x="13.7278%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (252 samples, 0.57%)</title><rect x="13.3622%" y="581" width="0.5714%" height="15" fill="rgb(228,84,46)"/><text x="13.6122%" y="591.50"></text></g><g><title>nom::combinator::map::{{closure}} (243 samples, 0.55%)</title><rect x="13.3826%" y="565" width="0.5510%" height="15" fill="rgb(254,188,9)"/><text x="13.6326%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (53 samples, 0.12%)</title><rect x="13.9381%" y="565" width="0.1202%" height="15" fill="rgb(206,112,54)"/><text x="14.1881%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (53 samples, 0.12%)</title><rect x="13.9381%" y="549" width="0.1202%" height="15" fill="rgb(216,84,49)"/><text x="14.1881%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (53 samples, 0.12%)</title><rect x="13.9381%" y="533" width="0.1202%" height="15" fill="rgb(214,194,35)"/><text x="14.1881%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.12%)</title><rect x="13.9427%" y="517" width="0.1156%" height="15" fill="rgb(249,28,3)"/><text x="14.1927%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.11%)</title><rect x="13.9449%" y="501" width="0.1134%" height="15" fill="rgb(222,56,52)"/><text x="14.1949%" y="511.50"></text></g><g><title>__GI___libc_malloc (49 samples, 0.11%)</title><rect x="13.9472%" y="485" width="0.1111%" height="15" fill="rgb(245,217,50)"/><text x="14.1972%" y="495.50"></text></g><g><title>_int_malloc (48 samples, 0.11%)</title><rect x="13.9495%" y="469" width="0.1088%" height="15" fill="rgb(213,201,24)"/><text x="14.1995%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (468 samples, 1.06%)</title><rect x="13.0107%" y="645" width="1.0612%" height="15" fill="rgb(248,116,28)"/><text x="13.2607%" y="655.50"></text></g><g><title>nom::sequence::pair::{{closure}} (387 samples, 0.88%)</title><rect x="13.1944%" y="629" width="0.8775%" height="15" fill="rgb(219,72,43)"/><text x="13.4444%" y="639.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (386 samples, 0.88%)</title><rect x="13.1967%" y="613" width="0.8752%" height="15" fill="rgb(209,138,14)"/><text x="13.4467%" y="623.50"></text></g><g><title>nom::multi::separated_list1::{{closure}} (315 samples, 0.71%)</title><rect x="13.3577%" y="597" width="0.7143%" height="15" fill="rgb(222,18,33)"/><text x="13.6077%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (60 samples, 0.14%)</title><rect x="13.9359%" y="581" width="0.1360%" height="15" fill="rgb(213,199,7)"/><text x="14.1859%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (504 samples, 1.14%)</title><rect x="13.0085%" y="677" width="1.1428%" height="15" fill="rgb(250,110,10)"/><text x="13.2585%" y="687.50"></text></g><g><title>nom::combinator::map::{{closure}} (504 samples, 1.14%)</title><rect x="13.0085%" y="661" width="1.1428%" height="15" fill="rgb(248,123,6)"/><text x="13.2585%" y="671.50"></text></g><g><title>compiler::parse::expression::path (523 samples, 1.19%)</title><rect x="13.0017%" y="725" width="1.1859%" height="15" fill="rgb(206,91,31)"/><text x="13.2517%" y="735.50"></text></g><g><title>nom::branch::alt::{{closure}} (520 samples, 1.18%)</title><rect x="13.0085%" y="709" width="1.1791%" height="15" fill="rgb(211,154,13)"/><text x="13.2585%" y="719.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (520 samples, 1.18%)</title><rect x="13.0085%" y="693" width="1.1791%" height="15" fill="rgb(225,148,7)"/><text x="13.2585%" y="703.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (815 samples, 1.85%)</title><rect x="12.3804%" y="757" width="1.8480%" height="15" fill="rgb(220,160,43)"/><text x="12.6304%" y="767.50">&lt;..</text></g><g><title>core::ops::function::FnMut::call_mut (815 samples, 1.85%)</title><rect x="12.3804%" y="741" width="1.8480%" height="15" fill="rgb(213,52,39)"/><text x="12.6304%" y="751.50">c..</text></g><g><title>compiler::parse::tokens::interp_escaped (825 samples, 1.87%)</title><rect x="12.3713%" y="965" width="1.8707%" height="15" fill="rgb(243,137,7)"/><text x="12.6213%" y="975.50">c..</text></g><g><title>nom::combinator::map::{{closure}} (825 samples, 1.87%)</title><rect x="12.3713%" y="949" width="1.8707%" height="15" fill="rgb(230,79,13)"/><text x="12.6213%" y="959.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (825 samples, 1.87%)</title><rect x="12.3713%" y="933" width="1.8707%" height="15" fill="rgb(247,105,23)"/><text x="12.6213%" y="943.50">&lt;..</text></g><g><title>nom::combinator::consumed::{{closure}} (825 samples, 1.87%)</title><rect x="12.3713%" y="917" width="1.8707%" height="15" fill="rgb(223,179,41)"/><text x="12.6213%" y="927.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (825 samples, 1.87%)</title><rect x="12.3713%" y="901" width="1.8707%" height="15" fill="rgb(218,9,34)"/><text x="12.6213%" y="911.50">&lt;..</text></g><g><title>nom::sequence::delimited::{{closure}} (825 samples, 1.87%)</title><rect x="12.3713%" y="885" width="1.8707%" height="15" fill="rgb(222,106,8)"/><text x="12.6213%" y="895.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (825 samples, 1.87%)</title><rect x="12.3713%" y="869" width="1.8707%" height="15" fill="rgb(211,220,0)"/><text x="12.6213%" y="879.50">&lt;..</text></g><g><title>nom::sequence::delimited::{{closure}} (825 samples, 1.87%)</title><rect x="12.3713%" y="853" width="1.8707%" height="15" fill="rgb(229,52,16)"/><text x="12.6213%" y="863.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (825 samples, 1.87%)</title><rect x="12.3713%" y="837" width="1.8707%" height="15" fill="rgb(212,155,18)"/><text x="12.6213%" y="847.50">&lt;..</text></g><g><title>core::ops::function::FnMut::call_mut (825 samples, 1.87%)</title><rect x="12.3713%" y="821" width="1.8707%" height="15" fill="rgb(242,21,14)"/><text x="12.6213%" y="831.50">c..</text></g><g><title>compiler::parse::expression::expression (824 samples, 1.87%)</title><rect x="12.3736%" y="805" width="1.8684%" height="15" fill="rgb(222,19,48)"/><text x="12.6236%" y="815.50">c..</text></g><g><title>nom::branch::alt::{{closure}} (824 samples, 1.87%)</title><rect x="12.3736%" y="789" width="1.8684%" height="15" fill="rgb(232,45,27)"/><text x="12.6236%" y="799.50">n..</text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (824 samples, 1.87%)</title><rect x="12.3736%" y="773" width="1.8684%" height="15" fill="rgb(249,103,42)"/><text x="12.6236%" y="783.50">&lt;..</text></g><g><title>compiler::parse::tokens::legacy_begin (78 samples, 0.18%)</title><rect x="14.2420%" y="965" width="0.1769%" height="15" fill="rgb(246,81,33)"/><text x="14.4920%" y="975.50"></text></g><g><title>nom::combinator::map::{{closure}} (78 samples, 0.18%)</title><rect x="14.2420%" y="949" width="0.1769%" height="15" fill="rgb(252,33,42)"/><text x="14.4920%" y="959.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (78 samples, 0.18%)</title><rect x="14.2420%" y="933" width="0.1769%" height="15" fill="rgb(209,212,41)"/><text x="14.4920%" y="943.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (78 samples, 0.18%)</title><rect x="14.2420%" y="917" width="0.1769%" height="15" fill="rgb(207,154,6)"/><text x="14.4920%" y="927.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (78 samples, 0.18%)</title><rect x="14.2420%" y="901" width="0.1769%" height="15" fill="rgb(223,64,47)"/><text x="14.4920%" y="911.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (78 samples, 0.18%)</title><rect x="14.2420%" y="885" width="0.1769%" height="15" fill="rgb(211,161,38)"/><text x="14.4920%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (78 samples, 0.18%)</title><rect x="14.2420%" y="869" width="0.1769%" height="15" fill="rgb(219,138,40)"/><text x="14.4920%" y="879.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (78 samples, 0.18%)</title><rect x="14.2420%" y="853" width="0.1769%" height="15" fill="rgb(241,228,46)"/><text x="14.4920%" y="863.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (78 samples, 0.18%)</title><rect x="14.2420%" y="837" width="0.1769%" height="15" fill="rgb(223,209,38)"/><text x="14.4920%" y="847.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (78 samples, 0.18%)</title><rect x="14.2420%" y="821" width="0.1769%" height="15" fill="rgb(236,164,45)"/><text x="14.4920%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (78 samples, 0.18%)</title><rect x="14.2420%" y="805" width="0.1769%" height="15" fill="rgb(231,15,5)"/><text x="14.4920%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (78 samples, 0.18%)</title><rect x="14.2420%" y="789" width="0.1769%" height="15" fill="rgb(252,35,15)"/><text x="14.4920%" y="799.50"></text></g><g><title>compiler::parse::expression::expression (78 samples, 0.18%)</title><rect x="14.2420%" y="773" width="0.1769%" height="15" fill="rgb(248,181,18)"/><text x="14.4920%" y="783.50"></text></g><g><title>nom::branch::alt::{{closure}} (78 samples, 0.18%)</title><rect x="14.2420%" y="757" width="0.1769%" height="15" fill="rgb(233,39,42)"/><text x="14.4920%" y="767.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (78 samples, 0.18%)</title><rect x="14.2420%" y="741" width="0.1769%" height="15" fill="rgb(238,110,33)"/><text x="14.4920%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (78 samples, 0.18%)</title><rect x="14.2420%" y="725" width="0.1769%" height="15" fill="rgb(233,195,10)"/><text x="14.4920%" y="735.50"></text></g><g><title>core::ops::function::FnMut::call_mut (78 samples, 0.18%)</title><rect x="14.2420%" y="709" width="0.1769%" height="15" fill="rgb(254,105,3)"/><text x="14.4920%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (46 samples, 0.10%)</title><rect x="14.4393%" y="597" width="0.1043%" height="15" fill="rgb(221,225,9)"/><text x="14.6893%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (54 samples, 0.12%)</title><rect x="14.4347%" y="629" width="0.1224%" height="15" fill="rgb(224,227,45)"/><text x="14.6847%" y="639.50"></text></g><g><title>nom::sequence::pair::{{closure}} (54 samples, 0.12%)</title><rect x="14.4347%" y="613" width="0.1224%" height="15" fill="rgb(229,198,43)"/><text x="14.6847%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (65 samples, 0.15%)</title><rect x="14.4256%" y="661" width="0.1474%" height="15" fill="rgb(206,209,35)"/><text x="14.6756%" y="671.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (65 samples, 0.15%)</title><rect x="14.4256%" y="645" width="0.1474%" height="15" fill="rgb(245,195,53)"/><text x="14.6756%" y="655.50"></text></g><g><title>compiler::parse::expression::helper (68 samples, 0.15%)</title><rect x="14.4234%" y="693" width="0.1542%" height="15" fill="rgb(240,92,26)"/><text x="14.6734%" y="703.50"></text></g><g><title>nom::combinator::map::{{closure}} (68 samples, 0.15%)</title><rect x="14.4234%" y="677" width="0.1542%" height="15" fill="rgb(207,40,23)"/><text x="14.6734%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (45 samples, 0.10%)</title><rect x="14.7204%" y="565" width="0.1020%" height="15" fill="rgb(223,111,35)"/><text x="14.9704%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (66 samples, 0.15%)</title><rect x="14.6887%" y="597" width="0.1497%" height="15" fill="rgb(229,147,28)"/><text x="14.9387%" y="607.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (63 samples, 0.14%)</title><rect x="14.6955%" y="581" width="0.1429%" height="15" fill="rgb(211,29,28)"/><text x="14.9455%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (73 samples, 0.17%)</title><rect x="14.6841%" y="629" width="0.1655%" height="15" fill="rgb(228,72,33)"/><text x="14.9341%" y="639.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (73 samples, 0.17%)</title><rect x="14.6841%" y="613" width="0.1655%" height="15" fill="rgb(205,214,31)"/><text x="14.9341%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (102 samples, 0.23%)</title><rect x="14.6592%" y="661" width="0.2313%" height="15" fill="rgb(224,111,15)"/><text x="14.9092%" y="671.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (101 samples, 0.23%)</title><rect x="14.6615%" y="645" width="0.2290%" height="15" fill="rgb(253,21,26)"/><text x="14.9115%" y="655.50"></text></g><g><title>compiler::parse::expression::negative (121 samples, 0.27%)</title><rect x="14.6524%" y="693" width="0.2744%" height="15" fill="rgb(245,139,43)"/><text x="14.9024%" y="703.50"></text></g><g><title>nom::combinator::map::{{closure}} (121 samples, 0.27%)</title><rect x="14.6524%" y="677" width="0.2744%" height="15" fill="rgb(252,170,7)"/><text x="14.9024%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (61 samples, 0.14%)</title><rect x="15.1875%" y="421" width="0.1383%" height="15" fill="rgb(231,118,14)"/><text x="15.4375%" y="431.50"></text></g><g><title>nom::branch::alt::{{closure}} (46 samples, 0.10%)</title><rect x="15.2215%" y="405" width="0.1043%" height="15" fill="rgb(238,83,0)"/><text x="15.4715%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (91 samples, 0.21%)</title><rect x="15.1218%" y="517" width="0.2063%" height="15" fill="rgb(221,39,39)"/><text x="15.3718%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (78 samples, 0.18%)</title><rect x="15.1512%" y="501" width="0.1769%" height="15" fill="rgb(222,119,46)"/><text x="15.4012%" y="511.50"></text></g><g><title>compiler::parse::expression::identifier (78 samples, 0.18%)</title><rect x="15.1512%" y="485" width="0.1769%" height="15" fill="rgb(222,165,49)"/><text x="15.4012%" y="495.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (73 samples, 0.17%)</title><rect x="15.1626%" y="469" width="0.1655%" height="15" fill="rgb(219,113,52)"/><text x="15.4126%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 0.15%)</title><rect x="15.1762%" y="453" width="0.1519%" height="15" fill="rgb(214,7,15)"/><text x="15.4262%" y="463.50"></text></g><g><title>nom::multi::many1_count::{{closure}} (67 samples, 0.15%)</title><rect x="15.1762%" y="437" width="0.1519%" height="15" fill="rgb(235,32,4)"/><text x="15.4262%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (107 samples, 0.24%)</title><rect x="15.1036%" y="549" width="0.2426%" height="15" fill="rgb(238,90,54)"/><text x="15.3536%" y="559.50"></text></g><g><title>nom::combinator::map::{{closure}} (101 samples, 0.23%)</title><rect x="15.1172%" y="533" width="0.2290%" height="15" fill="rgb(213,208,19)"/><text x="15.3672%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (198 samples, 0.45%)</title><rect x="14.9404%" y="613" width="0.4490%" height="15" fill="rgb(233,156,4)"/><text x="15.1904%" y="623.50"></text></g><g><title>nom::sequence::pair::{{closure}} (157 samples, 0.36%)</title><rect x="15.0333%" y="597" width="0.3560%" height="15" fill="rgb(207,194,5)"/><text x="15.2833%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (157 samples, 0.36%)</title><rect x="15.0333%" y="581" width="0.3560%" height="15" fill="rgb(206,111,30)"/><text x="15.2833%" y="591.50"></text></g><g><title>nom::multi::separated_list1::{{closure}} (129 samples, 0.29%)</title><rect x="15.0968%" y="565" width="0.2925%" height="15" fill="rgb(243,70,54)"/><text x="15.3468%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (221 samples, 0.50%)</title><rect x="14.9290%" y="645" width="0.5011%" height="15" fill="rgb(242,28,8)"/><text x="15.1790%" y="655.50"></text></g><g><title>nom::combinator::map::{{closure}} (221 samples, 0.50%)</title><rect x="14.9290%" y="629" width="0.5011%" height="15" fill="rgb(219,106,18)"/><text x="15.1790%" y="639.50"></text></g><g><title>compiler::parse::expression::path (228 samples, 0.52%)</title><rect x="14.9268%" y="693" width="0.5170%" height="15" fill="rgb(244,222,10)"/><text x="15.1768%" y="703.50"></text></g><g><title>nom::branch::alt::{{closure}} (227 samples, 0.51%)</title><rect x="14.9290%" y="677" width="0.5147%" height="15" fill="rgb(236,179,52)"/><text x="15.1790%" y="687.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (227 samples, 0.51%)</title><rect x="14.9290%" y="661" width="0.5147%" height="15" fill="rgb(213,23,39)"/><text x="15.1790%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (456 samples, 1.03%)</title><rect x="14.4234%" y="725" width="1.0340%" height="15" fill="rgb(238,48,10)"/><text x="14.6734%" y="735.50"></text></g><g><title>core::ops::function::FnMut::call_mut (456 samples, 1.03%)</title><rect x="14.4234%" y="709" width="1.0340%" height="15" fill="rgb(251,196,23)"/><text x="14.6734%" y="719.50"></text></g><g><title>compiler::parse::tokens::tokens (1,369 samples, 3.10%)</title><rect x="12.3713%" y="1061" width="3.1042%" height="15" fill="rgb(250,152,24)"/><text x="12.6213%" y="1071.50">com..</text></g><g><title>compiler::parse::tokens::token (1,369 samples, 3.10%)</title><rect x="12.3713%" y="1045" width="3.1042%" height="15" fill="rgb(209,150,17)"/><text x="12.6213%" y="1055.50">com..</text></g><g><title>nom::branch::alt::{{closure}} (1,369 samples, 3.10%)</title><rect x="12.3713%" y="1029" width="3.1042%" height="15" fill="rgb(234,202,34)"/><text x="12.6213%" y="1039.50">nom..</text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I,J) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1,369 samples, 3.10%)</title><rect x="12.3713%" y="1013" width="3.1042%" height="15" fill="rgb(253,148,53)"/><text x="12.6213%" y="1023.50">&lt;(A..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,369 samples, 3.10%)</title><rect x="12.3713%" y="997" width="3.1042%" height="15" fill="rgb(218,129,16)"/><text x="12.6213%" y="1007.50">&lt;F ..</text></g><g><title>core::ops::function::FnMut::call_mut (1,369 samples, 3.10%)</title><rect x="12.3713%" y="981" width="3.1042%" height="15" fill="rgb(216,85,19)"/><text x="12.6213%" y="991.50">cor..</text></g><g><title>compiler::parse::tokens::legacy_if (466 samples, 1.06%)</title><rect x="14.4188%" y="965" width="1.0566%" height="15" fill="rgb(235,228,7)"/><text x="14.6688%" y="975.50"></text></g><g><title>nom::combinator::map::{{closure}} (466 samples, 1.06%)</title><rect x="14.4188%" y="949" width="1.0566%" height="15" fill="rgb(245,175,0)"/><text x="14.6688%" y="959.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (466 samples, 1.06%)</title><rect x="14.4188%" y="933" width="1.0566%" height="15" fill="rgb(208,168,36)"/><text x="14.6688%" y="943.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (466 samples, 1.06%)</title><rect x="14.4188%" y="917" width="1.0566%" height="15" fill="rgb(246,171,24)"/><text x="14.6688%" y="927.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (466 samples, 1.06%)</title><rect x="14.4188%" y="901" width="1.0566%" height="15" fill="rgb(215,142,24)"/><text x="14.6688%" y="911.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (466 samples, 1.06%)</title><rect x="14.4188%" y="885" width="1.0566%" height="15" fill="rgb(250,187,7)"/><text x="14.6688%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (466 samples, 1.06%)</title><rect x="14.4188%" y="869" width="1.0566%" height="15" fill="rgb(228,66,33)"/><text x="14.6688%" y="879.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (466 samples, 1.06%)</title><rect x="14.4188%" y="853" width="1.0566%" height="15" fill="rgb(234,215,21)"/><text x="14.6688%" y="863.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (466 samples, 1.06%)</title><rect x="14.4188%" y="837" width="1.0566%" height="15" fill="rgb(222,191,20)"/><text x="14.6688%" y="847.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (466 samples, 1.06%)</title><rect x="14.4188%" y="821" width="1.0566%" height="15" fill="rgb(245,79,54)"/><text x="14.6688%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (466 samples, 1.06%)</title><rect x="14.4188%" y="805" width="1.0566%" height="15" fill="rgb(240,10,37)"/><text x="14.6688%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (466 samples, 1.06%)</title><rect x="14.4188%" y="789" width="1.0566%" height="15" fill="rgb(214,192,32)"/><text x="14.6688%" y="799.50"></text></g><g><title>compiler::parse::expression::expression (466 samples, 1.06%)</title><rect x="14.4188%" y="773" width="1.0566%" height="15" fill="rgb(209,36,54)"/><text x="14.6688%" y="783.50"></text></g><g><title>nom::branch::alt::{{closure}} (466 samples, 1.06%)</title><rect x="14.4188%" y="757" width="1.0566%" height="15" fill="rgb(220,10,11)"/><text x="14.6688%" y="767.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (466 samples, 1.06%)</title><rect x="14.4188%" y="741" width="1.0566%" height="15" fill="rgb(221,106,17)"/><text x="14.6688%" y="751.50"></text></g><g><title>compiler::parse::path::resolve (67 samples, 0.15%)</title><rect x="15.7408%" y="1013" width="0.1519%" height="15" fill="rgb(251,142,44)"/><text x="15.9908%" y="1023.50"></text></g><g><title>compiler::parse::tree::tree (190 samples, 0.43%)</title><rect x="15.4755%" y="1061" width="0.4308%" height="15" fill="rgb(238,13,15)"/><text x="15.7255%" y="1071.50"></text></g><g><title>compiler::parse::tree::tree (156 samples, 0.35%)</title><rect x="15.5526%" y="1045" width="0.3537%" height="15" fill="rgb(208,107,27)"/><text x="15.8026%" y="1055.50"></text></g><g><title>compiler::parse::tree::resolve_expression_paths (77 samples, 0.17%)</title><rect x="15.7317%" y="1029" width="0.1746%" height="15" fill="rgb(205,136,37)"/><text x="15.9817%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (76 samples, 0.17%)</title><rect x="16.0537%" y="357" width="0.1723%" height="15" fill="rgb(250,205,27)"/><text x="16.3037%" y="367.50"></text></g><g><title>core::ptr::write (68 samples, 0.15%)</title><rect x="16.0718%" y="341" width="0.1542%" height="15" fill="rgb(210,80,43)"/><text x="16.3218%" y="351.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (114 samples, 0.26%)</title><rect x="16.0219%" y="389" width="0.2585%" height="15" fill="rgb(247,160,36)"/><text x="16.2719%" y="399.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (113 samples, 0.26%)</title><rect x="16.0242%" y="373" width="0.2562%" height="15" fill="rgb(234,13,49)"/><text x="16.2742%" y="383.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (115 samples, 0.26%)</title><rect x="16.0219%" y="469" width="0.2608%" height="15" fill="rgb(234,122,0)"/><text x="16.2719%" y="479.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (115 samples, 0.26%)</title><rect x="16.0219%" y="453" width="0.2608%" height="15" fill="rgb(207,146,38)"/><text x="16.2719%" y="463.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (115 samples, 0.26%)</title><rect x="16.0219%" y="437" width="0.2608%" height="15" fill="rgb(207,177,25)"/><text x="16.2719%" y="447.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (115 samples, 0.26%)</title><rect x="16.0219%" y="421" width="0.2608%" height="15" fill="rgb(211,178,42)"/><text x="16.2719%" y="431.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (115 samples, 0.26%)</title><rect x="16.0219%" y="405" width="0.2608%" height="15" fill="rgb(230,69,54)"/><text x="16.2719%" y="415.50"></text></g><g><title>compiler::pre_fixer::fix_iter (234 samples, 0.53%)</title><rect x="15.9947%" y="645" width="0.5306%" height="15" fill="rgb(214,135,41)"/><text x="16.2447%" y="655.50"></text></g><g><title>regex::re_unicode::Regex::replace (234 samples, 0.53%)</title><rect x="15.9947%" y="629" width="0.5306%" height="15" fill="rgb(237,67,25)"/><text x="16.2447%" y="639.50"></text></g><g><title>regex::re_unicode::Regex::replacen (234 samples, 0.53%)</title><rect x="15.9947%" y="613" width="0.5306%" height="15" fill="rgb(222,189,50)"/><text x="16.2447%" y="623.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (222 samples, 0.50%)</title><rect x="16.0219%" y="597" width="0.5034%" height="15" fill="rgb(245,148,34)"/><text x="16.2719%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (222 samples, 0.50%)</title><rect x="16.0219%" y="581" width="0.5034%" height="15" fill="rgb(222,29,6)"/><text x="16.2719%" y="591.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (222 samples, 0.50%)</title><rect x="16.0219%" y="565" width="0.5034%" height="15" fill="rgb(221,189,43)"/><text x="16.2719%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (222 samples, 0.50%)</title><rect x="16.0219%" y="549" width="0.5034%" height="15" fill="rgb(207,36,27)"/><text x="16.2719%" y="559.50"></text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (222 samples, 0.50%)</title><rect x="16.0219%" y="533" width="0.5034%" height="15" fill="rgb(217,90,24)"/><text x="16.2719%" y="543.50"></text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (222 samples, 0.50%)</title><rect x="16.0219%" y="517" width="0.5034%" height="15" fill="rgb(224,66,35)"/><text x="16.2719%" y="527.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (222 samples, 0.50%)</title><rect x="16.0219%" y="501" width="0.5034%" height="15" fill="rgb(221,13,50)"/><text x="16.2719%" y="511.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (222 samples, 0.50%)</title><rect x="16.0219%" y="485" width="0.5034%" height="15" fill="rgb(236,68,49)"/><text x="16.2719%" y="495.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (107 samples, 0.24%)</title><rect x="16.2827%" y="469" width="0.2426%" height="15" fill="rgb(229,146,28)"/><text x="16.5327%" y="479.50"></text></g><g><title>regex::dfa::Fsm::reverse (81 samples, 0.18%)</title><rect x="16.3417%" y="453" width="0.1837%" height="15" fill="rgb(225,31,38)"/><text x="16.5917%" y="463.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (81 samples, 0.18%)</title><rect x="16.3417%" y="437" width="0.1837%" height="15" fill="rgb(250,208,3)"/><text x="16.5917%" y="447.50"></text></g><g><title>regex::dfa::Fsm::next_si (63 samples, 0.14%)</title><rect x="16.3825%" y="421" width="0.1429%" height="15" fill="rgb(246,54,23)"/><text x="16.6325%" y="431.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (63 samples, 0.14%)</title><rect x="16.3825%" y="405" width="0.1429%" height="15" fill="rgb(243,76,11)"/><text x="16.6325%" y="415.50"></text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (257 samples, 0.58%)</title><rect x="15.9449%" y="677" width="0.5827%" height="15" fill="rgb(245,21,50)"/><text x="16.1949%" y="687.50"></text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (252 samples, 0.57%)</title><rect x="15.9562%" y="661" width="0.5714%" height="15" fill="rgb(228,9,43)"/><text x="16.2062%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (336 samples, 0.76%)</title><rect x="16.7611%" y="437" width="0.7619%" height="15" fill="rgb(208,100,47)"/><text x="17.0111%" y="447.50"></text></g><g><title>core::ptr::write (297 samples, 0.67%)</title><rect x="16.8496%" y="421" width="0.6734%" height="15" fill="rgb(232,26,8)"/><text x="17.0996%" y="431.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (50 samples, 0.11%)</title><rect x="17.5230%" y="437" width="0.1134%" height="15" fill="rgb(216,166,38)"/><text x="17.7730%" y="447.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (522 samples, 1.18%)</title><rect x="16.5457%" y="469" width="1.1836%" height="15" fill="rgb(251,202,51)"/><text x="16.7957%" y="479.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (522 samples, 1.18%)</title><rect x="16.5457%" y="453" width="1.1836%" height="15" fill="rgb(254,216,34)"/><text x="16.7957%" y="463.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (525 samples, 1.19%)</title><rect x="16.5457%" y="549" width="1.1904%" height="15" fill="rgb(251,32,27)"/><text x="16.7957%" y="559.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (525 samples, 1.19%)</title><rect x="16.5457%" y="533" width="1.1904%" height="15" fill="rgb(208,127,28)"/><text x="16.7957%" y="543.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (525 samples, 1.19%)</title><rect x="16.5457%" y="517" width="1.1904%" height="15" fill="rgb(224,137,22)"/><text x="16.7957%" y="527.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (525 samples, 1.19%)</title><rect x="16.5457%" y="501" width="1.1904%" height="15" fill="rgb(254,70,32)"/><text x="16.7957%" y="511.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (525 samples, 1.19%)</title><rect x="16.5457%" y="485" width="1.1904%" height="15" fill="rgb(229,75,37)"/><text x="16.7957%" y="495.50"></text></g><g><title>regex::dfa::Fsm::forward (75 samples, 0.17%)</title><rect x="17.7362%" y="533" width="0.1701%" height="15" fill="rgb(252,64,23)"/><text x="17.9862%" y="543.50"></text></g><g><title>regex::dfa::Fsm::exec_at (75 samples, 0.17%)</title><rect x="17.7362%" y="517" width="0.1701%" height="15" fill="rgb(232,162,48)"/><text x="17.9862%" y="527.50"></text></g><g><title>compiler::pre_fixer::fix_iter (1,027 samples, 2.33%)</title><rect x="15.9449%" y="725" width="2.3287%" height="15" fill="rgb(246,160,12)"/><text x="16.1949%" y="735.50">c..</text></g><g><title>regex::re_unicode::Regex::replace (1,027 samples, 2.33%)</title><rect x="15.9449%" y="709" width="2.3287%" height="15" fill="rgb(247,166,0)"/><text x="16.1949%" y="719.50">r..</text></g><g><title>regex::re_unicode::Regex::replacen (1,027 samples, 2.33%)</title><rect x="15.9449%" y="693" width="2.3287%" height="15" fill="rgb(249,219,21)"/><text x="16.1949%" y="703.50">r..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (765 samples, 1.73%)</title><rect x="16.5389%" y="677" width="1.7346%" height="15" fill="rgb(205,209,3)"/><text x="16.7889%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (765 samples, 1.73%)</title><rect x="16.5389%" y="661" width="1.7346%" height="15" fill="rgb(243,44,1)"/><text x="16.7889%" y="671.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (765 samples, 1.73%)</title><rect x="16.5389%" y="645" width="1.7346%" height="15" fill="rgb(206,159,16)"/><text x="16.7889%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (765 samples, 1.73%)</title><rect x="16.5389%" y="629" width="1.7346%" height="15" fill="rgb(244,77,30)"/><text x="16.7889%" y="639.50"></text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (764 samples, 1.73%)</title><rect x="16.5412%" y="613" width="1.7323%" height="15" fill="rgb(218,69,12)"/><text x="16.7912%" y="623.50"></text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (764 samples, 1.73%)</title><rect x="16.5412%" y="597" width="1.7323%" height="15" fill="rgb(212,87,7)"/><text x="16.7912%" y="607.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (764 samples, 1.73%)</title><rect x="16.5412%" y="581" width="1.7323%" height="15" fill="rgb(245,114,25)"/><text x="16.7912%" y="591.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (764 samples, 1.73%)</title><rect x="16.5412%" y="565" width="1.7323%" height="15" fill="rgb(210,61,42)"/><text x="16.7912%" y="575.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (237 samples, 0.54%)</title><rect x="17.7362%" y="549" width="0.5374%" height="15" fill="rgb(211,52,33)"/><text x="17.9862%" y="559.50"></text></g><g><title>regex::dfa::Fsm::reverse (162 samples, 0.37%)</title><rect x="17.9062%" y="533" width="0.3673%" height="15" fill="rgb(234,58,33)"/><text x="18.1562%" y="543.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (162 samples, 0.37%)</title><rect x="17.9062%" y="517" width="0.3673%" height="15" fill="rgb(220,115,36)"/><text x="18.1562%" y="527.50"></text></g><g><title>regex::dfa::Fsm::next_si (124 samples, 0.28%)</title><rect x="17.9924%" y="501" width="0.2812%" height="15" fill="rgb(243,153,54)"/><text x="18.2424%" y="511.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (124 samples, 0.28%)</title><rect x="17.9924%" y="485" width="0.2812%" height="15" fill="rgb(251,47,18)"/><text x="18.2424%" y="495.50"></text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (1,044 samples, 2.37%)</title><rect x="15.9086%" y="757" width="2.3672%" height="15" fill="rgb(242,102,42)"/><text x="16.1586%" y="767.50">&lt;F..</text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (1,041 samples, 2.36%)</title><rect x="15.9154%" y="741" width="2.3604%" height="15" fill="rgb(234,31,38)"/><text x="16.1654%" y="751.50">co..</text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (51 samples, 0.12%)</title><rect x="18.6363%" y="517" width="0.1156%" height="15" fill="rgb(221,117,51)"/><text x="18.8863%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (619 samples, 1.40%)</title><rect x="18.7611%" y="517" width="1.4036%" height="15" fill="rgb(212,20,18)"/><text x="19.0111%" y="527.50"></text></g><g><title>core::ptr::write (542 samples, 1.23%)</title><rect x="18.9356%" y="501" width="1.2290%" height="15" fill="rgb(245,133,36)"/><text x="19.1856%" y="511.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (122 samples, 0.28%)</title><rect x="20.1646%" y="517" width="0.2766%" height="15" fill="rgb(212,6,19)"/><text x="20.4146%" y="527.50"></text></g><g><title>regex::prog::InstRanges::matches (52 samples, 0.12%)</title><rect x="20.4798%" y="517" width="0.1179%" height="15" fill="rgb(218,1,36)"/><text x="20.7298%" y="527.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (1,017 samples, 2.31%)</title><rect x="18.2940%" y="549" width="2.3060%" height="15" fill="rgb(246,84,54)"/><text x="18.5440%" y="559.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (1,016 samples, 2.30%)</title><rect x="18.2962%" y="533" width="2.3038%" height="15" fill="rgb(242,110,6)"/><text x="18.5462%" y="543.50">r..</text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (1,025 samples, 2.32%)</title><rect x="18.2894%" y="629" width="2.3242%" height="15" fill="rgb(214,47,5)"/><text x="18.5394%" y="639.50">r..</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (1,025 samples, 2.32%)</title><rect x="18.2894%" y="613" width="2.3242%" height="15" fill="rgb(218,159,25)"/><text x="18.5394%" y="623.50">r..</text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (1,025 samples, 2.32%)</title><rect x="18.2894%" y="597" width="2.3242%" height="15" fill="rgb(215,211,28)"/><text x="18.5394%" y="607.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (1,025 samples, 2.32%)</title><rect x="18.2894%" y="581" width="2.3242%" height="15" fill="rgb(238,59,32)"/><text x="18.5394%" y="591.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (1,025 samples, 2.32%)</title><rect x="18.2894%" y="565" width="2.3242%" height="15" fill="rgb(226,82,3)"/><text x="18.5394%" y="575.50">r..</text></g><g><title>regex::dfa::Fsm::exec_at (161 samples, 0.37%)</title><rect x="20.6136%" y="597" width="0.3651%" height="15" fill="rgb(240,164,32)"/><text x="20.8636%" y="607.50"></text></g><g><title>regex::dfa::Fsm::forward (162 samples, 0.37%)</title><rect x="20.6136%" y="613" width="0.3673%" height="15" fill="rgb(232,46,7)"/><text x="20.8636%" y="623.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (1,466 samples, 3.32%)</title><rect x="18.2849%" y="661" width="3.3241%" height="15" fill="rgb(229,129,53)"/><text x="18.5349%" y="671.50">&lt;re..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,466 samples, 3.32%)</title><rect x="18.2849%" y="645" width="3.3241%" height="15" fill="rgb(234,188,29)"/><text x="18.5349%" y="655.50">&lt;re..</text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (439 samples, 1.00%)</title><rect x="20.6136%" y="629" width="0.9954%" height="15" fill="rgb(246,141,4)"/><text x="20.8636%" y="639.50"></text></g><g><title>regex::dfa::Fsm::reverse (277 samples, 0.63%)</title><rect x="20.9809%" y="613" width="0.6281%" height="15" fill="rgb(229,23,39)"/><text x="21.2309%" y="623.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (277 samples, 0.63%)</title><rect x="20.9809%" y="597" width="0.6281%" height="15" fill="rgb(206,12,3)"/><text x="21.2309%" y="607.50"></text></g><g><title>regex::dfa::Fsm::next_si (207 samples, 0.47%)</title><rect x="21.1396%" y="581" width="0.4694%" height="15" fill="rgb(252,226,20)"/><text x="21.3896%" y="591.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (207 samples, 0.47%)</title><rect x="21.1396%" y="565" width="0.4694%" height="15" fill="rgb(216,123,35)"/><text x="21.3896%" y="575.50"></text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,467 samples, 3.33%)</title><rect x="18.2849%" y="677" width="3.3264%" height="15" fill="rgb(212,68,40)"/><text x="18.5349%" y="687.50">&lt;re..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (1,468 samples, 3.33%)</title><rect x="18.2849%" y="757" width="3.3286%" height="15" fill="rgb(254,125,32)"/><text x="18.5349%" y="767.50">cor..</text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1,468 samples, 3.33%)</title><rect x="18.2849%" y="741" width="3.3286%" height="15" fill="rgb(253,97,22)"/><text x="18.5349%" y="751.50">cor..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (1,468 samples, 3.33%)</title><rect x="18.2849%" y="725" width="3.3286%" height="15" fill="rgb(241,101,14)"/><text x="18.5349%" y="735.50">cor..</text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,468 samples, 3.33%)</title><rect x="18.2849%" y="709" width="3.3286%" height="15" fill="rgb(238,103,29)"/><text x="18.5349%" y="719.50">&lt;co..</text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (1,468 samples, 3.33%)</title><rect x="18.2849%" y="693" width="3.3286%" height="15" fill="rgb(233,195,47)"/><text x="18.5349%" y="703.50">&lt;re..</text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (2,518 samples, 5.71%)</title><rect x="15.9063%" y="837" width="5.7095%" height="15" fill="rgb(246,218,30)"/><text x="16.1563%" y="847.50">&lt;F as r..</text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (2,518 samples, 5.71%)</title><rect x="15.9063%" y="821" width="5.7095%" height="15" fill="rgb(219,145,47)"/><text x="16.1563%" y="831.50">compile..</text></g><g><title>compiler::pre_fixer::fix_iter (2,518 samples, 5.71%)</title><rect x="15.9063%" y="805" width="5.7095%" height="15" fill="rgb(243,12,26)"/><text x="16.1563%" y="815.50">compile..</text></g><g><title>regex::re_unicode::Regex::replace (2,518 samples, 5.71%)</title><rect x="15.9063%" y="789" width="5.7095%" height="15" fill="rgb(214,87,16)"/><text x="16.1563%" y="799.50">regex::..</text></g><g><title>regex::re_unicode::Regex::replacen (2,518 samples, 5.71%)</title><rect x="15.9063%" y="773" width="5.7095%" height="15" fill="rgb(208,99,42)"/><text x="16.1563%" y="783.50">regex::..</text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (95 samples, 0.22%)</title><rect x="22.3233%" y="597" width="0.2154%" height="15" fill="rgb(253,99,2)"/><text x="22.5733%" y="607.50"></text></g><g><title>regex::utf8::decode_utf8 (54 samples, 0.12%)</title><rect x="22.4162%" y="581" width="0.1224%" height="15" fill="rgb(220,168,23)"/><text x="22.6662%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1,238 samples, 2.81%)</title><rect x="22.5523%" y="597" width="2.8071%" height="15" fill="rgb(242,38,24)"/><text x="22.8023%" y="607.50">al..</text></g><g><title>core::ptr::write (1,097 samples, 2.49%)</title><rect x="22.8720%" y="581" width="2.4874%" height="15" fill="rgb(225,182,9)"/><text x="23.1220%" y="591.50">co..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (221 samples, 0.50%)</title><rect x="25.3594%" y="597" width="0.5011%" height="15" fill="rgb(243,178,37)"/><text x="25.6094%" y="607.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (2,004 samples, 4.54%)</title><rect x="21.6158%" y="629" width="4.5440%" height="15" fill="rgb(232,139,19)"/><text x="21.8658%" y="639.50">regex..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (2,003 samples, 4.54%)</title><rect x="21.6181%" y="613" width="4.5417%" height="15" fill="rgb(225,201,24)"/><text x="21.8681%" y="623.50">regex..</text></g><g><title>regex::prog::InstRanges::matches (88 samples, 0.20%)</title><rect x="25.9603%" y="597" width="0.1995%" height="15" fill="rgb(221,47,46)"/><text x="26.2103%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::le (50 samples, 0.11%)</title><rect x="26.0464%" y="581" width="0.1134%" height="15" fill="rgb(249,23,13)"/><text x="26.2964%" y="591.50"></text></g><g><title>compiler::compile (8,983 samples, 20.37%)</title><rect x="5.8410%" y="1077" width="20.3687%" height="15" fill="rgb(219,9,5)"/><text x="6.0910%" y="1087.50">compiler::compile</text></g><g><title>compiler::pre_fixer::pre_fix (4,544 samples, 10.30%)</title><rect x="15.9063%" y="1061" width="10.3034%" height="15" fill="rgb(254,171,16)"/><text x="16.1563%" y="1071.50">compiler::pre_f..</text></g><g><title>compiler::pre_fixer::fix_iter (4,544 samples, 10.30%)</title><rect x="15.9063%" y="1045" width="10.3034%" height="15" fill="rgb(230,171,20)"/><text x="16.1563%" y="1055.50">compiler::pre_f..</text></g><g><title>regex::re_unicode::Regex::replace (4,544 samples, 10.30%)</title><rect x="15.9063%" y="1029" width="10.3034%" height="15" fill="rgb(210,71,41)"/><text x="16.1563%" y="1039.50">regex::re_unico..</text></g><g><title>regex::re_unicode::Regex::replacen (4,544 samples, 10.30%)</title><rect x="15.9063%" y="1013" width="10.3034%" height="15" fill="rgb(206,173,20)"/><text x="16.1563%" y="1023.50">regex::re_unico..</text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (4,544 samples, 10.30%)</title><rect x="15.9063%" y="997" width="10.3034%" height="15" fill="rgb(233,88,34)"/><text x="16.1563%" y="1007.50">&lt;F as regex::re..</text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (4,544 samples, 10.30%)</title><rect x="15.9063%" y="981" width="10.3034%" height="15" fill="rgb(223,209,46)"/><text x="16.1563%" y="991.50">compiler::pre_f..</text></g><g><title>compiler::pre_fixer::fix_iter (4,544 samples, 10.30%)</title><rect x="15.9063%" y="965" width="10.3034%" height="15" fill="rgb(250,43,18)"/><text x="16.1563%" y="975.50">compiler::pre_f..</text></g><g><title>regex::re_unicode::Regex::replace (4,544 samples, 10.30%)</title><rect x="15.9063%" y="949" width="10.3034%" height="15" fill="rgb(208,13,10)"/><text x="16.1563%" y="959.50">regex::re_unico..</text></g><g><title>regex::re_unicode::Regex::replacen (4,544 samples, 10.30%)</title><rect x="15.9063%" y="933" width="10.3034%" height="15" fill="rgb(212,200,36)"/><text x="16.1563%" y="943.50">regex::re_unico..</text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (4,544 samples, 10.30%)</title><rect x="15.9063%" y="917" width="10.3034%" height="15" fill="rgb(225,90,30)"/><text x="16.1563%" y="927.50">&lt;F as regex::re..</text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (4,544 samples, 10.30%)</title><rect x="15.9063%" y="901" width="10.3034%" height="15" fill="rgb(236,182,39)"/><text x="16.1563%" y="911.50">compiler::pre_f..</text></g><g><title>compiler::pre_fixer::fix_iter (4,544 samples, 10.30%)</title><rect x="15.9063%" y="885" width="10.3034%" height="15" fill="rgb(212,144,35)"/><text x="16.1563%" y="895.50">compiler::pre_f..</text></g><g><title>regex::re_unicode::Regex::replace (4,544 samples, 10.30%)</title><rect x="15.9063%" y="869" width="10.3034%" height="15" fill="rgb(228,63,44)"/><text x="16.1563%" y="879.50">regex::re_unico..</text></g><g><title>regex::re_unicode::Regex::replacen (4,544 samples, 10.30%)</title><rect x="15.9063%" y="853" width="10.3034%" height="15" fill="rgb(228,109,6)"/><text x="16.1563%" y="863.50">regex::re_unico..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (2,026 samples, 4.59%)</title><rect x="21.6158%" y="837" width="4.5939%" height="15" fill="rgb(238,117,24)"/><text x="21.8658%" y="847.50">core:..</text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2,026 samples, 4.59%)</title><rect x="21.6158%" y="821" width="4.5939%" height="15" fill="rgb(242,26,26)"/><text x="21.8658%" y="831.50">core:..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (2,026 samples, 4.59%)</title><rect x="21.6158%" y="805" width="4.5939%" height="15" fill="rgb(221,92,48)"/><text x="21.8658%" y="815.50">core:..</text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,026 samples, 4.59%)</title><rect x="21.6158%" y="789" width="4.5939%" height="15" fill="rgb(209,209,32)"/><text x="21.8658%" y="799.50">&lt;core..</text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (2,026 samples, 4.59%)</title><rect x="21.6158%" y="773" width="4.5939%" height="15" fill="rgb(221,70,22)"/><text x="21.8658%" y="783.50">&lt;rege..</text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,026 samples, 4.59%)</title><rect x="21.6158%" y="757" width="4.5939%" height="15" fill="rgb(248,145,5)"/><text x="21.8658%" y="767.50">&lt;rege..</text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (2,026 samples, 4.59%)</title><rect x="21.6158%" y="741" width="4.5939%" height="15" fill="rgb(226,116,26)"/><text x="21.8658%" y="751.50">&lt;rege..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2,026 samples, 4.59%)</title><rect x="21.6158%" y="725" width="4.5939%" height="15" fill="rgb(244,5,17)"/><text x="21.8658%" y="735.50">&lt;rege..</text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (2,026 samples, 4.59%)</title><rect x="21.6158%" y="709" width="4.5939%" height="15" fill="rgb(252,159,33)"/><text x="21.8658%" y="719.50">regex..</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (2,026 samples, 4.59%)</title><rect x="21.6158%" y="693" width="4.5939%" height="15" fill="rgb(206,71,0)"/><text x="21.8658%" y="703.50">regex..</text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (2,026 samples, 4.59%)</title><rect x="21.6158%" y="677" width="4.5939%" height="15" fill="rgb(233,118,54)"/><text x="21.8658%" y="687.50">regex..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (2,026 samples, 4.59%)</title><rect x="21.6158%" y="661" width="4.5939%" height="15" fill="rgb(234,83,48)"/><text x="21.8658%" y="671.50">regex..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (2,026 samples, 4.59%)</title><rect x="21.6158%" y="645" width="4.5939%" height="15" fill="rgb(228,3,54)"/><text x="21.8658%" y="655.50">regex..</text></g><g><title>compiler::generate::templates::if_else (45 samples, 0.10%)</title><rect x="26.2550%" y="229" width="0.1020%" height="15" fill="rgb(226,155,13)"/><text x="26.5050%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (103 samples, 0.23%)</title><rect x="26.2097%" y="357" width="0.2335%" height="15" fill="rgb(241,28,37)"/><text x="26.4597%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (103 samples, 0.23%)</title><rect x="26.2097%" y="341" width="0.2335%" height="15" fill="rgb(233,93,10)"/><text x="26.4597%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 0.23%)</title><rect x="26.2097%" y="325" width="0.2335%" height="15" fill="rgb(225,113,19)"/><text x="26.4597%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (103 samples, 0.23%)</title><rect x="26.2097%" y="309" width="0.2335%" height="15" fill="rgb(241,2,18)"/><text x="26.4597%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (103 samples, 0.23%)</title><rect x="26.2097%" y="293" width="0.2335%" height="15" fill="rgb(228,207,21)"/><text x="26.4597%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (103 samples, 0.23%)</title><rect x="26.2097%" y="277" width="0.2335%" height="15" fill="rgb(213,211,35)"/><text x="26.4597%" y="287.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (103 samples, 0.23%)</title><rect x="26.2097%" y="261" width="0.2335%" height="15" fill="rgb(209,83,10)"/><text x="26.4597%" y="271.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (103 samples, 0.23%)</title><rect x="26.2097%" y="245" width="0.2335%" height="15" fill="rgb(209,164,1)"/><text x="26.4597%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (159 samples, 0.36%)</title><rect x="26.2097%" y="565" width="0.3605%" height="15" fill="rgb(213,184,43)"/><text x="26.4597%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (159 samples, 0.36%)</title><rect x="26.2097%" y="549" width="0.3605%" height="15" fill="rgb(231,61,34)"/><text x="26.4597%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (159 samples, 0.36%)</title><rect x="26.2097%" y="533" width="0.3605%" height="15" fill="rgb(235,75,3)"/><text x="26.4597%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (159 samples, 0.36%)</title><rect x="26.2097%" y="517" width="0.3605%" height="15" fill="rgb(220,106,47)"/><text x="26.4597%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (159 samples, 0.36%)</title><rect x="26.2097%" y="501" width="0.3605%" height="15" fill="rgb(210,196,33)"/><text x="26.4597%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (159 samples, 0.36%)</title><rect x="26.2097%" y="485" width="0.3605%" height="15" fill="rgb(229,154,42)"/><text x="26.4597%" y="495.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (159 samples, 0.36%)</title><rect x="26.2097%" y="469" width="0.3605%" height="15" fill="rgb(228,114,26)"/><text x="26.4597%" y="479.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (159 samples, 0.36%)</title><rect x="26.2097%" y="453" width="0.3605%" height="15" fill="rgb(208,144,1)"/><text x="26.4597%" y="463.50"></text></g><g><title>compiler::generate::generator::gen_body (159 samples, 0.36%)</title><rect x="26.2097%" y="437" width="0.3605%" height="15" fill="rgb(239,112,37)"/><text x="26.4597%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (159 samples, 0.36%)</title><rect x="26.2097%" y="421" width="0.3605%" height="15" fill="rgb(210,96,50)"/><text x="26.4597%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (159 samples, 0.36%)</title><rect x="26.2097%" y="405" width="0.3605%" height="15" fill="rgb(222,178,2)"/><text x="26.4597%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (159 samples, 0.36%)</title><rect x="26.2097%" y="389" width="0.3605%" height="15" fill="rgb(226,74,18)"/><text x="26.4597%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (159 samples, 0.36%)</title><rect x="26.2097%" y="373" width="0.3605%" height="15" fill="rgb(225,67,54)"/><text x="26.4597%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.13%)</title><rect x="26.4432%" y="357" width="0.1270%" height="15" fill="rgb(251,92,32)"/><text x="26.6932%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (56 samples, 0.13%)</title><rect x="26.4432%" y="341" width="0.1270%" height="15" fill="rgb(228,149,22)"/><text x="26.6932%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (56 samples, 0.13%)</title><rect x="26.4432%" y="325" width="0.1270%" height="15" fill="rgb(243,54,13)"/><text x="26.6932%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (56 samples, 0.13%)</title><rect x="26.4432%" y="309" width="0.1270%" height="15" fill="rgb(243,180,28)"/><text x="26.6932%" y="319.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (56 samples, 0.13%)</title><rect x="26.4432%" y="293" width="0.1270%" height="15" fill="rgb(208,167,24)"/><text x="26.6932%" y="303.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (56 samples, 0.13%)</title><rect x="26.4432%" y="277" width="0.1270%" height="15" fill="rgb(245,73,45)"/><text x="26.6932%" y="287.50"></text></g><g><title>compiler::generate::templates::if_else (51 samples, 0.12%)</title><rect x="26.6428%" y="261" width="0.1156%" height="15" fill="rgb(237,203,48)"/><text x="26.8928%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (106 samples, 0.24%)</title><rect x="26.5702%" y="389" width="0.2404%" height="15" fill="rgb(211,197,16)"/><text x="26.8202%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (106 samples, 0.24%)</title><rect x="26.5702%" y="373" width="0.2404%" height="15" fill="rgb(243,99,51)"/><text x="26.8202%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 0.24%)</title><rect x="26.5702%" y="357" width="0.2404%" height="15" fill="rgb(215,123,29)"/><text x="26.8202%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (106 samples, 0.24%)</title><rect x="26.5702%" y="341" width="0.2404%" height="15" fill="rgb(239,186,37)"/><text x="26.8202%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (106 samples, 0.24%)</title><rect x="26.5702%" y="325" width="0.2404%" height="15" fill="rgb(252,136,39)"/><text x="26.8202%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (106 samples, 0.24%)</title><rect x="26.5702%" y="309" width="0.2404%" height="15" fill="rgb(223,213,32)"/><text x="26.8202%" y="319.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (106 samples, 0.24%)</title><rect x="26.5702%" y="293" width="0.2404%" height="15" fill="rgb(233,115,5)"/><text x="26.8202%" y="303.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (106 samples, 0.24%)</title><rect x="26.5702%" y="277" width="0.2404%" height="15" fill="rgb(207,226,44)"/><text x="26.8202%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (271 samples, 0.61%)</title><rect x="26.2097%" y="773" width="0.6145%" height="15" fill="rgb(208,126,0)"/><text x="26.4597%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (271 samples, 0.61%)</title><rect x="26.2097%" y="757" width="0.6145%" height="15" fill="rgb(244,66,21)"/><text x="26.4597%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (271 samples, 0.61%)</title><rect x="26.2097%" y="741" width="0.6145%" height="15" fill="rgb(222,97,12)"/><text x="26.4597%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (271 samples, 0.61%)</title><rect x="26.2097%" y="725" width="0.6145%" height="15" fill="rgb(219,213,19)"/><text x="26.4597%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (271 samples, 0.61%)</title><rect x="26.2097%" y="709" width="0.6145%" height="15" fill="rgb(252,169,30)"/><text x="26.4597%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (271 samples, 0.61%)</title><rect x="26.2097%" y="693" width="0.6145%" height="15" fill="rgb(206,32,51)"/><text x="26.4597%" y="703.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (271 samples, 0.61%)</title><rect x="26.2097%" y="677" width="0.6145%" height="15" fill="rgb(250,172,42)"/><text x="26.4597%" y="687.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (271 samples, 0.61%)</title><rect x="26.2097%" y="661" width="0.6145%" height="15" fill="rgb(209,34,43)"/><text x="26.4597%" y="671.50"></text></g><g><title>compiler::generate::generator::gen_body (271 samples, 0.61%)</title><rect x="26.2097%" y="645" width="0.6145%" height="15" fill="rgb(223,11,35)"/><text x="26.4597%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (271 samples, 0.61%)</title><rect x="26.2097%" y="629" width="0.6145%" height="15" fill="rgb(251,219,26)"/><text x="26.4597%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (271 samples, 0.61%)</title><rect x="26.2097%" y="613" width="0.6145%" height="15" fill="rgb(231,119,3)"/><text x="26.4597%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (271 samples, 0.61%)</title><rect x="26.2097%" y="597" width="0.6145%" height="15" fill="rgb(216,97,11)"/><text x="26.4597%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (271 samples, 0.61%)</title><rect x="26.2097%" y="581" width="0.6145%" height="15" fill="rgb(223,59,9)"/><text x="26.4597%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (112 samples, 0.25%)</title><rect x="26.5702%" y="565" width="0.2540%" height="15" fill="rgb(233,93,31)"/><text x="26.8202%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (112 samples, 0.25%)</title><rect x="26.5702%" y="549" width="0.2540%" height="15" fill="rgb(239,81,33)"/><text x="26.8202%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (112 samples, 0.25%)</title><rect x="26.5702%" y="533" width="0.2540%" height="15" fill="rgb(213,120,34)"/><text x="26.8202%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (112 samples, 0.25%)</title><rect x="26.5702%" y="517" width="0.2540%" height="15" fill="rgb(243,49,53)"/><text x="26.8202%" y="527.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (112 samples, 0.25%)</title><rect x="26.5702%" y="501" width="0.2540%" height="15" fill="rgb(247,216,33)"/><text x="26.8202%" y="511.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (112 samples, 0.25%)</title><rect x="26.5702%" y="485" width="0.2540%" height="15" fill="rgb(226,26,14)"/><text x="26.8202%" y="495.50"></text></g><g><title>compiler::generate::generator::gen_body (112 samples, 0.25%)</title><rect x="26.5702%" y="469" width="0.2540%" height="15" fill="rgb(215,49,53)"/><text x="26.8202%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (112 samples, 0.25%)</title><rect x="26.5702%" y="453" width="0.2540%" height="15" fill="rgb(245,162,40)"/><text x="26.8202%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (112 samples, 0.25%)</title><rect x="26.5702%" y="437" width="0.2540%" height="15" fill="rgb(229,68,17)"/><text x="26.8202%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (112 samples, 0.25%)</title><rect x="26.5702%" y="421" width="0.2540%" height="15" fill="rgb(213,182,10)"/><text x="26.8202%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (112 samples, 0.25%)</title><rect x="26.5702%" y="405" width="0.2540%" height="15" fill="rgb(245,125,30)"/><text x="26.8202%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (314 samples, 0.71%)</title><rect x="26.2097%" y="981" width="0.7120%" height="15" fill="rgb(232,202,2)"/><text x="26.4597%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (314 samples, 0.71%)</title><rect x="26.2097%" y="965" width="0.7120%" height="15" fill="rgb(237,140,51)"/><text x="26.4597%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (314 samples, 0.71%)</title><rect x="26.2097%" y="949" width="0.7120%" height="15" fill="rgb(236,157,25)"/><text x="26.4597%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (314 samples, 0.71%)</title><rect x="26.2097%" y="933" width="0.7120%" height="15" fill="rgb(219,209,0)"/><text x="26.4597%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (314 samples, 0.71%)</title><rect x="26.2097%" y="917" width="0.7120%" height="15" fill="rgb(240,116,54)"/><text x="26.4597%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (314 samples, 0.71%)</title><rect x="26.2097%" y="901" width="0.7120%" height="15" fill="rgb(216,10,36)"/><text x="26.4597%" y="911.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (314 samples, 0.71%)</title><rect x="26.2097%" y="885" width="0.7120%" height="15" fill="rgb(222,72,44)"/><text x="26.4597%" y="895.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (314 samples, 0.71%)</title><rect x="26.2097%" y="869" width="0.7120%" height="15" fill="rgb(232,159,9)"/><text x="26.4597%" y="879.50"></text></g><g><title>compiler::generate::generator::gen_body (314 samples, 0.71%)</title><rect x="26.2097%" y="853" width="0.7120%" height="15" fill="rgb(210,39,32)"/><text x="26.4597%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (314 samples, 0.71%)</title><rect x="26.2097%" y="837" width="0.7120%" height="15" fill="rgb(216,194,45)"/><text x="26.4597%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (314 samples, 0.71%)</title><rect x="26.2097%" y="821" width="0.7120%" height="15" fill="rgb(218,18,35)"/><text x="26.4597%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (314 samples, 0.71%)</title><rect x="26.2097%" y="805" width="0.7120%" height="15" fill="rgb(207,83,51)"/><text x="26.4597%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (314 samples, 0.71%)</title><rect x="26.2097%" y="789" width="0.7120%" height="15" fill="rgb(225,63,43)"/><text x="26.4597%" y="799.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (362 samples, 0.82%)</title><rect x="26.2097%" y="1077" width="0.8208%" height="15" fill="rgb(207,57,36)"/><text x="26.4597%" y="1087.50"></text></g><g><title>compiler::generate::generator::gen_body (362 samples, 0.82%)</title><rect x="26.2097%" y="1061" width="0.8208%" height="15" fill="rgb(216,99,33)"/><text x="26.4597%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (362 samples, 0.82%)</title><rect x="26.2097%" y="1045" width="0.8208%" height="15" fill="rgb(225,42,16)"/><text x="26.4597%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (362 samples, 0.82%)</title><rect x="26.2097%" y="1029" width="0.8208%" height="15" fill="rgb(220,201,45)"/><text x="26.4597%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (362 samples, 0.82%)</title><rect x="26.2097%" y="1013" width="0.8208%" height="15" fill="rgb(225,33,4)"/><text x="26.4597%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (362 samples, 0.82%)</title><rect x="26.2097%" y="997" width="0.8208%" height="15" fill="rgb(224,33,50)"/><text x="26.4597%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.11%)</title><rect x="26.9217%" y="981" width="0.1088%" height="15" fill="rgb(246,198,51)"/><text x="27.1717%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (48 samples, 0.11%)</title><rect x="26.9217%" y="965" width="0.1088%" height="15" fill="rgb(205,22,4)"/><text x="27.1717%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.11%)</title><rect x="26.9217%" y="949" width="0.1088%" height="15" fill="rgb(206,3,8)"/><text x="27.1717%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48 samples, 0.11%)</title><rect x="26.9217%" y="933" width="0.1088%" height="15" fill="rgb(251,23,15)"/><text x="27.1717%" y="943.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (48 samples, 0.11%)</title><rect x="26.9217%" y="917" width="0.1088%" height="15" fill="rgb(252,88,28)"/><text x="27.1717%" y="927.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (48 samples, 0.11%)</title><rect x="26.9217%" y="901" width="0.1088%" height="15" fill="rgb(212,127,14)"/><text x="27.1717%" y="911.50"></text></g><g><title>compiler::generate::generator::gen_body (48 samples, 0.11%)</title><rect x="26.9217%" y="885" width="0.1088%" height="15" fill="rgb(247,145,37)"/><text x="27.1717%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.11%)</title><rect x="26.9217%" y="869" width="0.1088%" height="15" fill="rgb(209,117,53)"/><text x="27.1717%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.11%)</title><rect x="26.9217%" y="853" width="0.1088%" height="15" fill="rgb(212,90,42)"/><text x="27.1717%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.11%)</title><rect x="26.9217%" y="837" width="0.1088%" height="15" fill="rgb(218,164,37)"/><text x="27.1717%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (48 samples, 0.11%)</title><rect x="26.9217%" y="821" width="0.1088%" height="15" fill="rgb(246,65,34)"/><text x="27.1717%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (48 samples, 0.11%)</title><rect x="26.9217%" y="805" width="0.1088%" height="15" fill="rgb(231,100,33)"/><text x="27.1717%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (48 samples, 0.11%)</title><rect x="26.9217%" y="789" width="0.1088%" height="15" fill="rgb(228,126,14)"/><text x="27.1717%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.11%)</title><rect x="26.9217%" y="773" width="0.1088%" height="15" fill="rgb(215,173,21)"/><text x="27.1717%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (48 samples, 0.11%)</title><rect x="26.9217%" y="757" width="0.1088%" height="15" fill="rgb(210,6,40)"/><text x="27.1717%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.11%)</title><rect x="26.9217%" y="741" width="0.1088%" height="15" fill="rgb(212,48,18)"/><text x="27.1717%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48 samples, 0.11%)</title><rect x="26.9217%" y="725" width="0.1088%" height="15" fill="rgb(230,214,11)"/><text x="27.1717%" y="735.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (48 samples, 0.11%)</title><rect x="26.9217%" y="709" width="0.1088%" height="15" fill="rgb(254,105,39)"/><text x="27.1717%" y="719.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (48 samples, 0.11%)</title><rect x="26.9217%" y="693" width="0.1088%" height="15" fill="rgb(245,158,5)"/><text x="27.1717%" y="703.50"></text></g><g><title>compiler::generate::generator::gen_body (48 samples, 0.11%)</title><rect x="26.9217%" y="677" width="0.1088%" height="15" fill="rgb(249,208,11)"/><text x="27.1717%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.11%)</title><rect x="26.9217%" y="661" width="0.1088%" height="15" fill="rgb(210,39,28)"/><text x="27.1717%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.11%)</title><rect x="26.9217%" y="645" width="0.1088%" height="15" fill="rgb(211,56,53)"/><text x="27.1717%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.11%)</title><rect x="26.9217%" y="629" width="0.1088%" height="15" fill="rgb(226,201,30)"/><text x="27.1717%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (48 samples, 0.11%)</title><rect x="26.9217%" y="613" width="0.1088%" height="15" fill="rgb(239,101,34)"/><text x="27.1717%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (48 samples, 0.11%)</title><rect x="26.9217%" y="597" width="0.1088%" height="15" fill="rgb(226,209,5)"/><text x="27.1717%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (48 samples, 0.11%)</title><rect x="26.9217%" y="581" width="0.1088%" height="15" fill="rgb(250,105,47)"/><text x="27.1717%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.11%)</title><rect x="26.9217%" y="565" width="0.1088%" height="15" fill="rgb(230,72,3)"/><text x="27.1717%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (48 samples, 0.11%)</title><rect x="26.9217%" y="549" width="0.1088%" height="15" fill="rgb(232,218,39)"/><text x="27.1717%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.11%)</title><rect x="26.9217%" y="533" width="0.1088%" height="15" fill="rgb(248,166,6)"/><text x="27.1717%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48 samples, 0.11%)</title><rect x="26.9217%" y="517" width="0.1088%" height="15" fill="rgb(247,89,20)"/><text x="27.1717%" y="527.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (48 samples, 0.11%)</title><rect x="26.9217%" y="501" width="0.1088%" height="15" fill="rgb(248,130,54)"/><text x="27.1717%" y="511.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (48 samples, 0.11%)</title><rect x="26.9217%" y="485" width="0.1088%" height="15" fill="rgb(234,196,4)"/><text x="27.1717%" y="495.50"></text></g><g><title>compiler::generate::generator::gen_body (48 samples, 0.11%)</title><rect x="26.9217%" y="469" width="0.1088%" height="15" fill="rgb(250,143,31)"/><text x="27.1717%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.11%)</title><rect x="26.9217%" y="453" width="0.1088%" height="15" fill="rgb(211,110,34)"/><text x="27.1717%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.11%)</title><rect x="26.9217%" y="437" width="0.1088%" height="15" fill="rgb(215,124,48)"/><text x="27.1717%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.11%)</title><rect x="26.9217%" y="421" width="0.1088%" height="15" fill="rgb(216,46,13)"/><text x="27.1717%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (48 samples, 0.11%)</title><rect x="26.9217%" y="405" width="0.1088%" height="15" fill="rgb(205,184,25)"/><text x="27.1717%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (45 samples, 0.10%)</title><rect x="27.1870%" y="69" width="0.1020%" height="15" fill="rgb(228,1,10)"/><text x="27.4370%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (45 samples, 0.10%)</title><rect x="27.1870%" y="53" width="0.1020%" height="15" fill="rgb(213,116,27)"/><text x="27.4370%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (45 samples, 0.10%)</title><rect x="27.1870%" y="37" width="0.1020%" height="15" fill="rgb(241,95,50)"/><text x="27.4370%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (67 samples, 0.15%)</title><rect x="27.1620%" y="165" width="0.1519%" height="15" fill="rgb(238,48,32)"/><text x="27.4120%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (57 samples, 0.13%)</title><rect x="27.1847%" y="149" width="0.1292%" height="15" fill="rgb(235,113,49)"/><text x="27.4347%" y="159.50"></text></g><g><title>alloc::string::String::push_str (57 samples, 0.13%)</title><rect x="27.1847%" y="133" width="0.1292%" height="15" fill="rgb(205,127,43)"/><text x="27.4347%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (57 samples, 0.13%)</title><rect x="27.1847%" y="117" width="0.1292%" height="15" fill="rgb(250,162,2)"/><text x="27.4347%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (57 samples, 0.13%)</title><rect x="27.1847%" y="101" width="0.1292%" height="15" fill="rgb(220,13,41)"/><text x="27.4347%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (57 samples, 0.13%)</title><rect x="27.1847%" y="85" width="0.1292%" height="15" fill="rgb(249,221,25)"/><text x="27.4347%" y="95.50"></text></g><g><title>alloc::fmt::format (88 samples, 0.20%)</title><rect x="27.1303%" y="213" width="0.1995%" height="15" fill="rgb(215,208,19)"/><text x="27.3803%" y="223.50"></text></g><g><title>core::fmt::Write::write_fmt (87 samples, 0.20%)</title><rect x="27.1326%" y="197" width="0.1973%" height="15" fill="rgb(236,175,2)"/><text x="27.3826%" y="207.50"></text></g><g><title>core::fmt::write (85 samples, 0.19%)</title><rect x="27.1371%" y="181" width="0.1927%" height="15" fill="rgb(241,52,2)"/><text x="27.3871%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (83 samples, 0.19%)</title><rect x="27.4137%" y="165" width="0.1882%" height="15" fill="rgb(248,140,14)"/><text x="27.6637%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (83 samples, 0.19%)</title><rect x="27.4137%" y="149" width="0.1882%" height="15" fill="rgb(253,22,42)"/><text x="27.6637%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (83 samples, 0.19%)</title><rect x="27.4137%" y="133" width="0.1882%" height="15" fill="rgb(234,61,47)"/><text x="27.6637%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (83 samples, 0.19%)</title><rect x="27.4137%" y="117" width="0.1882%" height="15" fill="rgb(208,226,15)"/><text x="27.6637%" y="127.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (80 samples, 0.18%)</title><rect x="27.4205%" y="101" width="0.1814%" height="15" fill="rgb(217,221,4)"/><text x="27.6705%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (62 samples, 0.14%)</title><rect x="27.4613%" y="85" width="0.1406%" height="15" fill="rgb(212,174,34)"/><text x="27.7113%" y="95.50"></text></g><g><title>compiler::generate::templates::escape_path (98 samples, 0.22%)</title><rect x="27.3910%" y="213" width="0.2222%" height="15" fill="rgb(253,83,4)"/><text x="27.6410%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (98 samples, 0.22%)</title><rect x="27.3910%" y="197" width="0.2222%" height="15" fill="rgb(250,195,49)"/><text x="27.6410%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (98 samples, 0.22%)</title><rect x="27.3910%" y="181" width="0.2222%" height="15" fill="rgb(241,192,25)"/><text x="27.6410%" y="191.50"></text></g><g><title>compiler::generate::templates::expression (232 samples, 0.53%)</title><rect x="27.1167%" y="245" width="0.5261%" height="15" fill="rgb(208,124,10)"/><text x="27.3667%" y="255.50"></text></g><g><title>compiler::generate::templates::guard (232 samples, 0.53%)</title><rect x="27.1167%" y="229" width="0.5261%" height="15" fill="rgb(222,33,0)"/><text x="27.3667%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (296 samples, 0.67%)</title><rect x="27.0305%" y="373" width="0.6712%" height="15" fill="rgb(234,209,28)"/><text x="27.2805%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (296 samples, 0.67%)</title><rect x="27.0305%" y="357" width="0.6712%" height="15" fill="rgb(224,11,23)"/><text x="27.2805%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (296 samples, 0.67%)</title><rect x="27.0305%" y="341" width="0.6712%" height="15" fill="rgb(232,99,1)"/><text x="27.2805%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (296 samples, 0.67%)</title><rect x="27.0305%" y="325" width="0.6712%" height="15" fill="rgb(237,95,45)"/><text x="27.2805%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (296 samples, 0.67%)</title><rect x="27.0305%" y="309" width="0.6712%" height="15" fill="rgb(208,109,11)"/><text x="27.2805%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (296 samples, 0.67%)</title><rect x="27.0305%" y="293" width="0.6712%" height="15" fill="rgb(216,190,48)"/><text x="27.2805%" y="303.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (296 samples, 0.67%)</title><rect x="27.0305%" y="277" width="0.6712%" height="15" fill="rgb(251,171,36)"/><text x="27.2805%" y="287.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (296 samples, 0.67%)</title><rect x="27.0305%" y="261" width="0.6712%" height="15" fill="rgb(230,62,22)"/><text x="27.2805%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (382 samples, 0.87%)</title><rect x="27.0305%" y="581" width="0.8662%" height="15" fill="rgb(225,114,35)"/><text x="27.2805%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (382 samples, 0.87%)</title><rect x="27.0305%" y="565" width="0.8662%" height="15" fill="rgb(215,118,42)"/><text x="27.2805%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (382 samples, 0.87%)</title><rect x="27.0305%" y="549" width="0.8662%" height="15" fill="rgb(243,119,21)"/><text x="27.2805%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (382 samples, 0.87%)</title><rect x="27.0305%" y="533" width="0.8662%" height="15" fill="rgb(252,177,53)"/><text x="27.2805%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (382 samples, 0.87%)</title><rect x="27.0305%" y="517" width="0.8662%" height="15" fill="rgb(237,209,29)"/><text x="27.2805%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (382 samples, 0.87%)</title><rect x="27.0305%" y="501" width="0.8662%" height="15" fill="rgb(212,65,23)"/><text x="27.2805%" y="511.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (382 samples, 0.87%)</title><rect x="27.0305%" y="485" width="0.8662%" height="15" fill="rgb(230,222,46)"/><text x="27.2805%" y="495.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (382 samples, 0.87%)</title><rect x="27.0305%" y="469" width="0.8662%" height="15" fill="rgb(215,135,32)"/><text x="27.2805%" y="479.50"></text></g><g><title>compiler::generate::generator::gen_body (382 samples, 0.87%)</title><rect x="27.0305%" y="453" width="0.8662%" height="15" fill="rgb(246,101,22)"/><text x="27.2805%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (382 samples, 0.87%)</title><rect x="27.0305%" y="437" width="0.8662%" height="15" fill="rgb(206,107,13)"/><text x="27.2805%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (382 samples, 0.87%)</title><rect x="27.0305%" y="421" width="0.8662%" height="15" fill="rgb(250,100,44)"/><text x="27.2805%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (382 samples, 0.87%)</title><rect x="27.0305%" y="405" width="0.8662%" height="15" fill="rgb(231,147,38)"/><text x="27.2805%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (382 samples, 0.87%)</title><rect x="27.0305%" y="389" width="0.8662%" height="15" fill="rgb(229,8,40)"/><text x="27.2805%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.20%)</title><rect x="27.7017%" y="373" width="0.1950%" height="15" fill="rgb(221,135,30)"/><text x="27.9517%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (86 samples, 0.20%)</title><rect x="27.7017%" y="357" width="0.1950%" height="15" fill="rgb(249,193,18)"/><text x="27.9517%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (86 samples, 0.20%)</title><rect x="27.7017%" y="341" width="0.1950%" height="15" fill="rgb(209,133,39)"/><text x="27.9517%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (86 samples, 0.20%)</title><rect x="27.7017%" y="325" width="0.1950%" height="15" fill="rgb(232,100,14)"/><text x="27.9517%" y="335.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (86 samples, 0.20%)</title><rect x="27.7017%" y="309" width="0.1950%" height="15" fill="rgb(224,185,1)"/><text x="27.9517%" y="319.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (86 samples, 0.20%)</title><rect x="27.7017%" y="293" width="0.1950%" height="15" fill="rgb(223,139,8)"/><text x="27.9517%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (47 samples, 0.11%)</title><rect x="28.0259%" y="197" width="0.1066%" height="15" fill="rgb(232,213,38)"/><text x="28.2759%" y="207.50"></text></g><g><title>core::fmt::Write::write_fmt (74 samples, 0.17%)</title><rect x="27.9851%" y="229" width="0.1678%" height="15" fill="rgb(207,94,22)"/><text x="28.2351%" y="239.50"></text></g><g><title>core::fmt::write (71 samples, 0.16%)</title><rect x="27.9919%" y="213" width="0.1610%" height="15" fill="rgb(219,183,54)"/><text x="28.2419%" y="223.50"></text></g><g><title>alloc::fmt::format (78 samples, 0.18%)</title><rect x="27.9783%" y="245" width="0.1769%" height="15" fill="rgb(216,185,54)"/><text x="28.2283%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (56 samples, 0.13%)</title><rect x="28.2277%" y="197" width="0.1270%" height="15" fill="rgb(254,217,39)"/><text x="28.4777%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (56 samples, 0.13%)</title><rect x="28.2277%" y="181" width="0.1270%" height="15" fill="rgb(240,178,23)"/><text x="28.4777%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56 samples, 0.13%)</title><rect x="28.2277%" y="165" width="0.1270%" height="15" fill="rgb(218,11,47)"/><text x="28.4777%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (56 samples, 0.13%)</title><rect x="28.2277%" y="149" width="0.1270%" height="15" fill="rgb(218,51,51)"/><text x="28.4777%" y="159.50"></text></g><g><title>core::iter::adapters::map_fold::{{closure}} (56 samples, 0.13%)</title><rect x="28.2277%" y="133" width="0.1270%" height="15" fill="rgb(238,126,27)"/><text x="28.4777%" y="143.50"></text></g><g><title>compiler::generate::templates::escape_path (62 samples, 0.14%)</title><rect x="28.2255%" y="245" width="0.1406%" height="15" fill="rgb(249,202,22)"/><text x="28.4755%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.14%)</title><rect x="28.2255%" y="229" width="0.1406%" height="15" fill="rgb(254,195,49)"/><text x="28.4755%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (62 samples, 0.14%)</title><rect x="28.2255%" y="213" width="0.1406%" height="15" fill="rgb(208,123,14)"/><text x="28.4755%" y="223.50"></text></g><g><title>compiler::generate::templates::expression (195 samples, 0.44%)</title><rect x="27.9625%" y="277" width="0.4422%" height="15" fill="rgb(224,200,8)"/><text x="28.2125%" y="287.50"></text></g><g><title>compiler::generate::templates::guard (195 samples, 0.44%)</title><rect x="27.9625%" y="261" width="0.4422%" height="15" fill="rgb(217,61,36)"/><text x="28.2125%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (624 samples, 1.41%)</title><rect x="27.0305%" y="789" width="1.4149%" height="15" fill="rgb(206,35,45)"/><text x="27.2805%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (624 samples, 1.41%)</title><rect x="27.0305%" y="773" width="1.4149%" height="15" fill="rgb(217,65,33)"/><text x="27.2805%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (624 samples, 1.41%)</title><rect x="27.0305%" y="757" width="1.4149%" height="15" fill="rgb(222,158,48)"/><text x="27.2805%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (624 samples, 1.41%)</title><rect x="27.0305%" y="741" width="1.4149%" height="15" fill="rgb(254,2,54)"/><text x="27.2805%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (624 samples, 1.41%)</title><rect x="27.0305%" y="725" width="1.4149%" height="15" fill="rgb(250,143,38)"/><text x="27.2805%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (624 samples, 1.41%)</title><rect x="27.0305%" y="709" width="1.4149%" height="15" fill="rgb(248,25,0)"/><text x="27.2805%" y="719.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (624 samples, 1.41%)</title><rect x="27.0305%" y="693" width="1.4149%" height="15" fill="rgb(206,152,27)"/><text x="27.2805%" y="703.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (624 samples, 1.41%)</title><rect x="27.0305%" y="677" width="1.4149%" height="15" fill="rgb(240,77,30)"/><text x="27.2805%" y="687.50"></text></g><g><title>compiler::generate::generator::gen_body (624 samples, 1.41%)</title><rect x="27.0305%" y="661" width="1.4149%" height="15" fill="rgb(231,5,3)"/><text x="27.2805%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (624 samples, 1.41%)</title><rect x="27.0305%" y="645" width="1.4149%" height="15" fill="rgb(207,226,32)"/><text x="27.2805%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (624 samples, 1.41%)</title><rect x="27.0305%" y="629" width="1.4149%" height="15" fill="rgb(222,207,47)"/><text x="27.2805%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (624 samples, 1.41%)</title><rect x="27.0305%" y="613" width="1.4149%" height="15" fill="rgb(229,115,45)"/><text x="27.2805%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (624 samples, 1.41%)</title><rect x="27.0305%" y="597" width="1.4149%" height="15" fill="rgb(224,191,6)"/><text x="27.2805%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (242 samples, 0.55%)</title><rect x="27.8967%" y="581" width="0.5487%" height="15" fill="rgb(230,227,24)"/><text x="28.1467%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (242 samples, 0.55%)</title><rect x="27.8967%" y="565" width="0.5487%" height="15" fill="rgb(228,80,19)"/><text x="28.1467%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (242 samples, 0.55%)</title><rect x="27.8967%" y="549" width="0.5487%" height="15" fill="rgb(247,229,0)"/><text x="28.1467%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (242 samples, 0.55%)</title><rect x="27.8967%" y="533" width="0.5487%" height="15" fill="rgb(237,194,15)"/><text x="28.1467%" y="543.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (242 samples, 0.55%)</title><rect x="27.8967%" y="517" width="0.5487%" height="15" fill="rgb(219,203,20)"/><text x="28.1467%" y="527.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (242 samples, 0.55%)</title><rect x="27.8967%" y="501" width="0.5487%" height="15" fill="rgb(234,128,8)"/><text x="28.1467%" y="511.50"></text></g><g><title>compiler::generate::generator::gen_body (242 samples, 0.55%)</title><rect x="27.8967%" y="485" width="0.5487%" height="15" fill="rgb(248,202,8)"/><text x="28.1467%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (242 samples, 0.55%)</title><rect x="27.8967%" y="469" width="0.5487%" height="15" fill="rgb(206,104,37)"/><text x="28.1467%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (242 samples, 0.55%)</title><rect x="27.8967%" y="453" width="0.5487%" height="15" fill="rgb(223,8,27)"/><text x="28.1467%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (242 samples, 0.55%)</title><rect x="27.8967%" y="437" width="0.5487%" height="15" fill="rgb(216,217,28)"/><text x="28.1467%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (242 samples, 0.55%)</title><rect x="27.8967%" y="421" width="0.5487%" height="15" fill="rgb(249,199,1)"/><text x="28.1467%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (242 samples, 0.55%)</title><rect x="27.8967%" y="405" width="0.5487%" height="15" fill="rgb(240,85,17)"/><text x="28.1467%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (242 samples, 0.55%)</title><rect x="27.8967%" y="389" width="0.5487%" height="15" fill="rgb(206,108,45)"/><text x="28.1467%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (242 samples, 0.55%)</title><rect x="27.8967%" y="373" width="0.5487%" height="15" fill="rgb(245,210,41)"/><text x="28.1467%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (242 samples, 0.55%)</title><rect x="27.8967%" y="357" width="0.5487%" height="15" fill="rgb(206,13,37)"/><text x="28.1467%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (242 samples, 0.55%)</title><rect x="27.8967%" y="341" width="0.5487%" height="15" fill="rgb(250,61,18)"/><text x="28.1467%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (242 samples, 0.55%)</title><rect x="27.8967%" y="325" width="0.5487%" height="15" fill="rgb(235,172,48)"/><text x="28.1467%" y="335.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (242 samples, 0.55%)</title><rect x="27.8967%" y="309" width="0.5487%" height="15" fill="rgb(249,201,17)"/><text x="28.1467%" y="319.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (242 samples, 0.55%)</title><rect x="27.8967%" y="293" width="0.5487%" height="15" fill="rgb(219,208,6)"/><text x="28.1467%" y="303.50"></text></g><g><title>compiler::generate::templates::expression (61 samples, 0.14%)</title><rect x="28.4862%" y="277" width="0.1383%" height="15" fill="rgb(248,31,23)"/><text x="28.7362%" y="287.50"></text></g><g><title>compiler::generate::templates::guard (61 samples, 0.14%)</title><rect x="28.4862%" y="261" width="0.1383%" height="15" fill="rgb(245,15,42)"/><text x="28.7362%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (705 samples, 1.60%)</title><rect x="27.0305%" y="997" width="1.5986%" height="15" fill="rgb(222,217,39)"/><text x="27.2805%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (705 samples, 1.60%)</title><rect x="27.0305%" y="981" width="1.5986%" height="15" fill="rgb(210,219,27)"/><text x="27.2805%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (705 samples, 1.60%)</title><rect x="27.0305%" y="965" width="1.5986%" height="15" fill="rgb(252,166,36)"/><text x="27.2805%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (705 samples, 1.60%)</title><rect x="27.0305%" y="949" width="1.5986%" height="15" fill="rgb(245,132,34)"/><text x="27.2805%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (705 samples, 1.60%)</title><rect x="27.0305%" y="933" width="1.5986%" height="15" fill="rgb(236,54,3)"/><text x="27.2805%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (705 samples, 1.60%)</title><rect x="27.0305%" y="917" width="1.5986%" height="15" fill="rgb(241,173,43)"/><text x="27.2805%" y="927.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (705 samples, 1.60%)</title><rect x="27.0305%" y="901" width="1.5986%" height="15" fill="rgb(215,190,9)"/><text x="27.2805%" y="911.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (705 samples, 1.60%)</title><rect x="27.0305%" y="885" width="1.5986%" height="15" fill="rgb(242,101,16)"/><text x="27.2805%" y="895.50"></text></g><g><title>compiler::generate::generator::gen_body (705 samples, 1.60%)</title><rect x="27.0305%" y="869" width="1.5986%" height="15" fill="rgb(223,190,21)"/><text x="27.2805%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (705 samples, 1.60%)</title><rect x="27.0305%" y="853" width="1.5986%" height="15" fill="rgb(215,228,25)"/><text x="27.2805%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (705 samples, 1.60%)</title><rect x="27.0305%" y="837" width="1.5986%" height="15" fill="rgb(225,36,22)"/><text x="27.2805%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (705 samples, 1.60%)</title><rect x="27.0305%" y="821" width="1.5986%" height="15" fill="rgb(251,106,46)"/><text x="27.2805%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (705 samples, 1.60%)</title><rect x="27.0305%" y="805" width="1.5986%" height="15" fill="rgb(208,90,1)"/><text x="27.2805%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.18%)</title><rect x="28.4454%" y="789" width="0.1837%" height="15" fill="rgb(243,10,4)"/><text x="28.6954%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (81 samples, 0.18%)</title><rect x="28.4454%" y="773" width="0.1837%" height="15" fill="rgb(212,137,27)"/><text x="28.6954%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (81 samples, 0.18%)</title><rect x="28.4454%" y="757" width="0.1837%" height="15" fill="rgb(231,220,49)"/><text x="28.6954%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (81 samples, 0.18%)</title><rect x="28.4454%" y="741" width="0.1837%" height="15" fill="rgb(237,96,20)"/><text x="28.6954%" y="751.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (81 samples, 0.18%)</title><rect x="28.4454%" y="725" width="0.1837%" height="15" fill="rgb(239,229,30)"/><text x="28.6954%" y="735.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (81 samples, 0.18%)</title><rect x="28.4454%" y="709" width="0.1837%" height="15" fill="rgb(219,65,33)"/><text x="28.6954%" y="719.50"></text></g><g><title>compiler::generate::generator::gen_body (81 samples, 0.18%)</title><rect x="28.4454%" y="693" width="0.1837%" height="15" fill="rgb(243,134,7)"/><text x="28.6954%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (81 samples, 0.18%)</title><rect x="28.4454%" y="677" width="0.1837%" height="15" fill="rgb(216,177,54)"/><text x="28.6954%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (81 samples, 0.18%)</title><rect x="28.4454%" y="661" width="0.1837%" height="15" fill="rgb(211,160,20)"/><text x="28.6954%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (81 samples, 0.18%)</title><rect x="28.4454%" y="645" width="0.1837%" height="15" fill="rgb(239,85,39)"/><text x="28.6954%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (81 samples, 0.18%)</title><rect x="28.4454%" y="629" width="0.1837%" height="15" fill="rgb(232,125,22)"/><text x="28.6954%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (81 samples, 0.18%)</title><rect x="28.4454%" y="613" width="0.1837%" height="15" fill="rgb(244,57,34)"/><text x="28.6954%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (81 samples, 0.18%)</title><rect x="28.4454%" y="597" width="0.1837%" height="15" fill="rgb(214,203,32)"/><text x="28.6954%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.18%)</title><rect x="28.4454%" y="581" width="0.1837%" height="15" fill="rgb(207,58,43)"/><text x="28.6954%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (81 samples, 0.18%)</title><rect x="28.4454%" y="565" width="0.1837%" height="15" fill="rgb(215,193,15)"/><text x="28.6954%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (81 samples, 0.18%)</title><rect x="28.4454%" y="549" width="0.1837%" height="15" fill="rgb(232,15,44)"/><text x="28.6954%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (81 samples, 0.18%)</title><rect x="28.4454%" y="533" width="0.1837%" height="15" fill="rgb(212,3,48)"/><text x="28.6954%" y="543.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (81 samples, 0.18%)</title><rect x="28.4454%" y="517" width="0.1837%" height="15" fill="rgb(218,128,7)"/><text x="28.6954%" y="527.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (81 samples, 0.18%)</title><rect x="28.4454%" y="501" width="0.1837%" height="15" fill="rgb(226,216,39)"/><text x="28.6954%" y="511.50"></text></g><g><title>compiler::generate::generator::gen_body (81 samples, 0.18%)</title><rect x="28.4454%" y="485" width="0.1837%" height="15" fill="rgb(243,47,51)"/><text x="28.6954%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (81 samples, 0.18%)</title><rect x="28.4454%" y="469" width="0.1837%" height="15" fill="rgb(241,183,40)"/><text x="28.6954%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (81 samples, 0.18%)</title><rect x="28.4454%" y="453" width="0.1837%" height="15" fill="rgb(231,217,32)"/><text x="28.6954%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (81 samples, 0.18%)</title><rect x="28.4454%" y="437" width="0.1837%" height="15" fill="rgb(229,61,38)"/><text x="28.6954%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (81 samples, 0.18%)</title><rect x="28.4454%" y="421" width="0.1837%" height="15" fill="rgb(225,210,5)"/><text x="28.6954%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (81 samples, 0.18%)</title><rect x="28.4454%" y="405" width="0.1837%" height="15" fill="rgb(231,79,45)"/><text x="28.6954%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (81 samples, 0.18%)</title><rect x="28.4454%" y="389" width="0.1837%" height="15" fill="rgb(224,100,7)"/><text x="28.6954%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.18%)</title><rect x="28.4454%" y="373" width="0.1837%" height="15" fill="rgb(241,198,18)"/><text x="28.6954%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (81 samples, 0.18%)</title><rect x="28.4454%" y="357" width="0.1837%" height="15" fill="rgb(252,97,53)"/><text x="28.6954%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (81 samples, 0.18%)</title><rect x="28.4454%" y="341" width="0.1837%" height="15" fill="rgb(220,88,7)"/><text x="28.6954%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (81 samples, 0.18%)</title><rect x="28.4454%" y="325" width="0.1837%" height="15" fill="rgb(213,176,14)"/><text x="28.6954%" y="335.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (81 samples, 0.18%)</title><rect x="28.4454%" y="309" width="0.1837%" height="15" fill="rgb(246,73,7)"/><text x="28.6954%" y="319.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (81 samples, 0.18%)</title><rect x="28.4454%" y="293" width="0.1837%" height="15" fill="rgb(245,64,36)"/><text x="28.6954%" y="303.50"></text></g><g><title>alloc::fmt::format (45 samples, 0.10%)</title><rect x="28.6518%" y="245" width="0.1020%" height="15" fill="rgb(245,80,10)"/><text x="28.9018%" y="255.50"></text></g><g><title>compiler::generate::generator::gen_body (816 samples, 1.85%)</title><rect x="27.0305%" y="1077" width="1.8503%" height="15" fill="rgb(232,107,50)"/><text x="27.2805%" y="1087.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (816 samples, 1.85%)</title><rect x="27.0305%" y="1061" width="1.8503%" height="15" fill="rgb(253,3,0)"/><text x="27.2805%" y="1071.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (816 samples, 1.85%)</title><rect x="27.0305%" y="1045" width="1.8503%" height="15" fill="rgb(212,99,53)"/><text x="27.2805%" y="1055.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (816 samples, 1.85%)</title><rect x="27.0305%" y="1029" width="1.8503%" height="15" fill="rgb(249,111,54)"/><text x="27.2805%" y="1039.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (816 samples, 1.85%)</title><rect x="27.0305%" y="1013" width="1.8503%" height="15" fill="rgb(249,55,30)"/><text x="27.2805%" y="1023.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.25%)</title><rect x="28.6291%" y="997" width="0.2517%" height="15" fill="rgb(237,47,42)"/><text x="28.8791%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (111 samples, 0.25%)</title><rect x="28.6291%" y="981" width="0.2517%" height="15" fill="rgb(211,20,18)"/><text x="28.8791%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (111 samples, 0.25%)</title><rect x="28.6291%" y="965" width="0.2517%" height="15" fill="rgb(231,203,46)"/><text x="28.8791%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (111 samples, 0.25%)</title><rect x="28.6291%" y="949" width="0.2517%" height="15" fill="rgb(237,142,3)"/><text x="28.8791%" y="959.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (111 samples, 0.25%)</title><rect x="28.6291%" y="933" width="0.2517%" height="15" fill="rgb(241,107,1)"/><text x="28.8791%" y="943.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (111 samples, 0.25%)</title><rect x="28.6291%" y="917" width="0.2517%" height="15" fill="rgb(229,83,13)"/><text x="28.8791%" y="927.50"></text></g><g><title>compiler::generate::generator::gen_body (111 samples, 0.25%)</title><rect x="28.6291%" y="901" width="0.2517%" height="15" fill="rgb(241,91,40)"/><text x="28.8791%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (111 samples, 0.25%)</title><rect x="28.6291%" y="885" width="0.2517%" height="15" fill="rgb(225,3,45)"/><text x="28.8791%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (111 samples, 0.25%)</title><rect x="28.6291%" y="869" width="0.2517%" height="15" fill="rgb(244,223,14)"/><text x="28.8791%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (111 samples, 0.25%)</title><rect x="28.6291%" y="853" width="0.2517%" height="15" fill="rgb(224,124,37)"/><text x="28.8791%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (111 samples, 0.25%)</title><rect x="28.6291%" y="837" width="0.2517%" height="15" fill="rgb(251,171,30)"/><text x="28.8791%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (111 samples, 0.25%)</title><rect x="28.6291%" y="821" width="0.2517%" height="15" fill="rgb(236,46,54)"/><text x="28.8791%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (111 samples, 0.25%)</title><rect x="28.6291%" y="805" width="0.2517%" height="15" fill="rgb(245,213,5)"/><text x="28.8791%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.25%)</title><rect x="28.6291%" y="789" width="0.2517%" height="15" fill="rgb(230,144,27)"/><text x="28.8791%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (111 samples, 0.25%)</title><rect x="28.6291%" y="773" width="0.2517%" height="15" fill="rgb(220,86,6)"/><text x="28.8791%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (111 samples, 0.25%)</title><rect x="28.6291%" y="757" width="0.2517%" height="15" fill="rgb(240,20,13)"/><text x="28.8791%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (111 samples, 0.25%)</title><rect x="28.6291%" y="741" width="0.2517%" height="15" fill="rgb(217,89,34)"/><text x="28.8791%" y="751.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (111 samples, 0.25%)</title><rect x="28.6291%" y="725" width="0.2517%" height="15" fill="rgb(229,13,5)"/><text x="28.8791%" y="735.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (111 samples, 0.25%)</title><rect x="28.6291%" y="709" width="0.2517%" height="15" fill="rgb(244,67,35)"/><text x="28.8791%" y="719.50"></text></g><g><title>compiler::generate::generator::gen_body (111 samples, 0.25%)</title><rect x="28.6291%" y="693" width="0.2517%" height="15" fill="rgb(221,40,2)"/><text x="28.8791%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (111 samples, 0.25%)</title><rect x="28.6291%" y="677" width="0.2517%" height="15" fill="rgb(237,157,21)"/><text x="28.8791%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (111 samples, 0.25%)</title><rect x="28.6291%" y="661" width="0.2517%" height="15" fill="rgb(222,94,11)"/><text x="28.8791%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (111 samples, 0.25%)</title><rect x="28.6291%" y="645" width="0.2517%" height="15" fill="rgb(249,113,6)"/><text x="28.8791%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (111 samples, 0.25%)</title><rect x="28.6291%" y="629" width="0.2517%" height="15" fill="rgb(238,137,36)"/><text x="28.8791%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (111 samples, 0.25%)</title><rect x="28.6291%" y="613" width="0.2517%" height="15" fill="rgb(210,102,26)"/><text x="28.8791%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (111 samples, 0.25%)</title><rect x="28.6291%" y="597" width="0.2517%" height="15" fill="rgb(218,30,30)"/><text x="28.8791%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.25%)</title><rect x="28.6291%" y="581" width="0.2517%" height="15" fill="rgb(214,67,26)"/><text x="28.8791%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (111 samples, 0.25%)</title><rect x="28.6291%" y="565" width="0.2517%" height="15" fill="rgb(251,9,53)"/><text x="28.8791%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (111 samples, 0.25%)</title><rect x="28.6291%" y="549" width="0.2517%" height="15" fill="rgb(228,204,25)"/><text x="28.8791%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (111 samples, 0.25%)</title><rect x="28.6291%" y="533" width="0.2517%" height="15" fill="rgb(207,153,8)"/><text x="28.8791%" y="543.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (111 samples, 0.25%)</title><rect x="28.6291%" y="517" width="0.2517%" height="15" fill="rgb(242,9,16)"/><text x="28.8791%" y="527.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (111 samples, 0.25%)</title><rect x="28.6291%" y="501" width="0.2517%" height="15" fill="rgb(217,211,10)"/><text x="28.8791%" y="511.50"></text></g><g><title>compiler::generate::generator::gen_body (111 samples, 0.25%)</title><rect x="28.6291%" y="485" width="0.2517%" height="15" fill="rgb(219,228,52)"/><text x="28.8791%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (111 samples, 0.25%)</title><rect x="28.6291%" y="469" width="0.2517%" height="15" fill="rgb(231,92,29)"/><text x="28.8791%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (111 samples, 0.25%)</title><rect x="28.6291%" y="453" width="0.2517%" height="15" fill="rgb(232,8,23)"/><text x="28.8791%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (111 samples, 0.25%)</title><rect x="28.6291%" y="437" width="0.2517%" height="15" fill="rgb(216,211,34)"/><text x="28.8791%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (111 samples, 0.25%)</title><rect x="28.6291%" y="421" width="0.2517%" height="15" fill="rgb(236,151,0)"/><text x="28.8791%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (111 samples, 0.25%)</title><rect x="28.6291%" y="405" width="0.2517%" height="15" fill="rgb(209,168,3)"/><text x="28.8791%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (111 samples, 0.25%)</title><rect x="28.6291%" y="389" width="0.2517%" height="15" fill="rgb(208,129,28)"/><text x="28.8791%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.25%)</title><rect x="28.6291%" y="373" width="0.2517%" height="15" fill="rgb(229,78,22)"/><text x="28.8791%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (111 samples, 0.25%)</title><rect x="28.6291%" y="357" width="0.2517%" height="15" fill="rgb(228,187,13)"/><text x="28.8791%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (111 samples, 0.25%)</title><rect x="28.6291%" y="341" width="0.2517%" height="15" fill="rgb(240,119,24)"/><text x="28.8791%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (111 samples, 0.25%)</title><rect x="28.6291%" y="325" width="0.2517%" height="15" fill="rgb(209,194,42)"/><text x="28.8791%" y="335.50"></text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (111 samples, 0.25%)</title><rect x="28.6291%" y="309" width="0.2517%" height="15" fill="rgb(247,200,46)"/><text x="28.8791%" y="319.50"></text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (111 samples, 0.25%)</title><rect x="28.6291%" y="293" width="0.2517%" height="15" fill="rgb(218,76,16)"/><text x="28.8791%" y="303.50"></text></g><g><title>compiler::generate::templates::expression (104 samples, 0.24%)</title><rect x="28.6450%" y="277" width="0.2358%" height="15" fill="rgb(225,21,48)"/><text x="28.8950%" y="287.50"></text></g><g><title>compiler::generate::templates::guard (104 samples, 0.24%)</title><rect x="28.6450%" y="261" width="0.2358%" height="15" fill="rgb(239,223,50)"/><text x="28.8950%" y="271.50"></text></g><g><title>_int_malloc (59 samples, 0.13%)</title><rect x="29.1665%" y="917" width="0.1338%" height="15" fill="rgb(244,45,21)"/><text x="29.4165%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (88 samples, 0.20%)</title><rect x="29.1030%" y="949" width="0.1995%" height="15" fill="rgb(232,33,43)"/><text x="29.3530%" y="959.50"></text></g><g><title>__GI___libc_malloc (63 samples, 0.14%)</title><rect x="29.1597%" y="933" width="0.1429%" height="15" fill="rgb(209,8,3)"/><text x="29.4097%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (91 samples, 0.21%)</title><rect x="29.1007%" y="1013" width="0.2063%" height="15" fill="rgb(214,25,53)"/><text x="29.3507%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (91 samples, 0.21%)</title><rect x="29.1007%" y="997" width="0.2063%" height="15" fill="rgb(254,186,54)"/><text x="29.3507%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (91 samples, 0.21%)</title><rect x="29.1007%" y="981" width="0.2063%" height="15" fill="rgb(208,174,49)"/><text x="29.3507%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (91 samples, 0.21%)</title><rect x="29.1007%" y="965" width="0.2063%" height="15" fill="rgb(233,191,51)"/><text x="29.3507%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (120 samples, 0.27%)</title><rect x="29.1007%" y="1029" width="0.2721%" height="15" fill="rgb(222,134,10)"/><text x="29.3507%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (47 samples, 0.11%)</title><rect x="29.5565%" y="885" width="0.1066%" height="15" fill="rgb(230,226,20)"/><text x="29.8065%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (47 samples, 0.11%)</title><rect x="29.5565%" y="869" width="0.1066%" height="15" fill="rgb(251,111,25)"/><text x="29.8065%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (47 samples, 0.11%)</title><rect x="29.5565%" y="853" width="0.1066%" height="15" fill="rgb(224,40,46)"/><text x="29.8065%" y="863.50"></text></g><g><title>alloc::alloc::realloc (46 samples, 0.10%)</title><rect x="29.5588%" y="837" width="0.1043%" height="15" fill="rgb(236,108,47)"/><text x="29.8088%" y="847.50"></text></g><g><title>__rdl_realloc (46 samples, 0.10%)</title><rect x="29.5588%" y="821" width="0.1043%" height="15" fill="rgb(234,93,0)"/><text x="29.8088%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (46 samples, 0.10%)</title><rect x="29.5588%" y="805" width="0.1043%" height="15" fill="rgb(224,213,32)"/><text x="29.8088%" y="815.50"></text></g><g><title>__GI___libc_realloc (46 samples, 0.10%)</title><rect x="29.5588%" y="789" width="0.1043%" height="15" fill="rgb(251,11,48)"/><text x="29.8088%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (52 samples, 0.12%)</title><rect x="29.5474%" y="949" width="0.1179%" height="15" fill="rgb(236,173,5)"/><text x="29.7974%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.11%)</title><rect x="29.5519%" y="933" width="0.1134%" height="15" fill="rgb(230,95,12)"/><text x="29.8019%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (50 samples, 0.11%)</title><rect x="29.5519%" y="917" width="0.1134%" height="15" fill="rgb(232,209,1)"/><text x="29.8019%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (48 samples, 0.11%)</title><rect x="29.5565%" y="901" width="0.1088%" height="15" fill="rgb(232,6,1)"/><text x="29.8065%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (57 samples, 0.13%)</title><rect x="29.5474%" y="997" width="0.1292%" height="15" fill="rgb(210,224,50)"/><text x="29.7974%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (57 samples, 0.13%)</title><rect x="29.5474%" y="981" width="0.1292%" height="15" fill="rgb(228,127,35)"/><text x="29.7974%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (57 samples, 0.13%)</title><rect x="29.5474%" y="965" width="0.1292%" height="15" fill="rgb(245,102,45)"/><text x="29.7974%" y="975.50"></text></g><g><title>compiler::parse::path::resolve (135 samples, 0.31%)</title><rect x="29.3978%" y="1013" width="0.3061%" height="15" fill="rgb(214,1,49)"/><text x="29.6478%" y="1023.50"></text></g><g><title>compiler::parse::tree::tree (365 samples, 0.83%)</title><rect x="28.8830%" y="1077" width="0.8276%" height="15" fill="rgb(226,163,40)"/><text x="29.1330%" y="1087.50"></text></g><g><title>compiler::parse::tree::tree (365 samples, 0.83%)</title><rect x="28.8830%" y="1061" width="0.8276%" height="15" fill="rgb(239,212,28)"/><text x="29.1330%" y="1071.50"></text></g><g><title>compiler::parse::tree::tree (348 samples, 0.79%)</title><rect x="28.9216%" y="1045" width="0.7891%" height="15" fill="rgb(220,20,13)"/><text x="29.1716%" y="1055.50"></text></g><g><title>compiler::parse::tree::resolve_expression_paths (149 samples, 0.34%)</title><rect x="29.3728%" y="1029" width="0.3379%" height="15" fill="rgb(210,164,35)"/><text x="29.6228%" y="1039.50"></text></g><g><title>core::ops::function::FnMut::call_mut (114 samples, 0.26%)</title><rect x="29.7107%" y="1077" width="0.2585%" height="15" fill="rgb(248,109,41)"/><text x="29.9607%" y="1087.50"></text></g><g><title>compiler::parse::expression::expression (114 samples, 0.26%)</title><rect x="29.7107%" y="1061" width="0.2585%" height="15" fill="rgb(238,23,50)"/><text x="29.9607%" y="1071.50"></text></g><g><title>nom::branch::alt::{{closure}} (114 samples, 0.26%)</title><rect x="29.7107%" y="1045" width="0.2585%" height="15" fill="rgb(211,48,49)"/><text x="29.9607%" y="1055.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (114 samples, 0.26%)</title><rect x="29.7107%" y="1029" width="0.2585%" height="15" fill="rgb(223,36,21)"/><text x="29.9607%" y="1039.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (114 samples, 0.26%)</title><rect x="29.7107%" y="1013" width="0.2585%" height="15" fill="rgb(207,123,46)"/><text x="29.9607%" y="1023.50"></text></g><g><title>core::ops::function::FnMut::call_mut (114 samples, 0.26%)</title><rect x="29.7107%" y="997" width="0.2585%" height="15" fill="rgb(240,218,32)"/><text x="29.9607%" y="1007.50"></text></g><g><title>compiler::parse::expression::negative (114 samples, 0.26%)</title><rect x="29.7107%" y="981" width="0.2585%" height="15" fill="rgb(252,5,43)"/><text x="29.9607%" y="991.50"></text></g><g><title>nom::combinator::map::{{closure}} (114 samples, 0.26%)</title><rect x="29.7107%" y="965" width="0.2585%" height="15" fill="rgb(252,84,19)"/><text x="29.9607%" y="975.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (114 samples, 0.26%)</title><rect x="29.7107%" y="949" width="0.2585%" height="15" fill="rgb(243,152,39)"/><text x="29.9607%" y="959.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (114 samples, 0.26%)</title><rect x="29.7107%" y="933" width="0.2585%" height="15" fill="rgb(234,160,15)"/><text x="29.9607%" y="943.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (114 samples, 0.26%)</title><rect x="29.7107%" y="917" width="0.2585%" height="15" fill="rgb(237,34,20)"/><text x="29.9607%" y="927.50"></text></g><g><title>nom::sequence::preceded::{{closure}} (114 samples, 0.26%)</title><rect x="29.7107%" y="901" width="0.2585%" height="15" fill="rgb(229,97,13)"/><text x="29.9607%" y="911.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (114 samples, 0.26%)</title><rect x="29.7107%" y="885" width="0.2585%" height="15" fill="rgb(234,71,50)"/><text x="29.9607%" y="895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (114 samples, 0.26%)</title><rect x="29.7107%" y="869" width="0.2585%" height="15" fill="rgb(253,155,4)"/><text x="29.9607%" y="879.50"></text></g><g><title>compiler::parse::expression::expression (114 samples, 0.26%)</title><rect x="29.7107%" y="853" width="0.2585%" height="15" fill="rgb(222,185,37)"/><text x="29.9607%" y="863.50"></text></g><g><title>nom::branch::alt::{{closure}} (114 samples, 0.26%)</title><rect x="29.7107%" y="837" width="0.2585%" height="15" fill="rgb(251,177,13)"/><text x="29.9607%" y="847.50"></text></g><g><title>&lt;(A,B,C,D,E) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (114 samples, 0.26%)</title><rect x="29.7107%" y="821" width="0.2585%" height="15" fill="rgb(250,179,40)"/><text x="29.9607%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (114 samples, 0.26%)</title><rect x="29.7107%" y="805" width="0.2585%" height="15" fill="rgb(242,44,2)"/><text x="29.9607%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (114 samples, 0.26%)</title><rect x="29.7107%" y="789" width="0.2585%" height="15" fill="rgb(216,177,13)"/><text x="29.9607%" y="799.50"></text></g><g><title>compiler::parse::expression::path (47 samples, 0.11%)</title><rect x="29.8626%" y="773" width="0.1066%" height="15" fill="rgb(216,106,43)"/><text x="30.1126%" y="783.50"></text></g><g><title>nom::branch::alt::{{closure}} (47 samples, 0.11%)</title><rect x="29.8626%" y="757" width="0.1066%" height="15" fill="rgb(216,183,2)"/><text x="30.1126%" y="767.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (47 samples, 0.11%)</title><rect x="29.8626%" y="741" width="0.1066%" height="15" fill="rgb(249,75,3)"/><text x="30.1126%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 0.11%)</title><rect x="29.8626%" y="725" width="0.1066%" height="15" fill="rgb(219,67,39)"/><text x="30.1126%" y="735.50"></text></g><g><title>nom::combinator::map::{{closure}} (47 samples, 0.11%)</title><rect x="29.8626%" y="709" width="0.1066%" height="15" fill="rgb(253,228,2)"/><text x="30.1126%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 0.11%)</title><rect x="29.8626%" y="693" width="0.1066%" height="15" fill="rgb(235,138,27)"/><text x="30.1126%" y="703.50"></text></g><g><title>nom::sequence::pair::{{closure}} (47 samples, 0.11%)</title><rect x="29.8626%" y="677" width="0.1066%" height="15" fill="rgb(236,97,51)"/><text x="30.1126%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 0.11%)</title><rect x="29.8626%" y="661" width="0.1066%" height="15" fill="rgb(240,80,30)"/><text x="30.1126%" y="671.50"></text></g><g><title>nom::multi::separated_list1::{{closure}} (47 samples, 0.11%)</title><rect x="29.8626%" y="645" width="0.1066%" height="15" fill="rgb(230,178,19)"/><text x="30.1126%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 0.11%)</title><rect x="29.8626%" y="629" width="0.1066%" height="15" fill="rgb(210,190,27)"/><text x="30.1126%" y="639.50"></text></g><g><title>nom::combinator::map::{{closure}} (47 samples, 0.11%)</title><rect x="29.8626%" y="613" width="0.1066%" height="15" fill="rgb(222,107,31)"/><text x="30.1126%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 0.11%)</title><rect x="29.8626%" y="597" width="0.1066%" height="15" fill="rgb(216,127,34)"/><text x="30.1126%" y="607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (47 samples, 0.11%)</title><rect x="29.8626%" y="581" width="0.1066%" height="15" fill="rgb(234,116,52)"/><text x="30.1126%" y="591.50"></text></g><g><title>compiler::parse::expression::identifier (47 samples, 0.11%)</title><rect x="29.8626%" y="565" width="0.1066%" height="15" fill="rgb(222,124,15)"/><text x="30.1126%" y="575.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (47 samples, 0.11%)</title><rect x="29.8626%" y="549" width="0.1066%" height="15" fill="rgb(231,179,28)"/><text x="30.1126%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 0.11%)</title><rect x="29.8626%" y="533" width="0.1066%" height="15" fill="rgb(226,93,45)"/><text x="30.1126%" y="543.50"></text></g><g><title>nom::multi::many1_count::{{closure}} (47 samples, 0.11%)</title><rect x="29.8626%" y="517" width="0.1066%" height="15" fill="rgb(215,8,51)"/><text x="30.1126%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 0.11%)</title><rect x="29.8626%" y="501" width="0.1066%" height="15" fill="rgb(223,106,5)"/><text x="30.1126%" y="511.50"></text></g><g><title>compiler::parse::tokens::tokens (106 samples, 0.24%)</title><rect x="30.0463%" y="997" width="0.2404%" height="15" fill="rgb(250,191,5)"/><text x="30.2963%" y="1007.50"></text></g><g><title>compiler::parse::tokens::token (106 samples, 0.24%)</title><rect x="30.0463%" y="981" width="0.2404%" height="15" fill="rgb(242,132,44)"/><text x="30.2963%" y="991.50"></text></g><g><title>nom::branch::alt::{{closure}} (106 samples, 0.24%)</title><rect x="30.0463%" y="965" width="0.2404%" height="15" fill="rgb(251,152,29)"/><text x="30.2963%" y="975.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I,J) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (106 samples, 0.24%)</title><rect x="30.0463%" y="949" width="0.2404%" height="15" fill="rgb(218,179,5)"/><text x="30.2963%" y="959.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (106 samples, 0.24%)</title><rect x="30.0463%" y="933" width="0.2404%" height="15" fill="rgb(227,67,19)"/><text x="30.2963%" y="943.50"></text></g><g><title>core::ops::function::FnMut::call_mut (106 samples, 0.24%)</title><rect x="30.0463%" y="917" width="0.2404%" height="15" fill="rgb(233,119,31)"/><text x="30.2963%" y="927.50"></text></g><g><title>compiler::parse::tokens::legacy_if (72 samples, 0.16%)</title><rect x="30.1234%" y="901" width="0.1633%" height="15" fill="rgb(241,120,22)"/><text x="30.3734%" y="911.50"></text></g><g><title>nom::combinator::map::{{closure}} (72 samples, 0.16%)</title><rect x="30.1234%" y="885" width="0.1633%" height="15" fill="rgb(224,102,30)"/><text x="30.3734%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (72 samples, 0.16%)</title><rect x="30.1234%" y="869" width="0.1633%" height="15" fill="rgb(210,164,37)"/><text x="30.3734%" y="879.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (72 samples, 0.16%)</title><rect x="30.1234%" y="853" width="0.1633%" height="15" fill="rgb(226,191,16)"/><text x="30.3734%" y="863.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (72 samples, 0.16%)</title><rect x="30.1234%" y="837" width="0.1633%" height="15" fill="rgb(214,40,45)"/><text x="30.3734%" y="847.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (72 samples, 0.16%)</title><rect x="30.1234%" y="821" width="0.1633%" height="15" fill="rgb(244,29,26)"/><text x="30.3734%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (72 samples, 0.16%)</title><rect x="30.1234%" y="805" width="0.1633%" height="15" fill="rgb(216,16,5)"/><text x="30.3734%" y="815.50"></text></g><g><title>nom::sequence::pair::{{closure}} (72 samples, 0.16%)</title><rect x="30.1234%" y="789" width="0.1633%" height="15" fill="rgb(249,76,35)"/><text x="30.3734%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (72 samples, 0.16%)</title><rect x="30.1234%" y="773" width="0.1633%" height="15" fill="rgb(207,11,44)"/><text x="30.3734%" y="783.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (72 samples, 0.16%)</title><rect x="30.1234%" y="757" width="0.1633%" height="15" fill="rgb(228,190,49)"/><text x="30.3734%" y="767.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (72 samples, 0.16%)</title><rect x="30.1234%" y="741" width="0.1633%" height="15" fill="rgb(214,173,12)"/><text x="30.3734%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (59 samples, 0.13%)</title><rect x="30.1528%" y="725" width="0.1338%" height="15" fill="rgb(218,26,35)"/><text x="30.4028%" y="735.50"></text></g><g><title>nom::character::complete::multispace0 (59 samples, 0.13%)</title><rect x="30.1528%" y="709" width="0.1338%" height="15" fill="rgb(220,200,19)"/><text x="30.4028%" y="719.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (59 samples, 0.13%)</title><rect x="30.1528%" y="693" width="0.1338%" height="15" fill="rgb(239,95,49)"/><text x="30.4028%" y="703.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTakeAtPosition&gt;::split_at_position (52 samples, 0.12%)</title><rect x="30.1687%" y="677" width="0.1179%" height="15" fill="rgb(235,85,53)"/><text x="30.4187%" y="687.50"></text></g><g><title>regex::dfa::Fsm::forward (391 samples, 0.89%)</title><rect x="30.4000%" y="629" width="0.8866%" height="15" fill="rgb(233,133,31)"/><text x="30.6500%" y="639.50"></text></g><g><title>regex::dfa::Fsm::exec_at (391 samples, 0.89%)</title><rect x="30.4000%" y="613" width="0.8866%" height="15" fill="rgb(218,25,20)"/><text x="30.6500%" y="623.50"></text></g><g><title>regex::dfa::Fsm::next_si (106 samples, 0.24%)</title><rect x="31.0462%" y="597" width="0.2404%" height="15" fill="rgb(252,210,38)"/><text x="31.2962%" y="607.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (75 samples, 0.17%)</title><rect x="31.1165%" y="581" width="0.1701%" height="15" fill="rgb(242,134,21)"/><text x="31.3665%" y="591.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (727 samples, 1.65%)</title><rect x="30.4000%" y="773" width="1.6485%" height="15" fill="rgb(213,28,48)"/><text x="30.6500%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (727 samples, 1.65%)</title><rect x="30.4000%" y="757" width="1.6485%" height="15" fill="rgb(250,196,2)"/><text x="30.6500%" y="767.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (727 samples, 1.65%)</title><rect x="30.4000%" y="741" width="1.6485%" height="15" fill="rgb(227,5,17)"/><text x="30.6500%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (727 samples, 1.65%)</title><rect x="30.4000%" y="725" width="1.6485%" height="15" fill="rgb(221,226,24)"/><text x="30.6500%" y="735.50"></text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (727 samples, 1.65%)</title><rect x="30.4000%" y="709" width="1.6485%" height="15" fill="rgb(211,5,48)"/><text x="30.6500%" y="719.50"></text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (727 samples, 1.65%)</title><rect x="30.4000%" y="693" width="1.6485%" height="15" fill="rgb(219,150,6)"/><text x="30.6500%" y="703.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (727 samples, 1.65%)</title><rect x="30.4000%" y="677" width="1.6485%" height="15" fill="rgb(251,46,16)"/><text x="30.6500%" y="687.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (727 samples, 1.65%)</title><rect x="30.4000%" y="661" width="1.6485%" height="15" fill="rgb(220,204,40)"/><text x="30.6500%" y="671.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (727 samples, 1.65%)</title><rect x="30.4000%" y="645" width="1.6485%" height="15" fill="rgb(211,85,2)"/><text x="30.6500%" y="655.50"></text></g><g><title>regex::dfa::Fsm::reverse (336 samples, 0.76%)</title><rect x="31.2866%" y="629" width="0.7619%" height="15" fill="rgb(229,17,7)"/><text x="31.5366%" y="639.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (336 samples, 0.76%)</title><rect x="31.2866%" y="613" width="0.7619%" height="15" fill="rgb(239,72,28)"/><text x="31.5366%" y="623.50"></text></g><g><title>regex::dfa::Fsm::next_si (246 samples, 0.56%)</title><rect x="31.4906%" y="597" width="0.5578%" height="15" fill="rgb(230,47,54)"/><text x="31.7406%" y="607.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (246 samples, 0.56%)</title><rect x="31.4906%" y="581" width="0.5578%" height="15" fill="rgb(214,50,8)"/><text x="31.7406%" y="591.50"></text></g><g><title>main (918 samples, 2.08%)</title><rect x="29.9692%" y="1077" width="2.0815%" height="15" fill="rgb(216,198,43)"/><text x="30.2192%" y="1087.50">m..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (918 samples, 2.08%)</title><rect x="29.9692%" y="1061" width="2.0815%" height="15" fill="rgb(234,20,35)"/><text x="30.2192%" y="1071.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (918 samples, 2.08%)</title><rect x="29.9692%" y="1045" width="2.0815%" height="15" fill="rgb(254,45,19)"/><text x="30.2192%" y="1055.50">c..</text></g><g><title>bench::main (918 samples, 2.08%)</title><rect x="29.9692%" y="1029" width="2.0815%" height="15" fill="rgb(219,14,44)"/><text x="30.2192%" y="1039.50">b..</text></g><g><title>compiler::compile (918 samples, 2.08%)</title><rect x="29.9692%" y="1013" width="2.0815%" height="15" fill="rgb(217,220,26)"/><text x="30.2192%" y="1023.50">c..</text></g><g><title>compiler::pre_fixer::pre_fix (746 samples, 1.69%)</title><rect x="30.3592%" y="997" width="1.6915%" height="15" fill="rgb(213,158,28)"/><text x="30.6092%" y="1007.50"></text></g><g><title>compiler::pre_fixer::fix_iter (746 samples, 1.69%)</title><rect x="30.3592%" y="981" width="1.6915%" height="15" fill="rgb(252,51,52)"/><text x="30.6092%" y="991.50"></text></g><g><title>regex::re_unicode::Regex::replace (746 samples, 1.69%)</title><rect x="30.3592%" y="965" width="1.6915%" height="15" fill="rgb(246,89,16)"/><text x="30.6092%" y="975.50"></text></g><g><title>regex::re_unicode::Regex::replacen (746 samples, 1.69%)</title><rect x="30.3592%" y="949" width="1.6915%" height="15" fill="rgb(216,158,49)"/><text x="30.6092%" y="959.50"></text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (746 samples, 1.69%)</title><rect x="30.3592%" y="933" width="1.6915%" height="15" fill="rgb(236,107,19)"/><text x="30.6092%" y="943.50"></text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (746 samples, 1.69%)</title><rect x="30.3592%" y="917" width="1.6915%" height="15" fill="rgb(228,185,30)"/><text x="30.6092%" y="927.50"></text></g><g><title>compiler::pre_fixer::fix_iter (746 samples, 1.69%)</title><rect x="30.3592%" y="901" width="1.6915%" height="15" fill="rgb(246,134,8)"/><text x="30.6092%" y="911.50"></text></g><g><title>regex::re_unicode::Regex::replace (746 samples, 1.69%)</title><rect x="30.3592%" y="885" width="1.6915%" height="15" fill="rgb(214,143,50)"/><text x="30.6092%" y="895.50"></text></g><g><title>regex::re_unicode::Regex::replacen (746 samples, 1.69%)</title><rect x="30.3592%" y="869" width="1.6915%" height="15" fill="rgb(228,75,8)"/><text x="30.6092%" y="879.50"></text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (746 samples, 1.69%)</title><rect x="30.3592%" y="853" width="1.6915%" height="15" fill="rgb(207,175,4)"/><text x="30.6092%" y="863.50"></text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (746 samples, 1.69%)</title><rect x="30.3592%" y="837" width="1.6915%" height="15" fill="rgb(205,108,24)"/><text x="30.6092%" y="847.50"></text></g><g><title>compiler::pre_fixer::fix_iter (746 samples, 1.69%)</title><rect x="30.3592%" y="821" width="1.6915%" height="15" fill="rgb(244,120,49)"/><text x="30.6092%" y="831.50"></text></g><g><title>regex::re_unicode::Regex::replace (746 samples, 1.69%)</title><rect x="30.3592%" y="805" width="1.6915%" height="15" fill="rgb(223,47,38)"/><text x="30.6092%" y="815.50"></text></g><g><title>regex::re_unicode::Regex::replacen (746 samples, 1.69%)</title><rect x="30.3592%" y="789" width="1.6915%" height="15" fill="rgb(229,179,11)"/><text x="30.6092%" y="799.50"></text></g><g><title>[unknown] (14,135 samples, 32.05%)</title><rect x="0.0045%" y="1093" width="32.0507%" height="15" fill="rgb(231,122,1)"/><text x="0.2545%" y="1103.50">[unknown]</text></g><g><title>compiler::generate::generator::gen_body (52 samples, 0.12%)</title><rect x="32.1936%" y="757" width="0.1179%" height="15" fill="rgb(245,119,9)"/><text x="32.4436%" y="767.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.33%)</title><rect x="32.5087%" y="597" width="0.3333%" height="15" fill="rgb(241,163,25)"/><text x="32.7587%" y="607.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (147 samples, 0.33%)</title><rect x="32.5087%" y="581" width="0.3333%" height="15" fill="rgb(217,214,3)"/><text x="32.7587%" y="591.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (138 samples, 0.31%)</title><rect x="32.5291%" y="565" width="0.3129%" height="15" fill="rgb(240,86,28)"/><text x="32.7791%" y="575.50"></text></g><g><title>core::slice::memchr::memchr (100 samples, 0.23%)</title><rect x="32.6153%" y="549" width="0.2267%" height="15" fill="rgb(215,47,9)"/><text x="32.8653%" y="559.50"></text></g><g><title>core::slice::memchr::memchr_general_case (99 samples, 0.22%)</title><rect x="32.6176%" y="533" width="0.2245%" height="15" fill="rgb(252,25,45)"/><text x="32.8676%" y="543.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.34%)</title><rect x="32.5087%" y="629" width="0.3401%" height="15" fill="rgb(251,164,9)"/><text x="32.7587%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.34%)</title><rect x="32.5087%" y="613" width="0.3401%" height="15" fill="rgb(233,194,0)"/><text x="32.7587%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (172 samples, 0.39%)</title><rect x="32.5065%" y="725" width="0.3900%" height="15" fill="rgb(249,111,24)"/><text x="32.7565%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (172 samples, 0.39%)</title><rect x="32.5065%" y="709" width="0.3900%" height="15" fill="rgb(250,223,3)"/><text x="32.7565%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (172 samples, 0.39%)</title><rect x="32.5065%" y="693" width="0.3900%" height="15" fill="rgb(236,178,37)"/><text x="32.7565%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (172 samples, 0.39%)</title><rect x="32.5065%" y="677" width="0.3900%" height="15" fill="rgb(241,158,50)"/><text x="32.7565%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (172 samples, 0.39%)</title><rect x="32.5065%" y="661" width="0.3900%" height="15" fill="rgb(213,121,41)"/><text x="32.7565%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (172 samples, 0.39%)</title><rect x="32.5065%" y="645" width="0.3900%" height="15" fill="rgb(240,92,3)"/><text x="32.7565%" y="655.50"></text></g><g><title>compiler::generate::templates::indent (216 samples, 0.49%)</title><rect x="32.4112%" y="741" width="0.4898%" height="15" fill="rgb(205,123,3)"/><text x="32.6612%" y="751.50"></text></g><g><title>compiler::generate::templates::block (267 samples, 0.61%)</title><rect x="32.3115%" y="757" width="0.6054%" height="15" fill="rgb(205,97,47)"/><text x="32.5615%" y="767.50"></text></g><g><title>compiler::generate::templates::escape_path (46 samples, 0.10%)</title><rect x="33.0325%" y="725" width="0.1043%" height="15" fill="rgb(247,152,14)"/><text x="33.2825%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (45 samples, 0.10%)</title><rect x="33.0348%" y="709" width="0.1020%" height="15" fill="rgb(248,195,53)"/><text x="33.2848%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (45 samples, 0.10%)</title><rect x="33.0348%" y="693" width="0.1020%" height="15" fill="rgb(226,201,16)"/><text x="33.2848%" y="703.50"></text></g><g><title>compiler::generate::templates::guard (97 samples, 0.22%)</title><rect x="32.9600%" y="741" width="0.2199%" height="15" fill="rgb(205,98,0)"/><text x="33.2100%" y="751.50"></text></g><g><title>compiler::generate::templates::expression (108 samples, 0.24%)</title><rect x="32.9441%" y="757" width="0.2449%" height="15" fill="rgb(214,191,48)"/><text x="33.1941%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 0.11%)</title><rect x="33.3500%" y="725" width="0.1066%" height="15" fill="rgb(237,112,39)"/><text x="33.6000%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 0.11%)</title><rect x="33.3500%" y="709" width="0.1066%" height="15" fill="rgb(247,203,27)"/><text x="33.6000%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.11%)</title><rect x="33.3500%" y="693" width="0.1066%" height="15" fill="rgb(235,124,28)"/><text x="33.6000%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (47 samples, 0.11%)</title><rect x="33.3500%" y="677" width="0.1066%" height="15" fill="rgb(208,207,46)"/><text x="33.6000%" y="687.50"></text></g><g><title>compiler::generate::templates::indent (85 samples, 0.19%)</title><rect x="33.2729%" y="741" width="0.1927%" height="15" fill="rgb(234,176,4)"/><text x="33.5229%" y="751.50"></text></g><g><title>compiler::generate::templates::if_else (126 samples, 0.29%)</title><rect x="33.1890%" y="757" width="0.2857%" height="15" fill="rgb(230,133,28)"/><text x="33.4390%" y="767.50"></text></g><g><title>alloc::str::join_generic_copy (49 samples, 0.11%)</title><rect x="33.5586%" y="693" width="0.1111%" height="15" fill="rgb(211,137,40)"/><text x="33.8086%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (50 samples, 0.11%)</title><rect x="33.5586%" y="725" width="0.1134%" height="15" fill="rgb(254,35,13)"/><text x="33.8086%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (50 samples, 0.11%)</title><rect x="33.5586%" y="709" width="0.1134%" height="15" fill="rgb(225,49,51)"/><text x="33.8086%" y="719.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 0.31%)</title><rect x="33.6810%" y="597" width="0.3061%" height="15" fill="rgb(251,10,15)"/><text x="33.9310%" y="607.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (135 samples, 0.31%)</title><rect x="33.6810%" y="581" width="0.3061%" height="15" fill="rgb(228,207,15)"/><text x="33.9310%" y="591.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (125 samples, 0.28%)</title><rect x="33.7037%" y="565" width="0.2834%" height="15" fill="rgb(241,99,19)"/><text x="33.9537%" y="575.50"></text></g><g><title>core::slice::memchr::memchr (80 samples, 0.18%)</title><rect x="33.8057%" y="549" width="0.1814%" height="15" fill="rgb(207,104,49)"/><text x="34.0557%" y="559.50"></text></g><g><title>core::slice::memchr::memchr_general_case (79 samples, 0.18%)</title><rect x="33.8080%" y="533" width="0.1791%" height="15" fill="rgb(234,99,18)"/><text x="34.0580%" y="543.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (137 samples, 0.31%)</title><rect x="33.6810%" y="629" width="0.3106%" height="15" fill="rgb(213,191,49)"/><text x="33.9310%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (137 samples, 0.31%)</title><rect x="33.6810%" y="613" width="0.3106%" height="15" fill="rgb(210,226,19)"/><text x="33.9310%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (165 samples, 0.37%)</title><rect x="33.6765%" y="661" width="0.3741%" height="15" fill="rgb(229,97,18)"/><text x="33.9265%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (165 samples, 0.37%)</title><rect x="33.6765%" y="645" width="0.3741%" height="15" fill="rgb(211,167,15)"/><text x="33.9265%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (168 samples, 0.38%)</title><rect x="33.6765%" y="725" width="0.3809%" height="15" fill="rgb(210,169,34)"/><text x="33.9265%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (168 samples, 0.38%)</title><rect x="33.6765%" y="709" width="0.3809%" height="15" fill="rgb(241,121,31)"/><text x="33.9265%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (168 samples, 0.38%)</title><rect x="33.6765%" y="693" width="0.3809%" height="15" fill="rgb(232,40,11)"/><text x="33.9265%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (168 samples, 0.38%)</title><rect x="33.6765%" y="677" width="0.3809%" height="15" fill="rgb(205,86,26)"/><text x="33.9265%" y="687.50"></text></g><g><title>compiler::generate::templates::indent (229 samples, 0.52%)</title><rect x="33.5404%" y="741" width="0.5193%" height="15" fill="rgb(231,126,28)"/><text x="33.7904%" y="751.50"></text></g><g><title>compiler::generate::templates::iter (263 samples, 0.60%)</title><rect x="33.4747%" y="757" width="0.5963%" height="15" fill="rgb(219,221,18)"/><text x="33.7247%" y="767.50"></text></g><g><title>json::stringify (126 samples, 0.29%)</title><rect x="34.0960%" y="757" width="0.2857%" height="15" fill="rgb(211,40,0)"/><text x="34.3460%" y="767.50"></text></g><g><title>json::value::JsonValue::dump (121 samples, 0.27%)</title><rect x="34.1073%" y="741" width="0.2744%" height="15" fill="rgb(239,85,43)"/><text x="34.3573%" y="751.50"></text></g><g><title>json::codegen::Generator::write_json (115 samples, 0.26%)</title><rect x="34.1209%" y="725" width="0.2608%" height="15" fill="rgb(231,55,21)"/><text x="34.3709%" y="735.50"></text></g><g><title>json::codegen::Generator::write_string_complex (111 samples, 0.25%)</title><rect x="34.1300%" y="709" width="0.2517%" height="15" fill="rgb(225,184,43)"/><text x="34.3800%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,005 samples, 2.28%)</title><rect x="32.1074%" y="853" width="2.2788%" height="15" fill="rgb(251,158,41)"/><text x="32.3574%" y="863.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (1,005 samples, 2.28%)</title><rect x="32.1074%" y="837" width="2.2788%" height="15" fill="rgb(234,159,37)"/><text x="32.3574%" y="847.50">c..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,005 samples, 2.28%)</title><rect x="32.1074%" y="821" width="2.2788%" height="15" fill="rgb(216,204,22)"/><text x="32.3574%" y="831.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,005 samples, 2.28%)</title><rect x="32.1074%" y="805" width="2.2788%" height="15" fill="rgb(214,17,3)"/><text x="32.3574%" y="815.50">c..</text></g><g><title>core::iter::adapters::map_try_fold::{{closure}} (1,000 samples, 2.27%)</title><rect x="32.1187%" y="789" width="2.2675%" height="15" fill="rgb(212,111,17)"/><text x="32.3687%" y="799.50">c..</text></g><g><title>compiler::generate::generator::gen_body::{{closure}} (995 samples, 2.26%)</title><rect x="32.1301%" y="773" width="2.2561%" height="15" fill="rgb(221,157,24)"/><text x="32.3801%" y="783.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,028 samples, 2.33%)</title><rect x="32.0983%" y="885" width="2.3310%" height="15" fill="rgb(252,16,13)"/><text x="32.3483%" y="895.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (1,028 samples, 2.33%)</title><rect x="32.0983%" y="869" width="2.3310%" height="15" fill="rgb(221,62,2)"/><text x="32.3483%" y="879.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,041 samples, 2.36%)</title><rect x="32.0983%" y="949" width="2.3604%" height="15" fill="rgb(247,87,22)"/><text x="32.3483%" y="959.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,041 samples, 2.36%)</title><rect x="32.0983%" y="933" width="2.3604%" height="15" fill="rgb(215,73,9)"/><text x="32.3483%" y="943.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,041 samples, 2.36%)</title><rect x="32.0983%" y="917" width="2.3604%" height="15" fill="rgb(207,175,33)"/><text x="32.3483%" y="927.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,041 samples, 2.36%)</title><rect x="32.0983%" y="901" width="2.3604%" height="15" fill="rgb(243,129,54)"/><text x="32.3483%" y="911.50">&lt;a..</text></g><g><title>compiler::generate::generator::gen_body (1,066 samples, 2.42%)</title><rect x="32.0620%" y="965" width="2.4171%" height="15" fill="rgb(227,119,45)"/><text x="32.3120%" y="975.50">co..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (58 samples, 0.13%)</title><rect x="34.6220%" y="885" width="0.1315%" height="15" fill="rgb(205,109,36)"/><text x="34.8720%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.13%)</title><rect x="34.6220%" y="869" width="0.1315%" height="15" fill="rgb(205,6,39)"/><text x="34.8720%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (73 samples, 0.17%)</title><rect x="34.6039%" y="933" width="0.1655%" height="15" fill="rgb(221,32,16)"/><text x="34.8539%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (73 samples, 0.17%)</title><rect x="34.6039%" y="917" width="0.1655%" height="15" fill="rgb(228,144,50)"/><text x="34.8539%" y="927.50"></text></g><g><title>alloc::str::join_generic_copy (73 samples, 0.17%)</title><rect x="34.6039%" y="901" width="0.1655%" height="15" fill="rgb(229,201,53)"/><text x="34.8539%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (60 samples, 0.14%)</title><rect x="35.1186%" y="725" width="0.1360%" height="15" fill="rgb(249,153,27)"/><text x="35.3686%" y="735.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (250 samples, 0.57%)</title><rect x="34.7694%" y="805" width="0.5669%" height="15" fill="rgb(227,106,25)"/><text x="35.0194%" y="815.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (250 samples, 0.57%)</title><rect x="34.7694%" y="789" width="0.5669%" height="15" fill="rgb(230,65,29)"/><text x="35.0194%" y="799.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (232 samples, 0.53%)</title><rect x="34.8102%" y="773" width="0.5261%" height="15" fill="rgb(221,57,46)"/><text x="35.0602%" y="783.50"></text></g><g><title>core::slice::memchr::memchr (163 samples, 0.37%)</title><rect x="34.9667%" y="757" width="0.3696%" height="15" fill="rgb(229,161,17)"/><text x="35.2167%" y="767.50"></text></g><g><title>core::slice::memchr::memchr_general_case (162 samples, 0.37%)</title><rect x="34.9689%" y="741" width="0.3673%" height="15" fill="rgb(222,213,11)"/><text x="35.2189%" y="751.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (259 samples, 0.59%)</title><rect x="34.7694%" y="837" width="0.5873%" height="15" fill="rgb(235,35,13)"/><text x="35.0194%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (259 samples, 0.59%)</title><rect x="34.7694%" y="821" width="0.5873%" height="15" fill="rgb(233,158,34)"/><text x="35.0194%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (275 samples, 0.62%)</title><rect x="34.7694%" y="869" width="0.6236%" height="15" fill="rgb(215,151,48)"/><text x="35.0194%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (275 samples, 0.62%)</title><rect x="34.7694%" y="853" width="0.6236%" height="15" fill="rgb(229,84,14)"/><text x="35.0194%" y="863.50"></text></g><g><title>compiler::generate::templates::indent (351 samples, 0.80%)</title><rect x="34.6016%" y="949" width="0.7959%" height="15" fill="rgb(229,68,14)"/><text x="34.8516%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (277 samples, 0.63%)</title><rect x="34.7694%" y="933" width="0.6281%" height="15" fill="rgb(243,106,26)"/><text x="35.0194%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (277 samples, 0.63%)</title><rect x="34.7694%" y="917" width="0.6281%" height="15" fill="rgb(206,45,38)"/><text x="35.0194%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (277 samples, 0.63%)</title><rect x="34.7694%" y="901" width="0.6281%" height="15" fill="rgb(226,6,15)"/><text x="35.0194%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (277 samples, 0.63%)</title><rect x="34.7694%" y="885" width="0.6281%" height="15" fill="rgb(232,22,54)"/><text x="35.0194%" y="895.50"></text></g><g><title>compiler::generate::templates::wrapper (407 samples, 0.92%)</title><rect x="34.4792%" y="965" width="0.9229%" height="15" fill="rgb(229,222,32)"/><text x="34.7292%" y="975.50"></text></g><g><title>compiler::generate::generator::generate (1,477 samples, 3.35%)</title><rect x="32.0598%" y="981" width="3.3491%" height="15" fill="rgb(228,62,29)"/><text x="32.3098%" y="991.50">com..</text></g><g><title>&lt;nom_locate::LocatedSpan&lt;&amp;str,X&gt; as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (169 samples, 0.38%)</title><rect x="35.5267%" y="965" width="0.3832%" height="15" fill="rgb(251,103,34)"/><text x="35.7767%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (116 samples, 0.26%)</title><rect x="35.6469%" y="949" width="0.2630%" height="15" fill="rgb(233,12,30)"/><text x="35.8969%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (116 samples, 0.26%)</title><rect x="35.6469%" y="933" width="0.2630%" height="15" fill="rgb(238,52,0)"/><text x="35.8969%" y="943.50"></text></g><g><title>&lt;memchr::iter::Memchr as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 0.26%)</title><rect x="35.6469%" y="917" width="0.2630%" height="15" fill="rgb(223,98,5)"/><text x="35.8969%" y="927.50"></text></g><g><title>memchr::memchr (107 samples, 0.24%)</title><rect x="35.6673%" y="901" width="0.2426%" height="15" fill="rgb(228,75,37)"/><text x="35.9173%" y="911.50"></text></g><g><title>memchr::memchr::imp (107 samples, 0.24%)</title><rect x="35.6673%" y="885" width="0.2426%" height="15" fill="rgb(205,115,49)"/><text x="35.9173%" y="895.50"></text></g><g><title>memchr::x86::memchr (107 samples, 0.24%)</title><rect x="35.6673%" y="869" width="0.2426%" height="15" fill="rgb(250,154,43)"/><text x="35.9173%" y="879.50"></text></g><g><title>memchr::x86::avx::memchr (104 samples, 0.24%)</title><rect x="35.6741%" y="853" width="0.2358%" height="15" fill="rgb(226,43,29)"/><text x="35.9241%" y="863.50"></text></g><g><title>&lt;&amp;P as aho_corasick::prefilter::Prefilter&gt;::next_candidate (73 samples, 0.17%)</title><rect x="36.2614%" y="853" width="0.1655%" height="15" fill="rgb(249,228,39)"/><text x="36.5114%" y="863.50"></text></g><g><title>&lt;aho_corasick::prefilter::StartBytesThree as aho_corasick::prefilter::Prefilter&gt;::next_candidate (69 samples, 0.16%)</title><rect x="36.2705%" y="837" width="0.1565%" height="15" fill="rgb(216,79,43)"/><text x="36.5205%" y="847.50"></text></g><g><title>memchr::memchr3 (56 samples, 0.13%)</title><rect x="36.2999%" y="821" width="0.1270%" height="15" fill="rgb(228,95,12)"/><text x="36.5499%" y="831.50"></text></g><g><title>memchr::memchr3::imp (52 samples, 0.12%)</title><rect x="36.3090%" y="805" width="0.1179%" height="15" fill="rgb(249,221,15)"/><text x="36.5590%" y="815.50"></text></g><g><title>memchr::x86::memchr3 (52 samples, 0.12%)</title><rect x="36.3090%" y="789" width="0.1179%" height="15" fill="rgb(233,34,13)"/><text x="36.5590%" y="799.50"></text></g><g><title>memchr::x86::avx::memchr3 (49 samples, 0.11%)</title><rect x="36.3158%" y="773" width="0.1111%" height="15" fill="rgb(214,103,39)"/><text x="36.5658%" y="783.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::find (202 samples, 0.46%)</title><rect x="36.0074%" y="965" width="0.4580%" height="15" fill="rgb(251,126,39)"/><text x="36.2574%" y="975.50"></text></g><g><title>aho_corasick::ahocorasick::Imp&lt;S&gt;::find_at_no_state (202 samples, 0.46%)</title><rect x="36.0074%" y="949" width="0.4580%" height="15" fill="rgb(214,216,36)"/><text x="36.2574%" y="959.50"></text></g><g><title>aho_corasick::dfa::DFA&lt;S&gt;::find_at_no_state (202 samples, 0.46%)</title><rect x="36.0074%" y="933" width="0.4580%" height="15" fill="rgb(220,221,8)"/><text x="36.2574%" y="943.50"></text></g><g><title>aho_corasick::automaton::Automaton::find_at_no_state (202 samples, 0.46%)</title><rect x="36.0074%" y="917" width="0.4580%" height="15" fill="rgb(240,216,3)"/><text x="36.2574%" y="927.50"></text></g><g><title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state (199 samples, 0.45%)</title><rect x="36.0142%" y="901" width="0.4512%" height="15" fill="rgb(232,218,17)"/><text x="36.2642%" y="911.50"></text></g><g><title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (198 samples, 0.45%)</title><rect x="36.0165%" y="885" width="0.4490%" height="15" fill="rgb(229,163,45)"/><text x="36.2665%" y="895.50"></text></g><g><title>aho_corasick::prefilter::next (94 samples, 0.21%)</title><rect x="36.2523%" y="869" width="0.2131%" height="15" fill="rgb(231,110,42)"/><text x="36.5023%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (71 samples, 0.16%)</title><rect x="36.4655%" y="965" width="0.1610%" height="15" fill="rgb(208,170,48)"/><text x="36.7155%" y="975.50"></text></g><g><title>nom::bytes::complete::tag::{{closure}} (73 samples, 0.17%)</title><rect x="36.8668%" y="773" width="0.1655%" height="15" fill="rgb(239,116,25)"/><text x="37.1168%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (63 samples, 0.14%)</title><rect x="37.0459%" y="757" width="0.1429%" height="15" fill="rgb(219,200,50)"/><text x="37.2959%" y="767.50"></text></g><g><title>core::ops::function::FnMut::call_mut (54 samples, 0.12%)</title><rect x="37.0663%" y="741" width="0.1224%" height="15" fill="rgb(245,200,0)"/><text x="37.3163%" y="751.50"></text></g><g><title>nom::character::complete::multispace0 (54 samples, 0.12%)</title><rect x="37.0663%" y="725" width="0.1224%" height="15" fill="rgb(245,119,33)"/><text x="37.3163%" y="735.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (54 samples, 0.12%)</title><rect x="37.0663%" y="709" width="0.1224%" height="15" fill="rgb(231,125,12)"/><text x="37.3163%" y="719.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTakeAtPosition&gt;::split_at_position (51 samples, 0.12%)</title><rect x="37.0731%" y="693" width="0.1156%" height="15" fill="rgb(216,96,41)"/><text x="37.3231%" y="703.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::InputTake&gt;::take_split (45 samples, 0.10%)</title><rect x="37.0868%" y="677" width="0.1020%" height="15" fill="rgb(248,43,45)"/><text x="37.3368%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (192 samples, 0.44%)</title><rect x="36.8283%" y="789" width="0.4354%" height="15" fill="rgb(217,222,7)"/><text x="37.0783%" y="799.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (102 samples, 0.23%)</title><rect x="37.0323%" y="773" width="0.2313%" height="15" fill="rgb(233,28,6)"/><text x="37.2823%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (248 samples, 0.56%)</title><rect x="36.8079%" y="821" width="0.5623%" height="15" fill="rgb(231,218,15)"/><text x="37.0579%" y="831.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (248 samples, 0.56%)</title><rect x="36.8079%" y="805" width="0.5623%" height="15" fill="rgb(226,171,48)"/><text x="37.0579%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (328 samples, 0.74%)</title><rect x="36.6854%" y="853" width="0.7437%" height="15" fill="rgb(235,201,9)"/><text x="36.9354%" y="863.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (307 samples, 0.70%)</title><rect x="36.7330%" y="837" width="0.6961%" height="15" fill="rgb(217,80,15)"/><text x="36.9830%" y="847.50"></text></g><g><title>compiler::parse::tokens::interp_escaped (371 samples, 0.84%)</title><rect x="36.6786%" y="885" width="0.8412%" height="15" fill="rgb(219,152,8)"/><text x="36.9286%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (371 samples, 0.84%)</title><rect x="36.6786%" y="869" width="0.8412%" height="15" fill="rgb(243,107,38)"/><text x="36.9286%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (80 samples, 0.18%)</title><rect x="37.5221%" y="853" width="0.1814%" height="15" fill="rgb(231,17,5)"/><text x="37.7721%" y="863.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (63 samples, 0.14%)</title><rect x="37.5607%" y="837" width="0.1429%" height="15" fill="rgb(209,25,54)"/><text x="37.8107%" y="847.50"></text></g><g><title>compiler::parse::tokens::interp_raw (93 samples, 0.21%)</title><rect x="37.5198%" y="885" width="0.2109%" height="15" fill="rgb(219,0,2)"/><text x="37.7698%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (93 samples, 0.21%)</title><rect x="37.5198%" y="869" width="0.2109%" height="15" fill="rgb(246,9,5)"/><text x="37.7698%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (76 samples, 0.17%)</title><rect x="37.9053%" y="757" width="0.1723%" height="15" fill="rgb(226,159,4)"/><text x="38.1553%" y="767.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (126 samples, 0.29%)</title><rect x="37.8123%" y="789" width="0.2857%" height="15" fill="rgb(219,175,34)"/><text x="38.0623%" y="799.50"></text></g><g><title>nom::sequence::pair::{{closure}} (111 samples, 0.25%)</title><rect x="37.8464%" y="773" width="0.2517%" height="15" fill="rgb(236,10,46)"/><text x="38.0964%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (142 samples, 0.32%)</title><rect x="37.8123%" y="821" width="0.3220%" height="15" fill="rgb(240,211,16)"/><text x="38.0623%" y="831.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (142 samples, 0.32%)</title><rect x="37.8123%" y="805" width="0.3220%" height="15" fill="rgb(205,3,43)"/><text x="38.0623%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (183 samples, 0.41%)</title><rect x="37.7353%" y="853" width="0.4149%" height="15" fill="rgb(245,7,22)"/><text x="37.9853%" y="863.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (160 samples, 0.36%)</title><rect x="37.7874%" y="837" width="0.3628%" height="15" fill="rgb(239,132,32)"/><text x="38.0374%" y="847.50"></text></g><g><title>compiler::parse::tokens::legacy_begin (205 samples, 0.46%)</title><rect x="37.7307%" y="885" width="0.4648%" height="15" fill="rgb(228,202,34)"/><text x="37.9807%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (204 samples, 0.46%)</title><rect x="37.7330%" y="869" width="0.4626%" height="15" fill="rgb(254,200,22)"/><text x="37.9830%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (83 samples, 0.19%)</title><rect x="38.2613%" y="789" width="0.1882%" height="15" fill="rgb(219,10,39)"/><text x="38.5113%" y="799.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (53 samples, 0.12%)</title><rect x="38.3293%" y="773" width="0.1202%" height="15" fill="rgb(226,210,39)"/><text x="38.5793%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (125 samples, 0.28%)</title><rect x="38.1978%" y="853" width="0.2834%" height="15" fill="rgb(208,219,16)"/><text x="38.4478%" y="863.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (106 samples, 0.24%)</title><rect x="38.2409%" y="837" width="0.2404%" height="15" fill="rgb(216,158,51)"/><text x="38.4909%" y="847.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (100 samples, 0.23%)</title><rect x="38.2545%" y="821" width="0.2267%" height="15" fill="rgb(233,14,44)"/><text x="38.5045%" y="831.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (100 samples, 0.23%)</title><rect x="38.2545%" y="805" width="0.2267%" height="15" fill="rgb(237,97,39)"/><text x="38.5045%" y="815.50"></text></g><g><title>compiler::parse::tokens::legacy_else (129 samples, 0.29%)</title><rect x="38.1955%" y="885" width="0.2925%" height="15" fill="rgb(218,198,43)"/><text x="38.4455%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (128 samples, 0.29%)</title><rect x="38.1978%" y="869" width="0.2902%" height="15" fill="rgb(231,104,20)"/><text x="38.4478%" y="879.50"></text></g><g><title>&lt;nom_locate::LocatedSpan&lt;T,X&gt; as nom::traits::FindSubstring&lt;&amp;str&gt;&gt;::find_substring (45 samples, 0.10%)</title><rect x="38.7012%" y="725" width="0.1020%" height="15" fill="rgb(254,36,13)"/><text x="38.9512%" y="735.50"></text></g><g><title>&lt;&amp;str as nom::traits::FindSubstring&lt;&amp;str&gt;&gt;::find_substring (45 samples, 0.10%)</title><rect x="38.7012%" y="709" width="0.1020%" height="15" fill="rgb(248,14,50)"/><text x="38.9512%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (45 samples, 0.10%)</title><rect x="38.7012%" y="693" width="0.1020%" height="15" fill="rgb(217,107,29)"/><text x="38.9512%" y="703.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (106 samples, 0.24%)</title><rect x="38.6037%" y="757" width="0.2404%" height="15" fill="rgb(251,169,33)"/><text x="38.8537%" y="767.50"></text></g><g><title>nom::bytes::complete::take_until::{{closure}} (63 samples, 0.14%)</title><rect x="38.7012%" y="741" width="0.1429%" height="15" fill="rgb(217,108,32)"/><text x="38.9512%" y="751.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (115 samples, 0.26%)</title><rect x="38.5878%" y="773" width="0.2608%" height="15" fill="rgb(219,66,42)"/><text x="38.8378%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (78 samples, 0.18%)</title><rect x="38.9030%" y="725" width="0.1769%" height="15" fill="rgb(206,180,7)"/><text x="39.1530%" y="735.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (251 samples, 0.57%)</title><rect x="38.5402%" y="789" width="0.5691%" height="15" fill="rgb(208,226,31)"/><text x="38.7902%" y="799.50"></text></g><g><title>nom::sequence::pair::{{closure}} (115 samples, 0.26%)</title><rect x="38.8486%" y="773" width="0.2608%" height="15" fill="rgb(218,26,49)"/><text x="39.0986%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (114 samples, 0.26%)</title><rect x="38.8508%" y="757" width="0.2585%" height="15" fill="rgb(233,197,48)"/><text x="39.1008%" y="767.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (100 samples, 0.23%)</title><rect x="38.8826%" y="741" width="0.2267%" height="15" fill="rgb(252,181,51)"/><text x="39.1326%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (267 samples, 0.61%)</title><rect x="38.5085%" y="853" width="0.6054%" height="15" fill="rgb(253,90,19)"/><text x="38.7585%" y="863.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (267 samples, 0.61%)</title><rect x="38.5085%" y="837" width="0.6054%" height="15" fill="rgb(215,171,30)"/><text x="38.7585%" y="847.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (256 samples, 0.58%)</title><rect x="38.5334%" y="821" width="0.5805%" height="15" fill="rgb(214,222,9)"/><text x="38.7834%" y="831.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (256 samples, 0.58%)</title><rect x="38.5334%" y="805" width="0.5805%" height="15" fill="rgb(223,3,22)"/><text x="38.7834%" y="815.50"></text></g><g><title>compiler::parse::tokens::legacy_end (302 samples, 0.68%)</title><rect x="38.4881%" y="885" width="0.6848%" height="15" fill="rgb(225,196,46)"/><text x="38.7381%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (301 samples, 0.68%)</title><rect x="38.4903%" y="869" width="0.6825%" height="15" fill="rgb(209,110,37)"/><text x="38.7403%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 0.15%)</title><rect x="39.3089%" y="757" width="0.1519%" height="15" fill="rgb(249,89,12)"/><text x="39.5589%" y="767.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (102 samples, 0.23%)</title><rect x="39.2975%" y="773" width="0.2313%" height="15" fill="rgb(226,27,33)"/><text x="39.5475%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (123 samples, 0.28%)</title><rect x="39.5674%" y="757" width="0.2789%" height="15" fill="rgb(213,82,22)"/><text x="39.8174%" y="767.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (76 samples, 0.17%)</title><rect x="39.6739%" y="741" width="0.1723%" height="15" fill="rgb(248,140,0)"/><text x="39.9239%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (272 samples, 0.62%)</title><rect x="39.2567%" y="789" width="0.6168%" height="15" fill="rgb(228,106,3)"/><text x="39.5067%" y="799.50"></text></g><g><title>nom::sequence::pair::{{closure}} (152 samples, 0.34%)</title><rect x="39.5288%" y="773" width="0.3447%" height="15" fill="rgb(209,23,37)"/><text x="39.7788%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (326 samples, 0.74%)</title><rect x="39.2567%" y="821" width="0.7392%" height="15" fill="rgb(241,93,50)"/><text x="39.5067%" y="831.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (326 samples, 0.74%)</title><rect x="39.2567%" y="805" width="0.7392%" height="15" fill="rgb(253,46,43)"/><text x="39.5067%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (386 samples, 0.88%)</title><rect x="39.1796%" y="853" width="0.8752%" height="15" fill="rgb(226,206,43)"/><text x="39.4296%" y="863.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (366 samples, 0.83%)</title><rect x="39.2250%" y="837" width="0.8299%" height="15" fill="rgb(217,54,7)"/><text x="39.4750%" y="847.50"></text></g><g><title>compiler::parse::tokens::legacy_if (419 samples, 0.95%)</title><rect x="39.1728%" y="885" width="0.9501%" height="15" fill="rgb(223,5,52)"/><text x="39.4228%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (418 samples, 0.95%)</title><rect x="39.1751%" y="869" width="0.9478%" height="15" fill="rgb(206,52,46)"/><text x="39.4251%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (61 samples, 0.14%)</title><rect x="40.2249%" y="789" width="0.1383%" height="15" fill="rgb(253,136,11)"/><text x="40.4749%" y="799.50"></text></g><g><title>nom::sequence::pair::{{closure}} (61 samples, 0.14%)</title><rect x="40.2249%" y="773" width="0.1383%" height="15" fill="rgb(208,106,33)"/><text x="40.4749%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (86 samples, 0.20%)</title><rect x="40.2249%" y="821" width="0.1950%" height="15" fill="rgb(206,54,4)"/><text x="40.4749%" y="831.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (86 samples, 0.20%)</title><rect x="40.2249%" y="805" width="0.1950%" height="15" fill="rgb(213,3,15)"/><text x="40.4749%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (130 samples, 0.29%)</title><rect x="40.1297%" y="853" width="0.2948%" height="15" fill="rgb(252,211,39)"/><text x="40.3797%" y="863.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (108 samples, 0.24%)</title><rect x="40.1796%" y="837" width="0.2449%" height="15" fill="rgb(223,6,36)"/><text x="40.4296%" y="847.50"></text></g><g><title>compiler::parse::tokens::new_each (147 samples, 0.33%)</title><rect x="40.1229%" y="885" width="0.3333%" height="15" fill="rgb(252,169,45)"/><text x="40.3729%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (146 samples, 0.33%)</title><rect x="40.1252%" y="869" width="0.3311%" height="15" fill="rgb(212,48,26)"/><text x="40.3752%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (47 samples, 0.11%)</title><rect x="40.5673%" y="821" width="0.1066%" height="15" fill="rgb(251,102,48)"/><text x="40.8173%" y="831.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (47 samples, 0.11%)</title><rect x="40.5673%" y="805" width="0.1066%" height="15" fill="rgb(243,208,16)"/><text x="40.8173%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (97 samples, 0.22%)</title><rect x="40.4585%" y="853" width="0.2199%" height="15" fill="rgb(219,96,24)"/><text x="40.7085%" y="863.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (66 samples, 0.15%)</title><rect x="40.5288%" y="837" width="0.1497%" height="15" fill="rgb(219,33,29)"/><text x="40.7788%" y="847.50"></text></g><g><title>compiler::parse::tokens::new_else (111 samples, 0.25%)</title><rect x="40.4562%" y="885" width="0.2517%" height="15" fill="rgb(223,176,5)"/><text x="40.7062%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (111 samples, 0.25%)</title><rect x="40.4562%" y="869" width="0.2517%" height="15" fill="rgb(228,140,14)"/><text x="40.7062%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (54 samples, 0.12%)</title><rect x="40.7827%" y="821" width="0.1224%" height="15" fill="rgb(217,179,31)"/><text x="41.0327%" y="831.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (54 samples, 0.12%)</title><rect x="40.7827%" y="805" width="0.1224%" height="15" fill="rgb(230,9,30)"/><text x="41.0327%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (89 samples, 0.20%)</title><rect x="40.7102%" y="853" width="0.2018%" height="15" fill="rgb(230,136,20)"/><text x="40.9602%" y="863.50"></text></g><g><title>nom::combinator::recognize::{{closure}} (67 samples, 0.15%)</title><rect x="40.7601%" y="837" width="0.1519%" height="15" fill="rgb(215,210,22)"/><text x="41.0101%" y="847.50"></text></g><g><title>compiler::parse::tokens::new_end (101 samples, 0.23%)</title><rect x="40.7079%" y="885" width="0.2290%" height="15" fill="rgb(218,43,5)"/><text x="40.9579%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (101 samples, 0.23%)</title><rect x="40.7079%" y="869" width="0.2290%" height="15" fill="rgb(216,11,5)"/><text x="40.9579%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (49 samples, 0.11%)</title><rect x="41.0072%" y="789" width="0.1111%" height="15" fill="rgb(209,82,29)"/><text x="41.2572%" y="799.50"></text></g><g><title>nom::sequence::pair::{{closure}} (49 samples, 0.11%)</title><rect x="41.0072%" y="773" width="0.1111%" height="15" fill="rgb(244,115,12)"/><text x="41.2572%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (65 samples, 0.15%)</title><rect x="41.0072%" y="821" width="0.1474%" height="15" fill="rgb(222,82,18)"/><text x="41.2572%" y="831.50"></text></g><g><title>nom::sequence::delimited::{{closure}} (65 samples, 0.15%)</title><rect x="41.0072%" y="805" width="0.1474%" height="15" fill="rgb(249,227,8)"/><text x="41.2572%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (98 samples, 0.22%)</title><rect x="40.9392%" y="853" width="0.2222%" height="15" fill="rgb(253,141,45)"/><text x="41.1892%" y="863.50"></text></g><g><title>nom::combinator::consumed::{{closure}} (76 samples, 0.17%)</title><rect x="40.9891%" y="837" width="0.1723%" height="15" fill="rgb(234,184,4)"/><text x="41.2391%" y="847.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,993 samples, 4.52%)</title><rect x="36.6786%" y="917" width="4.5191%" height="15" fill="rgb(218,194,23)"/><text x="36.9286%" y="927.50">&lt;F as..</text></g><g><title>core::ops::function::FnMut::call_mut (1,993 samples, 4.52%)</title><rect x="36.6786%" y="901" width="4.5191%" height="15" fill="rgb(235,66,41)"/><text x="36.9286%" y="911.50">core:..</text></g><g><title>compiler::parse::tokens::new_if (115 samples, 0.26%)</title><rect x="40.9369%" y="885" width="0.2608%" height="15" fill="rgb(245,217,1)"/><text x="41.1869%" y="895.50"></text></g><g><title>nom::combinator::map::{{closure}} (115 samples, 0.26%)</title><rect x="40.9369%" y="869" width="0.2608%" height="15" fill="rgb(229,91,1)"/><text x="41.1869%" y="879.50"></text></g><g><title>compiler::parse::tokens::tokens (2,563 samples, 5.81%)</title><rect x="35.4088%" y="981" width="5.8115%" height="15" fill="rgb(207,101,30)"/><text x="35.6588%" y="991.50">compile..</text></g><g><title>compiler::parse::tokens::token (2,026 samples, 4.59%)</title><rect x="36.6265%" y="965" width="4.5939%" height="15" fill="rgb(223,82,49)"/><text x="36.8765%" y="975.50">compi..</text></g><g><title>nom::branch::alt::{{closure}} (2,018 samples, 4.58%)</title><rect x="36.6446%" y="949" width="4.5758%" height="15" fill="rgb(218,167,17)"/><text x="36.8946%" y="959.50">nom::..</text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I,J) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2,018 samples, 4.58%)</title><rect x="36.6446%" y="933" width="4.5758%" height="15" fill="rgb(208,103,14)"/><text x="36.8946%" y="943.50">&lt;(A,B..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (115 samples, 0.26%)</title><rect x="41.4856%" y="805" width="0.2608%" height="15" fill="rgb(238,20,8)"/><text x="41.7356%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (115 samples, 0.26%)</title><rect x="41.4856%" y="789" width="0.2608%" height="15" fill="rgb(218,80,54)"/><text x="41.7356%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (115 samples, 0.26%)</title><rect x="41.4856%" y="773" width="0.2608%" height="15" fill="rgb(240,144,17)"/><text x="41.7356%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (81 samples, 0.18%)</title><rect x="41.5627%" y="757" width="0.1837%" height="15" fill="rgb(245,27,50)"/><text x="41.8127%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (195 samples, 0.44%)</title><rect x="41.4856%" y="821" width="0.4422%" height="15" fill="rgb(251,51,7)"/><text x="41.7356%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (63 samples, 0.14%)</title><rect x="41.7850%" y="805" width="0.1429%" height="15" fill="rgb(245,217,29)"/><text x="42.0350%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value::{{closure}} (60 samples, 0.14%)</title><rect x="41.9800%" y="805" width="0.1360%" height="15" fill="rgb(221,176,29)"/><text x="42.2300%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (60 samples, 0.14%)</title><rect x="41.9800%" y="789" width="0.1360%" height="15" fill="rgb(212,180,24)"/><text x="42.2300%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (60 samples, 0.14%)</title><rect x="41.9800%" y="773" width="0.1360%" height="15" fill="rgb(254,24,2)"/><text x="42.2300%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (60 samples, 0.14%)</title><rect x="41.9800%" y="757" width="0.1360%" height="15" fill="rgb(230,100,2)"/><text x="42.2300%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (60 samples, 0.14%)</title><rect x="41.9800%" y="741" width="0.1360%" height="15" fill="rgb(219,142,25)"/><text x="42.2300%" y="751.50"></text></g><g><title>compiler::pre_fixer::combined::{{closure}} (365 samples, 0.83%)</title><rect x="41.3723%" y="901" width="0.8276%" height="15" fill="rgb(240,73,43)"/><text x="41.6223%" y="911.50"></text></g><g><title>regex::re_unicode::Captures::name (345 samples, 0.78%)</title><rect x="41.4176%" y="885" width="0.7823%" height="15" fill="rgb(214,114,15)"/><text x="41.6676%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (329 samples, 0.75%)</title><rect x="41.4539%" y="869" width="0.7460%" height="15" fill="rgb(207,130,4)"/><text x="41.7039%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (316 samples, 0.72%)</title><rect x="41.4834%" y="853" width="0.7165%" height="15" fill="rgb(221,25,40)"/><text x="41.7334%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (316 samples, 0.72%)</title><rect x="41.4834%" y="837" width="0.7165%" height="15" fill="rgb(241,184,7)"/><text x="41.7334%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (120 samples, 0.27%)</title><rect x="41.9278%" y="821" width="0.2721%" height="15" fill="rgb(235,159,4)"/><text x="42.1778%" y="831.50"></text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (405 samples, 0.92%)</title><rect x="41.3133%" y="917" width="0.9183%" height="15" fill="rgb(214,87,48)"/><text x="41.5633%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (84 samples, 0.19%)</title><rect x="42.5876%" y="709" width="0.1905%" height="15" fill="rgb(246,198,24)"/><text x="42.8376%" y="719.50"></text></g><g><title>core::ptr::write (74 samples, 0.17%)</title><rect x="42.6103%" y="693" width="0.1678%" height="15" fill="rgb(209,66,40)"/><text x="42.8603%" y="703.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (153 samples, 0.35%)</title><rect x="42.5015%" y="741" width="0.3469%" height="15" fill="rgb(233,147,39)"/><text x="42.7515%" y="751.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (143 samples, 0.32%)</title><rect x="42.5241%" y="725" width="0.3242%" height="15" fill="rgb(231,145,52)"/><text x="42.7741%" y="735.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::clear (190 samples, 0.43%)</title><rect x="42.8484%" y="741" width="0.4308%" height="15" fill="rgb(206,20,26)"/><text x="43.0984%" y="751.50"></text></g><g><title>__memset_avx2_unaligned_erms (186 samples, 0.42%)</title><rect x="42.8575%" y="725" width="0.4217%" height="15" fill="rgb(238,220,4)"/><text x="43.1075%" y="735.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (373 samples, 0.85%)</title><rect x="42.4403%" y="773" width="0.8458%" height="15" fill="rgb(252,195,42)"/><text x="42.6903%" y="783.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (371 samples, 0.84%)</title><rect x="42.4448%" y="757" width="0.8412%" height="15" fill="rgb(209,10,6)"/><text x="42.6948%" y="767.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (374 samples, 0.85%)</title><rect x="42.4403%" y="789" width="0.8480%" height="15" fill="rgb(229,3,52)"/><text x="42.6903%" y="799.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::prefix_at (96 samples, 0.22%)</title><rect x="44.1046%" y="741" width="0.2177%" height="15" fill="rgb(253,49,37)"/><text x="44.3546%" y="751.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::find (83 samples, 0.19%)</title><rect x="44.1341%" y="725" width="0.1882%" height="15" fill="rgb(240,103,49)"/><text x="44.3841%" y="735.50"></text></g><g><title>aho_corasick::packed::api::Searcher::find (78 samples, 0.18%)</title><rect x="44.1454%" y="709" width="0.1769%" height="15" fill="rgb(250,182,30)"/><text x="44.3954%" y="719.50"></text></g><g><title>aho_corasick::packed::api::Searcher::find_at (78 samples, 0.18%)</title><rect x="44.1454%" y="693" width="0.1769%" height="15" fill="rgb(248,8,30)"/><text x="44.3954%" y="703.50"></text></g><g><title>aho_corasick::packed::teddy::runtime::Teddy::find_at (75 samples, 0.17%)</title><rect x="44.1522%" y="677" width="0.1701%" height="15" fill="rgb(237,120,30)"/><text x="44.4022%" y="687.50"></text></g><g><title>aho_corasick::packed::teddy::runtime::TeddySlim1Mask256::find_at (68 samples, 0.15%)</title><rect x="44.1681%" y="661" width="0.1542%" height="15" fill="rgb(221,146,34)"/><text x="44.4181%" y="671.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (54 samples, 0.12%)</title><rect x="44.5943%" y="725" width="0.1224%" height="15" fill="rgb(242,55,13)"/><text x="44.8443%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (54 samples, 0.12%)</title><rect x="44.5943%" y="709" width="0.1224%" height="15" fill="rgb(242,112,31)"/><text x="44.8443%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (499 samples, 1.13%)</title><rect x="44.3313%" y="741" width="1.1315%" height="15" fill="rgb(249,192,27)"/><text x="44.5813%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (329 samples, 0.75%)</title><rect x="44.7168%" y="725" width="0.7460%" height="15" fill="rgb(208,204,44)"/><text x="44.9668%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (100 samples, 0.23%)</title><rect x="45.4628%" y="677" width="0.2267%" height="15" fill="rgb(208,93,54)"/><text x="45.7128%" y="687.50"></text></g><g><title>core::mem::swap (101 samples, 0.23%)</title><rect x="45.4628%" y="741" width="0.2290%" height="15" fill="rgb(242,1,31)"/><text x="45.7128%" y="751.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (101 samples, 0.23%)</title><rect x="45.4628%" y="725" width="0.2290%" height="15" fill="rgb(241,83,25)"/><text x="45.7128%" y="735.50"></text></g><g><title>core::ptr::swap_nonoverlapping (101 samples, 0.23%)</title><rect x="45.4628%" y="709" width="0.2290%" height="15" fill="rgb(205,169,50)"/><text x="45.7128%" y="719.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (101 samples, 0.23%)</title><rect x="45.4628%" y="693" width="0.2290%" height="15" fill="rgb(239,186,37)"/><text x="45.7128%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::pop (745 samples, 1.69%)</title><rect x="47.0772%" y="725" width="1.6893%" height="15" fill="rgb(205,221,10)"/><text x="47.3272%" y="735.50"></text></g><g><title>core::ptr::read (532 samples, 1.21%)</title><rect x="47.5602%" y="709" width="1.2063%" height="15" fill="rgb(218,196,15)"/><text x="47.8102%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (733 samples, 1.66%)</title><rect x="48.7665%" y="725" width="1.6621%" height="15" fill="rgb(218,196,35)"/><text x="49.0165%" y="735.50"></text></g><g><title>core::ptr::write (628 samples, 1.42%)</title><rect x="49.0046%" y="709" width="1.4240%" height="15" fill="rgb(233,63,24)"/><text x="49.2546%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (609 samples, 1.38%)</title><rect x="58.0200%" y="709" width="1.3809%" height="15" fill="rgb(225,8,4)"/><text x="58.2700%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (609 samples, 1.38%)</title><rect x="58.0200%" y="693" width="1.3809%" height="15" fill="rgb(234,105,35)"/><text x="58.2700%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (69 samples, 0.16%)</title><rect x="61.9428%" y="693" width="0.1565%" height="15" fill="rgb(236,21,32)"/><text x="62.1928%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (5,083 samples, 11.53%)</title><rect x="59.5211%" y="709" width="11.5256%" height="15" fill="rgb(228,109,6)"/><text x="59.7711%" y="719.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::write (3,945 samples, 8.95%)</title><rect x="62.1015%" y="693" width="8.9452%" height="15" fill="rgb(229,215,31)"/><text x="62.3515%" y="703.50">core::ptr::wr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (80 samples, 0.18%)</title><rect x="71.9378%" y="693" width="0.1814%" height="15" fill="rgb(221,52,54)"/><text x="72.1878%" y="703.50"></text></g><g><title>regex::pikevm::Threads::caps (447 samples, 1.01%)</title><rect x="71.1079%" y="709" width="1.0136%" height="15" fill="rgb(252,129,43)"/><text x="71.3579%" y="719.50"></text></g><g><title>regex::sparse::SparseSet::contains (560 samples, 1.27%)</title><rect x="72.1214%" y="709" width="1.2698%" height="15" fill="rgb(248,183,27)"/><text x="72.3714%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (234 samples, 0.53%)</title><rect x="72.8606%" y="693" width="0.5306%" height="15" fill="rgb(250,0,22)"/><text x="73.1106%" y="703.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (234 samples, 0.53%)</title><rect x="72.8606%" y="677" width="0.5306%" height="15" fill="rgb(213,166,10)"/><text x="73.1106%" y="687.50"></text></g><g><title>regex::pikevm::Fsm&lt;I&gt;::add (12,501 samples, 28.35%)</title><rect x="45.7326%" y="741" width="28.3457%" height="15" fill="rgb(207,163,36)"/><text x="45.9826%" y="751.50">regex::pikevm::Fsm&lt;I&gt;::add</text></g><g><title>regex::pikevm::Fsm&lt;I&gt;::add_step (10,430 samples, 23.65%)</title><rect x="50.4286%" y="725" width="23.6497%" height="15" fill="rgb(208,122,22)"/><text x="50.6786%" y="735.50">regex::pikevm::Fsm&lt;I&gt;::add_step</text></g><g><title>regex::sparse::SparseSet::insert (303 samples, 0.69%)</title><rect x="73.3912%" y="709" width="0.6870%" height="15" fill="rgb(207,104,49)"/><text x="73.6412%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (116 samples, 0.26%)</title><rect x="73.8152%" y="693" width="0.2630%" height="15" fill="rgb(248,211,50)"/><text x="74.0652%" y="703.50"></text></g><g><title>&lt;regex::prog::Program as core::ops::deref::Deref&gt;::deref (149 samples, 0.34%)</title><rect x="77.6563%" y="725" width="0.3379%" height="15" fill="rgb(217,13,45)"/><text x="77.9063%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (149 samples, 0.34%)</title><rect x="77.6563%" y="709" width="0.3379%" height="15" fill="rgb(211,216,49)"/><text x="77.9063%" y="719.50"></text></g><g><title>regex::input::&lt;impl core::cmp::PartialEq&lt;regex::input::Char&gt; for char&gt;::eq (240 samples, 0.54%)</title><rect x="78.0078%" y="725" width="0.5442%" height="15" fill="rgb(221,58,53)"/><text x="78.2578%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::pop (155 samples, 0.35%)</title><rect x="78.9012%" y="709" width="0.3515%" height="15" fill="rgb(220,112,41)"/><text x="79.1512%" y="719.50"></text></g><g><title>core::ptr::read (96 samples, 0.22%)</title><rect x="79.0350%" y="693" width="0.2177%" height="15" fill="rgb(236,38,28)"/><text x="79.2850%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (726 samples, 1.65%)</title><rect x="79.2526%" y="709" width="1.6462%" height="15" fill="rgb(227,195,22)"/><text x="79.5026%" y="719.50"></text></g><g><title>core::ptr::write (602 samples, 1.37%)</title><rect x="79.5338%" y="693" width="1.3650%" height="15" fill="rgb(214,55,33)"/><text x="79.7838%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (195 samples, 0.44%)</title><rect x="82.1686%" y="693" width="0.4422%" height="15" fill="rgb(248,80,13)"/><text x="82.4186%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (195 samples, 0.44%)</title><rect x="82.1686%" y="677" width="0.4422%" height="15" fill="rgb(238,52,6)"/><text x="82.4186%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (396 samples, 0.90%)</title><rect x="82.6108%" y="693" width="0.8979%" height="15" fill="rgb(224,198,47)"/><text x="82.8608%" y="703.50"></text></g><g><title>core::ptr::write (311 samples, 0.71%)</title><rect x="82.8035%" y="677" width="0.7052%" height="15" fill="rgb(233,171,20)"/><text x="83.0535%" y="687.50"></text></g><g><title>regex::pikevm::Threads::caps (45 samples, 0.10%)</title><rect x="83.5563%" y="693" width="0.1020%" height="15" fill="rgb(241,30,25)"/><text x="83.8063%" y="703.50"></text></g><g><title>regex::sparse::SparseSet::contains (155 samples, 0.35%)</title><rect x="83.6583%" y="693" width="0.3515%" height="15" fill="rgb(207,171,38)"/><text x="83.9083%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (117 samples, 0.27%)</title><rect x="83.7445%" y="677" width="0.2653%" height="15" fill="rgb(234,70,1)"/><text x="83.9945%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (117 samples, 0.27%)</title><rect x="83.7445%" y="661" width="0.2653%" height="15" fill="rgb(232,178,18)"/><text x="83.9945%" y="671.50"></text></g><g><title>regex::pikevm::Fsm&lt;I&gt;::add (2,464 samples, 5.59%)</title><rect x="78.5520%" y="725" width="5.5870%" height="15" fill="rgb(241,78,40)"/><text x="78.8020%" y="735.50">regex::..</text></g><g><title>regex::pikevm::Fsm&lt;I&gt;::add_step (1,429 samples, 3.24%)</title><rect x="80.8988%" y="709" width="3.2402%" height="15" fill="rgb(222,35,25)"/><text x="81.1488%" y="719.50">reg..</text></g><g><title>regex::sparse::SparseSet::insert (57 samples, 0.13%)</title><rect x="84.0098%" y="693" width="0.1292%" height="15" fill="rgb(207,92,16)"/><text x="84.2598%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (73 samples, 0.17%)</title><rect x="84.2025%" y="709" width="0.1655%" height="15" fill="rgb(216,59,51)"/><text x="84.4525%" y="719.50"></text></g><g><title>regex::pikevm::Fsm&lt;I&gt;::step (4,618 samples, 10.47%)</title><rect x="74.0783%" y="741" width="10.4712%" height="15" fill="rgb(213,80,28)"/><text x="74.3283%" y="751.50">regex::pikevm::..</text></g><g><title>regex::prog::InstRanges::matches (181 samples, 0.41%)</title><rect x="84.1390%" y="725" width="0.4104%" height="15" fill="rgb(220,93,7)"/><text x="84.3890%" y="735.50"></text></g><g><title>regex::pikevm::Threads::caps (520 samples, 1.18%)</title><rect x="84.5495%" y="741" width="1.1791%" height="15" fill="rgb(225,24,44)"/><text x="84.7995%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (235 samples, 0.53%)</title><rect x="85.1957%" y="725" width="0.5329%" height="15" fill="rgb(243,74,40)"/><text x="85.4457%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (169 samples, 0.38%)</title><rect x="85.3453%" y="709" width="0.3832%" height="15" fill="rgb(228,39,7)"/><text x="85.5953%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (169 samples, 0.38%)</title><rect x="85.3453%" y="693" width="0.3832%" height="15" fill="rgb(227,79,8)"/><text x="85.5953%" y="703.50"></text></g><g><title>regex::pikevm::Fsm&lt;I&gt;::exec_ (18,766 samples, 42.55%)</title><rect x="43.3246%" y="757" width="42.5514%" height="15" fill="rgb(236,58,11)"/><text x="43.5746%" y="767.50">regex::pikevm::Fsm&lt;I&gt;::exec_</text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (19,173 samples, 43.47%)</title><rect x="42.4040%" y="821" width="43.4742%" height="15" fill="rgb(249,63,35)"/><text x="42.6540%" y="831.50">regex::exec::ExecNoSync::captures_nfa_type</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (19,171 samples, 43.47%)</title><rect x="42.4085%" y="805" width="43.4697%" height="15" fill="rgb(252,114,16)"/><text x="42.6585%" y="815.50">regex::exec::ExecNoSync::exec_nfa</text></g><g><title>regex::exec::ExecNoSync::exec_pikevm (18,783 samples, 42.59%)</title><rect x="43.2883%" y="789" width="42.5899%" height="15" fill="rgb(254,151,24)"/><text x="43.5383%" y="799.50">regex::exec::ExecNoSync::exec_pikevm</text></g><g><title>regex::pikevm::Fsm&lt;I&gt;::exec (18,781 samples, 42.59%)</title><rect x="43.2928%" y="773" width="42.5854%" height="15" fill="rgb(253,54,39)"/><text x="43.5428%" y="783.50">regex::pikevm::Fsm&lt;I&gt;::exec</text></g><g><title>regex::dfa::Fsm::next_si (139 samples, 0.32%)</title><rect x="86.0641%" y="773" width="0.3152%" height="15" fill="rgb(243,25,45)"/><text x="86.3141%" y="783.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (131 samples, 0.30%)</title><rect x="86.0823%" y="757" width="0.2970%" height="15" fill="rgb(234,134,9)"/><text x="86.3323%" y="767.50"></text></g><g><title>aho_corasick::packed::pattern::Pattern::is_prefix (54 samples, 0.12%)</title><rect x="86.7920%" y="629" width="0.1224%" height="15" fill="rgb(227,166,31)"/><text x="87.0420%" y="639.50"></text></g><g><title>aho_corasick::packed::teddy::runtime::Teddy::verify256 (161 samples, 0.37%)</title><rect x="86.5743%" y="677" width="0.3651%" height="15" fill="rgb(245,143,41)"/><text x="86.8243%" y="687.50"></text></g><g><title>aho_corasick::packed::teddy::runtime::Teddy::verify64 (158 samples, 0.36%)</title><rect x="86.5811%" y="661" width="0.3583%" height="15" fill="rgb(238,181,32)"/><text x="86.8311%" y="671.50"></text></g><g><title>aho_corasick::packed::teddy::runtime::Teddy::verify_bucket (113 samples, 0.26%)</title><rect x="86.6831%" y="645" width="0.2562%" height="15" fill="rgb(224,113,18)"/><text x="86.9331%" y="655.50"></text></g><g><title>regex::dfa::Fsm::exec_at (478 samples, 1.08%)</title><rect x="85.8895%" y="789" width="1.0839%" height="15" fill="rgb(240,229,28)"/><text x="86.1395%" y="799.50"></text></g><g><title>regex::dfa::Fsm::prefix_at (242 samples, 0.55%)</title><rect x="86.4247%" y="773" width="0.5487%" height="15" fill="rgb(250,185,3)"/><text x="86.6747%" y="783.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::find (240 samples, 0.54%)</title><rect x="86.4292%" y="757" width="0.5442%" height="15" fill="rgb(212,59,25)"/><text x="86.6792%" y="767.50"></text></g><g><title>aho_corasick::packed::api::Searcher::find (234 samples, 0.53%)</title><rect x="86.4428%" y="741" width="0.5306%" height="15" fill="rgb(221,87,20)"/><text x="86.6928%" y="751.50"></text></g><g><title>aho_corasick::packed::api::Searcher::find_at (234 samples, 0.53%)</title><rect x="86.4428%" y="725" width="0.5306%" height="15" fill="rgb(213,74,28)"/><text x="86.6928%" y="735.50"></text></g><g><title>aho_corasick::packed::teddy::runtime::Teddy::find_at (231 samples, 0.52%)</title><rect x="86.4496%" y="709" width="0.5238%" height="15" fill="rgb(224,132,34)"/><text x="86.6996%" y="719.50"></text></g><g><title>aho_corasick::packed::teddy::runtime::TeddySlim1Mask256::find_at (221 samples, 0.50%)</title><rect x="86.4723%" y="693" width="0.5011%" height="15" fill="rgb(222,101,24)"/><text x="86.7223%" y="703.50"></text></g><g><title>regex::dfa::Fsm::forward (508 samples, 1.15%)</title><rect x="85.8827%" y="805" width="1.1519%" height="15" fill="rgb(254,142,4)"/><text x="86.1327%" y="815.50"></text></g><g><title>regex::dfa::Fsm::next_si (256 samples, 0.58%)</title><rect x="87.2523%" y="773" width="0.5805%" height="15" fill="rgb(230,229,49)"/><text x="87.5023%" y="783.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (238 samples, 0.54%)</title><rect x="87.2931%" y="757" width="0.5397%" height="15" fill="rgb(238,70,47)"/><text x="87.5431%" y="767.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (361 samples, 0.82%)</title><rect x="87.0391%" y="789" width="0.8186%" height="15" fill="rgb(231,160,17)"/><text x="87.2891%" y="799.50"></text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (900 samples, 2.04%)</title><rect x="85.8782%" y="821" width="2.0407%" height="15" fill="rgb(218,68,53)"/><text x="86.1282%" y="831.50">r..</text></g><g><title>regex::dfa::Fsm::reverse (390 samples, 0.88%)</title><rect x="87.0346%" y="805" width="0.8843%" height="15" fill="rgb(236,111,10)"/><text x="87.2846%" y="815.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (20,132 samples, 45.65%)</title><rect x="42.2838%" y="853" width="45.6487%" height="15" fill="rgb(224,34,41)"/><text x="42.5338%" y="863.50">&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::capture..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (20,132 samples, 45.65%)</title><rect x="42.2838%" y="837" width="45.6487%" height="15" fill="rgb(241,118,19)"/><text x="42.5338%" y="847.50">&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_r..</text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,176 samples, 45.75%)</title><rect x="42.2543%" y="869" width="45.7485%" height="15" fill="rgb(238,129,25)"/><text x="42.5043%" y="879.50">&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterat..</text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (20,196 samples, 45.79%)</title><rect x="42.2543%" y="885" width="45.7938%" height="15" fill="rgb(238,22,31)"/><text x="42.5043%" y="895.50">&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterato..</text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,207 samples, 45.82%)</title><rect x="42.2316%" y="901" width="45.8188%" height="15" fill="rgb(222,174,48)"/><text x="42.4816%" y="911.50">&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterat..</text></g><g><title>&lt;core::iter::adapters::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,216 samples, 45.84%)</title><rect x="42.2316%" y="917" width="45.8392%" height="15" fill="rgb(206,152,40)"/><text x="42.4816%" y="927.50">&lt;core::iter::adapters::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterato..</text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (77 samples, 0.17%)</title><rect x="88.1457%" y="789" width="0.1746%" height="15" fill="rgb(218,99,54)"/><text x="88.3957%" y="799.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (77 samples, 0.17%)</title><rect x="88.1457%" y="773" width="0.1746%" height="15" fill="rgb(220,174,26)"/><text x="88.3957%" y="783.50"></text></g><g><title>regex::exec::ExecNoSync::exec_pikevm (63 samples, 0.14%)</title><rect x="88.1774%" y="757" width="0.1429%" height="15" fill="rgb(245,116,9)"/><text x="88.4274%" y="767.50"></text></g><g><title>regex::pikevm::Fsm&lt;I&gt;::exec (63 samples, 0.14%)</title><rect x="88.1774%" y="741" width="0.1429%" height="15" fill="rgb(209,72,35)"/><text x="88.4274%" y="751.50"></text></g><g><title>regex::pikevm::Fsm&lt;I&gt;::exec_ (63 samples, 0.14%)</title><rect x="88.1774%" y="725" width="0.1429%" height="15" fill="rgb(226,126,21)"/><text x="88.4274%" y="735.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (89 samples, 0.20%)</title><rect x="88.1457%" y="821" width="0.2018%" height="15" fill="rgb(227,192,1)"/><text x="88.3957%" y="831.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (89 samples, 0.20%)</title><rect x="88.1457%" y="805" width="0.2018%" height="15" fill="rgb(237,180,29)"/><text x="88.3957%" y="815.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (91 samples, 0.21%)</title><rect x="88.1434%" y="917" width="0.2063%" height="15" fill="rgb(230,197,35)"/><text x="88.3934%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (91 samples, 0.21%)</title><rect x="88.1434%" y="901" width="0.2063%" height="15" fill="rgb(246,193,31)"/><text x="88.3934%" y="911.50"></text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (91 samples, 0.21%)</title><rect x="88.1434%" y="885" width="0.2063%" height="15" fill="rgb(241,36,4)"/><text x="88.3934%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.21%)</title><rect x="88.1434%" y="869" width="0.2063%" height="15" fill="rgb(241,130,17)"/><text x="88.3934%" y="879.50"></text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.21%)</title><rect x="88.1434%" y="853" width="0.2063%" height="15" fill="rgb(206,137,32)"/><text x="88.3934%" y="863.50"></text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.21%)</title><rect x="88.1434%" y="837" width="0.2063%" height="15" fill="rgb(237,228,51)"/><text x="88.3934%" y="847.50"></text></g><g><title>compiler::pre_fixer::combined (20,782 samples, 47.12%)</title><rect x="41.3042%" y="965" width="47.1226%" height="15" fill="rgb(243,6,42)"/><text x="41.5542%" y="975.50">compiler::pre_fixer::combined</text></g><g><title>regex::re_unicode::Regex::replace_all (20,782 samples, 47.12%)</title><rect x="41.3042%" y="949" width="47.1226%" height="15" fill="rgb(251,74,28)"/><text x="41.5542%" y="959.50">regex::re_unicode::Regex::replace_all</text></g><g><title>regex::re_unicode::Regex::replacen (20,782 samples, 47.12%)</title><rect x="41.3042%" y="933" width="47.1226%" height="15" fill="rgb(218,20,49)"/><text x="41.5542%" y="943.50">regex::re_unicode::Regex::replacen</text></g><g><title>&lt;core::str::iter::SplitN&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.14%)</title><rect x="88.5493%" y="805" width="0.1360%" height="15" fill="rgb(238,28,14)"/><text x="88.7993%" y="815.50"></text></g><g><title>core::str::iter::SplitNInternal&lt;P&gt;::next (60 samples, 0.14%)</title><rect x="88.5493%" y="789" width="0.1360%" height="15" fill="rgb(229,40,46)"/><text x="88.7993%" y="799.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (60 samples, 0.14%)</title><rect x="88.5493%" y="773" width="0.1360%" height="15" fill="rgb(244,195,20)"/><text x="88.7993%" y="783.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (60 samples, 0.14%)</title><rect x="88.5493%" y="757" width="0.1360%" height="15" fill="rgb(253,56,35)"/><text x="88.7993%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (60 samples, 0.14%)</title><rect x="88.5493%" y="741" width="0.1360%" height="15" fill="rgb(210,149,44)"/><text x="88.7993%" y="751.50"></text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (90 samples, 0.20%)</title><rect x="88.5289%" y="837" width="0.2041%" height="15" fill="rgb(240,135,12)"/><text x="88.7789%" y="847.50"></text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (81 samples, 0.18%)</title><rect x="88.5493%" y="821" width="0.1837%" height="15" fill="rgb(251,24,50)"/><text x="88.7993%" y="831.50"></text></g><g><title>regex::dfa::Fsm::next_si (123 samples, 0.28%)</title><rect x="89.6377%" y="661" width="0.2789%" height="15" fill="rgb(243,200,47)"/><text x="89.8877%" y="671.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (77 samples, 0.17%)</title><rect x="89.7420%" y="645" width="0.1746%" height="15" fill="rgb(224,166,26)"/><text x="89.9920%" y="655.50"></text></g><g><title>regex::dfa::Fsm::exec_at (514 samples, 1.17%)</title><rect x="88.7715%" y="677" width="1.1655%" height="15" fill="rgb(233,0,47)"/><text x="89.0215%" y="687.50"></text></g><g><title>regex::dfa::Fsm::forward (516 samples, 1.17%)</title><rect x="88.7692%" y="693" width="1.1700%" height="15" fill="rgb(253,80,5)"/><text x="89.0192%" y="703.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (343 samples, 0.78%)</title><rect x="89.9392%" y="677" width="0.7777%" height="15" fill="rgb(214,133,25)"/><text x="90.1892%" y="687.50"></text></g><g><title>regex::dfa::Fsm::next_si (257 samples, 0.58%)</title><rect x="90.1342%" y="661" width="0.5827%" height="15" fill="rgb(209,27,14)"/><text x="90.3842%" y="671.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (256 samples, 0.58%)</title><rect x="90.1365%" y="645" width="0.5805%" height="15" fill="rgb(219,102,51)"/><text x="90.3865%" y="655.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (870 samples, 1.97%)</title><rect x="88.7465%" y="741" width="1.9727%" height="15" fill="rgb(237,18,16)"/><text x="88.9965%" y="751.50">&lt;..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (870 samples, 1.97%)</title><rect x="88.7465%" y="725" width="1.9727%" height="15" fill="rgb(241,85,17)"/><text x="88.9965%" y="735.50">&lt;..</text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (860 samples, 1.95%)</title><rect x="88.7692%" y="709" width="1.9500%" height="15" fill="rgb(236,90,42)"/><text x="89.0192%" y="719.50">r..</text></g><g><title>regex::dfa::Fsm::reverse (344 samples, 0.78%)</title><rect x="89.9392%" y="693" width="0.7800%" height="15" fill="rgb(249,57,21)"/><text x="90.1892%" y="703.50"></text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (872 samples, 1.98%)</title><rect x="88.7465%" y="757" width="1.9772%" height="15" fill="rgb(243,12,36)"/><text x="88.9965%" y="767.50">&lt;..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (874 samples, 1.98%)</title><rect x="88.7465%" y="837" width="1.9818%" height="15" fill="rgb(253,128,47)"/><text x="88.9965%" y="847.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (874 samples, 1.98%)</title><rect x="88.7465%" y="821" width="1.9818%" height="15" fill="rgb(207,33,20)"/><text x="88.9965%" y="831.50">c..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (874 samples, 1.98%)</title><rect x="88.7465%" y="805" width="1.9818%" height="15" fill="rgb(233,215,35)"/><text x="88.9965%" y="815.50">c..</text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (874 samples, 1.98%)</title><rect x="88.7465%" y="789" width="1.9818%" height="15" fill="rgb(249,188,52)"/><text x="88.9965%" y="799.50">&lt;..</text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (874 samples, 1.98%)</title><rect x="88.7465%" y="773" width="1.9818%" height="15" fill="rgb(225,12,32)"/><text x="88.9965%" y="783.50">&lt;..</text></g><g><title>compiler::pre_fixer::fix_iter (971 samples, 2.20%)</title><rect x="88.5289%" y="885" width="2.2017%" height="15" fill="rgb(247,98,14)"/><text x="88.7789%" y="895.50">c..</text></g><g><title>regex::re_unicode::Regex::replace (971 samples, 2.20%)</title><rect x="88.5289%" y="869" width="2.2017%" height="15" fill="rgb(247,219,48)"/><text x="88.7789%" y="879.50">r..</text></g><g><title>regex::re_unicode::Regex::replacen (971 samples, 2.20%)</title><rect x="88.5289%" y="853" width="2.2017%" height="15" fill="rgb(253,60,48)"/><text x="88.7789%" y="863.50">r..</text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (1,019 samples, 2.31%)</title><rect x="88.4314%" y="917" width="2.3106%" height="15" fill="rgb(245,15,52)"/><text x="88.6814%" y="927.50">&lt;..</text></g><g><title>compiler::pre_fixer::fix_iter::{{closure}} (1,010 samples, 2.29%)</title><rect x="88.4518%" y="901" width="2.2901%" height="15" fill="rgb(220,133,28)"/><text x="88.7018%" y="911.50">c..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (70 samples, 0.16%)</title><rect x="91.7918%" y="661" width="0.1587%" height="15" fill="rgb(217,180,4)"/><text x="92.0418%" y="671.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (70 samples, 0.16%)</title><rect x="91.7918%" y="645" width="0.1587%" height="15" fill="rgb(251,24,1)"/><text x="92.0418%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (70 samples, 0.16%)</title><rect x="91.7918%" y="629" width="0.1587%" height="15" fill="rgb(212,185,49)"/><text x="92.0418%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (70 samples, 0.16%)</title><rect x="91.7918%" y="613" width="0.1587%" height="15" fill="rgb(215,175,22)"/><text x="92.0418%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (70 samples, 0.16%)</title><rect x="91.7918%" y="597" width="0.1587%" height="15" fill="rgb(250,205,14)"/><text x="92.0418%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (70 samples, 0.16%)</title><rect x="91.7918%" y="581" width="0.1587%" height="15" fill="rgb(225,211,22)"/><text x="92.0418%" y="591.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (168 samples, 0.38%)</title><rect x="91.7623%" y="677" width="0.3809%" height="15" fill="rgb(251,179,42)"/><text x="92.0123%" y="687.50"></text></g><g><title>regex::utf8::decode_utf8 (73 samples, 0.17%)</title><rect x="91.9777%" y="661" width="0.1655%" height="15" fill="rgb(208,216,51)"/><text x="92.2277%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1,662 samples, 3.77%)</title><rect x="92.1659%" y="677" width="3.7685%" height="15" fill="rgb(235,36,11)"/><text x="92.4159%" y="687.50">allo..</text></g><g><title>core::ptr::write (1,460 samples, 3.31%)</title><rect x="92.6239%" y="661" width="3.3105%" height="15" fill="rgb(213,189,28)"/><text x="92.8739%" y="671.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (60 samples, 0.14%)</title><rect x="96.4151%" y="645" width="0.1360%" height="15" fill="rgb(227,203,42)"/><text x="96.6651%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (65 samples, 0.15%)</title><rect x="96.4151%" y="661" width="0.1474%" height="15" fill="rgb(244,72,36)"/><text x="96.6651%" y="671.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (282 samples, 0.64%)</title><rect x="95.9367%" y="677" width="0.6394%" height="15" fill="rgb(213,53,17)"/><text x="96.1867%" y="687.50"></text></g><g><title>regex::input::InputAt::next_pos (51 samples, 0.12%)</title><rect x="96.5761%" y="677" width="0.1156%" height="15" fill="rgb(207,167,3)"/><text x="96.8261%" y="687.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (2,781 samples, 6.31%)</title><rect x="90.7669%" y="709" width="6.3058%" height="15" fill="rgb(216,98,30)"/><text x="91.0169%" y="719.50">regex::b..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (2,780 samples, 6.30%)</title><rect x="90.7691%" y="693" width="6.3036%" height="15" fill="rgb(236,123,15)"/><text x="91.0191%" y="703.50">regex::b..</text></g><g><title>regex::prog::InstRanges::matches (168 samples, 0.38%)</title><rect x="96.6918%" y="677" width="0.3809%" height="15" fill="rgb(248,81,50)"/><text x="96.9418%" y="687.50"></text></g><g><title>core::cmp::PartialOrd::le (89 samples, 0.20%)</title><rect x="96.8709%" y="661" width="0.2018%" height="15" fill="rgb(214,120,4)"/><text x="97.1209%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (87 samples, 0.20%)</title><rect x="97.0795%" y="693" width="0.1973%" height="15" fill="rgb(208,179,34)"/><text x="97.3295%" y="703.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (2,876 samples, 6.52%)</title><rect x="90.7578%" y="789" width="6.5212%" height="15" fill="rgb(227,140,7)"/><text x="91.0078%" y="799.50">regex::ex..</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (2,876 samples, 6.52%)</title><rect x="90.7578%" y="773" width="6.5212%" height="15" fill="rgb(214,22,6)"/><text x="91.0078%" y="783.50">regex::ex..</text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (2,875 samples, 6.52%)</title><rect x="90.7601%" y="757" width="6.5190%" height="15" fill="rgb(207,137,27)"/><text x="91.0101%" y="767.50">regex::ex..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (2,875 samples, 6.52%)</title><rect x="90.7601%" y="741" width="6.5190%" height="15" fill="rgb(210,8,46)"/><text x="91.0101%" y="751.50">regex::ba..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (2,875 samples, 6.52%)</title><rect x="90.7601%" y="725" width="6.5190%" height="15" fill="rgb(240,16,54)"/><text x="91.0101%" y="735.50">regex::ba..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::clear (91 samples, 0.21%)</title><rect x="97.0727%" y="709" width="0.2063%" height="15" fill="rgb(211,209,29)"/><text x="97.3227%" y="719.50"></text></g><g><title>regex::dfa::Fsm::next_si (198 samples, 0.45%)</title><rect x="98.5307%" y="741" width="0.4490%" height="15" fill="rgb(226,228,24)"/><text x="98.7807%" y="751.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (114 samples, 0.26%)</title><rect x="98.7211%" y="725" width="0.2585%" height="15" fill="rgb(222,84,9)"/><text x="98.9711%" y="735.50"></text></g><g><title>regex::dfa::Fsm::forward (753 samples, 1.71%)</title><rect x="97.2790%" y="773" width="1.7074%" height="15" fill="rgb(234,203,30)"/><text x="97.5290%" y="783.50"></text></g><g><title>regex::dfa::Fsm::exec_at (753 samples, 1.71%)</title><rect x="97.2790%" y="757" width="1.7074%" height="15" fill="rgb(238,109,14)"/><text x="97.5290%" y="767.50"></text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,067 samples, 9.22%)</title><rect x="90.7555%" y="837" width="9.2218%" height="15" fill="rgb(233,206,34)"/><text x="91.0055%" y="847.50">&lt;regex::re_tr..</text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (4,067 samples, 9.22%)</title><rect x="90.7555%" y="821" width="9.2218%" height="15" fill="rgb(220,167,47)"/><text x="91.0055%" y="831.50">&lt;regex::exec:..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (4,067 samples, 9.22%)</title><rect x="90.7555%" y="805" width="9.2218%" height="15" fill="rgb(238,105,10)"/><text x="91.0055%" y="815.50">&lt;regex::exec:..</text></g><g><title>regex::exec::ExecNoSync::find_dfa_forward (1,190 samples, 2.70%)</title><rect x="97.2790%" y="789" width="2.6983%" height="15" fill="rgb(213,227,17)"/><text x="97.5290%" y="799.50">re..</text></g><g><title>regex::dfa::Fsm::reverse (437 samples, 0.99%)</title><rect x="98.9864%" y="773" width="0.9909%" height="15" fill="rgb(217,132,38)"/><text x="99.2364%" y="783.50"></text></g><g><title>regex::dfa::Fsm::exec_at_reverse (437 samples, 0.99%)</title><rect x="98.9864%" y="757" width="0.9909%" height="15" fill="rgb(242,146,4)"/><text x="99.2364%" y="767.50"></text></g><g><title>regex::dfa::Fsm::next_si (324 samples, 0.73%)</title><rect x="99.2427%" y="741" width="0.7347%" height="15" fill="rgb(212,61,9)"/><text x="99.4927%" y="751.50"></text></g><g><title>regex::dfa::Transitions::next_unchecked (322 samples, 0.73%)</title><rect x="99.2472%" y="725" width="0.7301%" height="15" fill="rgb(247,126,22)"/><text x="99.4972%" y="735.50"></text></g><g><title>compiler::pre_fixer::fix_iter (5,095 samples, 11.55%)</title><rect x="88.4268%" y="965" width="11.5528%" height="15" fill="rgb(220,196,2)"/><text x="88.6768%" y="975.50">compiler::pre_fix..</text></g><g><title>regex::re_unicode::Regex::replace (5,095 samples, 11.55%)</title><rect x="88.4268%" y="949" width="11.5528%" height="15" fill="rgb(208,46,4)"/><text x="88.6768%" y="959.50">regex::re_unicode..</text></g><g><title>regex::re_unicode::Regex::replacen (5,095 samples, 11.55%)</title><rect x="88.4268%" y="933" width="11.5528%" height="15" fill="rgb(252,104,46)"/><text x="88.6768%" y="943.50">regex::re_unicode..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek (4,068 samples, 9.22%)</title><rect x="90.7555%" y="917" width="9.2241%" height="15" fill="rgb(237,152,48)"/><text x="91.0055%" y="927.50">core::iter::a..</text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (4,068 samples, 9.22%)</title><rect x="90.7555%" y="901" width="9.2241%" height="15" fill="rgb(221,59,37)"/><text x="91.0055%" y="911.50">core::option:..</text></g><g><title>core::iter::adapters::Peekable&lt;I&gt;::peek::{{closure}} (4,068 samples, 9.22%)</title><rect x="90.7555%" y="885" width="9.2241%" height="15" fill="rgb(209,202,51)"/><text x="91.0055%" y="895.50">core::iter::a..</text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,068 samples, 9.22%)</title><rect x="90.7555%" y="869" width="9.2241%" height="15" fill="rgb(228,81,30)"/><text x="91.0055%" y="879.50">&lt;core::iter::..</text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (4,068 samples, 9.22%)</title><rect x="90.7555%" y="853" width="9.2241%" height="15" fill="rgb(227,42,39)"/><text x="91.0055%" y="863.50">&lt;regex::re_un..</text></g><g><title>compiler::pre_fixer::pre_fix (25,878 samples, 58.68%)</title><rect x="41.3042%" y="981" width="58.6776%" height="15" fill="rgb(221,26,2)"/><text x="41.5542%" y="991.50">compiler::pre_fixer::pre_fix</text></g><g><title>bench (44,096 samples, 99.99%)</title><rect x="0.0000%" y="1109" width="99.9864%" height="15" fill="rgb(254,61,31)"/><text x="0.2500%" y="1119.50">bench</text></g><g><title>_start (29,959 samples, 67.93%)</title><rect x="32.0552%" y="1093" width="67.9312%" height="15" fill="rgb(222,173,38)"/><text x="32.3052%" y="1103.50">_start</text></g><g><title>__libc_start_main (29,959 samples, 67.93%)</title><rect x="32.0552%" y="1077" width="67.9312%" height="15" fill="rgb(218,50,12)"/><text x="32.3052%" y="1087.50">__libc_start_main</text></g><g><title>main (29,959 samples, 67.93%)</title><rect x="32.0552%" y="1061" width="67.9312%" height="15" fill="rgb(223,88,40)"/><text x="32.3052%" y="1071.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29,958 samples, 67.93%)</title><rect x="32.0575%" y="1045" width="67.9289%" height="15" fill="rgb(237,54,19)"/><text x="32.3075%" y="1055.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (29,958 samples, 67.93%)</title><rect x="32.0575%" y="1029" width="67.9289%" height="15" fill="rgb(251,129,25)"/><text x="32.3075%" y="1039.50">core::ops::function::FnOnce::call_once</text></g><g><title>bench::main (29,958 samples, 67.93%)</title><rect x="32.0575%" y="1013" width="67.9289%" height="15" fill="rgb(238,97,19)"/><text x="32.3075%" y="1023.50">bench::main</text></g><g><title>compiler::compile (29,957 samples, 67.93%)</title><rect x="32.0598%" y="997" width="67.9266%" height="15" fill="rgb(240,169,18)"/><text x="32.3098%" y="1007.50">compiler::compile</text></g><g><title>all (44,102 samples, 100%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(230,187,49)"/><text x="0.2500%" y="1135.50"></text></g></svg></svg>